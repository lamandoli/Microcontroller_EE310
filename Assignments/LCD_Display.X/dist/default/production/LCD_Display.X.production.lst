

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 28 16:21:23 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text36,global,reloc=4,class=CODE,space=0,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	ivt0x6008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 13/12/2024 GMT
    58                           ; 
    59                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F47K42 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   003FE0                     bsr             equ	16352
    92   003FE9                     fsr0            equ	16361
    93   003FEA                     fsr0h           equ	16362
    94   003FE9                     fsr0l           equ	16361
    95   003FE1                     fsr1            equ	16353
    96   003FE2                     fsr1h           equ	16354
    97   003FE1                     fsr1l           equ	16353
    98   003FD9                     fsr2            equ	16345
    99   003FDA                     fsr2h           equ	16346
   100   003FD9                     fsr2l           equ	16345
   101   003FEF                     indf0           equ	16367
   102   003FE7                     indf1           equ	16359
   103   003FDF                     indf2           equ	16351
   104   003FD2                     intcon          equ	16338
   105   0039E5                     nvmcon          equ	14821
   106   003FF9                     pcl             equ	16377
   107   003FFA                     pclath          equ	16378
   108   003FFB                     pclatu          equ	16379
   109   003FEB                     plusw0          equ	16363
   110   003FE3                     plusw1          equ	16355
   111   003FDB                     plusw2          equ	16347
   112   003FED                     postdec0        equ	16365
   113   003FE5                     postdec1        equ	16357
   114   003FDD                     postdec2        equ	16349
   115   003FEE                     postinc0        equ	16366
   116   003FE6                     postinc1        equ	16358
   117   003FDE                     postinc2        equ	16350
   118   003FEC                     preinc0         equ	16364
   119   003FE4                     preinc1         equ	16356
   120   003FDC                     preinc2         equ	16348
   121   003FF3                     prod            equ	16371
   122   003FF4                     prodh           equ	16372
   123   003FF3                     prodl           equ	16371
   124   003FD8                     status          equ	16344
   125   003FF5                     tablat          equ	16373
   126   003FF6                     tblptr          equ	16374
   127   003FF7                     tblptrh         equ	16375
   128   003FF6                     tblptrl         equ	16374
   129   003FF8                     tblptru         equ	16376
   130   003FFD                     tosl            equ	16381
   131   003FE8                     wreg            equ	16360
   132   003880                     STATUS_CSHAD    equ	14464	;# 
   133   003881                     WREG_CSHAD      equ	14465	;# 
   134   003882                     BSR_CSHAD       equ	14466	;# 
   135   003883                     SHADCON         equ	14467	;# 
   136   003884                     STATUS_SHAD     equ	14468	;# 
   137   003885                     WREG_SHAD       equ	14469	;# 
   138   003886                     BSR_SHAD        equ	14470	;# 
   139   003887                     PCLATH_SHAD     equ	14471	;# 
   140   003888                     PCLATU_SHAD     equ	14472	;# 
   141   003889                     FSR0SH          equ	14473	;# 
   142   003889                     FSR0L_SHAD      equ	14473	;# 
   143   00388A                     FSR0H_SHAD      equ	14474	;# 
   144   00388B                     FSR1SH          equ	14475	;# 
   145   00388B                     FSR1L_SHAD      equ	14475	;# 
   146   00388C                     FSR1H_SHAD      equ	14476	;# 
   147   00388D                     FSR2SH          equ	14477	;# 
   148   00388D                     FSR2L_SHAD      equ	14477	;# 
   149   00388E                     FSR2H_SHAD      equ	14478	;# 
   150   00388F                     PRODSH          equ	14479	;# 
   151   00388F                     PRODL_SHAD      equ	14479	;# 
   152   003890                     PRODH_SHAD      equ	14480	;# 
   153   00389D                     IVTADL          equ	14493	;# 
   154   00389E                     IVTADH          equ	14494	;# 
   155   00389F                     IVTADU          equ	14495	;# 
   156   00395B                     WDTCON0         equ	14683	;# 
   157   00395C                     WDTCON1         equ	14684	;# 
   158   00395D                     WDTPSL          equ	14685	;# 
   159   00395E                     WDTPSH          equ	14686	;# 
   160   00395F                     WDTTMR          equ	14687	;# 
   161   003960                     CRCDATA         equ	14688	;# 
   162   003960                     CRCDATL         equ	14688	;# 
   163   003961                     CRCDATH         equ	14689	;# 
   164   003962                     CRCACC          equ	14690	;# 
   165   003962                     CRCACCL         equ	14690	;# 
   166   003963                     CRCACCH         equ	14691	;# 
   167   003964                     CRCSHFT         equ	14692	;# 
   168   003964                     CRCSHIFTL       equ	14692	;# 
   169   003965                     CRCSHIFTH       equ	14693	;# 
   170   003966                     CRCXOR          equ	14694	;# 
   171   003966                     CRCXORL         equ	14694	;# 
   172   003967                     CRCXORH         equ	14695	;# 
   173   003968                     CRCCON0         equ	14696	;# 
   174   003969                     CRCCON1         equ	14697	;# 
   175   003976                     SCANLADR        equ	14710	;# 
   176   003976                     SCANLADRL       equ	14710	;# 
   177   003977                     SCANLADRH       equ	14711	;# 
   178   003978                     SCANLADRU       equ	14712	;# 
   179   003979                     SCANHADR        equ	14713	;# 
   180   003979                     SCANHADRL       equ	14713	;# 
   181   00397A                     SCANHADRH       equ	14714	;# 
   182   00397B                     SCANHADRU       equ	14715	;# 
   183   00397C                     SCANCON0        equ	14716	;# 
   184   00397D                     SCANTRIG        equ	14717	;# 
   185   003980                     IPR0            equ	14720	;# 
   186   003981                     IPR1            equ	14721	;# 
   187   003982                     IPR2            equ	14722	;# 
   188   003983                     IPR3            equ	14723	;# 
   189   003984                     IPR4            equ	14724	;# 
   190   003985                     IPR5            equ	14725	;# 
   191   003986                     IPR6            equ	14726	;# 
   192   003987                     IPR7            equ	14727	;# 
   193   003988                     IPR8            equ	14728	;# 
   194   003989                     IPR9            equ	14729	;# 
   195   00398A                     IPR10           equ	14730	;# 
   196   003990                     PIE0            equ	14736	;# 
   197   003991                     PIE1            equ	14737	;# 
   198   003992                     PIE2            equ	14738	;# 
   199   003993                     PIE3            equ	14739	;# 
   200   003994                     PIE4            equ	14740	;# 
   201   003995                     PIE5            equ	14741	;# 
   202   003996                     PIE6            equ	14742	;# 
   203   003997                     PIE7            equ	14743	;# 
   204   003998                     PIE8            equ	14744	;# 
   205   003999                     PIE9            equ	14745	;# 
   206   00399A                     PIE10           equ	14746	;# 
   207   0039A0                     PIR0            equ	14752	;# 
   208   0039A1                     PIR1            equ	14753	;# 
   209   0039A2                     PIR2            equ	14754	;# 
   210   0039A3                     PIR3            equ	14755	;# 
   211   0039A4                     PIR4            equ	14756	;# 
   212   0039A5                     PIR5            equ	14757	;# 
   213   0039A6                     PIR6            equ	14758	;# 
   214   0039A7                     PIR7            equ	14759	;# 
   215   0039A8                     PIR8            equ	14760	;# 
   216   0039A9                     PIR9            equ	14761	;# 
   217   0039AA                     PIR10           equ	14762	;# 
   218   0039C0                     PMD0            equ	14784	;# 
   219   0039C1                     PMD1            equ	14785	;# 
   220   0039C2                     PMD2            equ	14786	;# 
   221   0039C3                     PMD3            equ	14787	;# 
   222   0039C4                     PMD4            equ	14788	;# 
   223   0039C5                     PMD5            equ	14789	;# 
   224   0039C6                     PMD6            equ	14790	;# 
   225   0039C7                     PMD7            equ	14791	;# 
   226   0039D0                     BORCON          equ	14800	;# 
   227   0039D1                     VREGCON         equ	14801	;# 
   228   0039D8                     CPUDOZE         equ	14808	;# 
   229   0039D9                     OSCCON1         equ	14809	;# 
   230   0039DA                     OSCCON2         equ	14810	;# 
   231   0039DB                     OSCCON3         equ	14811	;# 
   232   0039DC                     OSCSTAT         equ	14812	;# 
   233   0039DC                     OSCSTAT1        equ	14812	;# 
   234   0039DD                     OSCEN           equ	14813	;# 
   235   0039DE                     OSCTUNE         equ	14814	;# 
   236   0039DF                     OSCFRQ          equ	14815	;# 
   237   0039E0                     NVMADRL         equ	14816	;# 
   238   0039E1                     NVMADRH         equ	14817	;# 
   239   0039E3                     NVMDAT          equ	14819	;# 
   240   0039E5                     NVMCON1         equ	14821	;# 
   241   0039E6                     NVMCON2         equ	14822	;# 
   242   0039EF                     PRLOCK          equ	14831	;# 
   243   0039F1                     ISRPR           equ	14833	;# 
   244   0039F2                     MAINPR          equ	14834	;# 
   245   0039F3                     DMA1PR          equ	14835	;# 
   246   0039F4                     DMA2PR          equ	14836	;# 
   247   0039F7                     SCANPR          equ	14839	;# 
   248   003A00                     RA0PPS          equ	14848	;# 
   249   003A01                     RA1PPS          equ	14849	;# 
   250   003A02                     RA2PPS          equ	14850	;# 
   251   003A03                     RA3PPS          equ	14851	;# 
   252   003A04                     RA4PPS          equ	14852	;# 
   253   003A05                     RA5PPS          equ	14853	;# 
   254   003A06                     RA6PPS          equ	14854	;# 
   255   003A07                     RA7PPS          equ	14855	;# 
   256   003A08                     RB0PPS          equ	14856	;# 
   257   003A09                     RB1PPS          equ	14857	;# 
   258   003A0A                     RB2PPS          equ	14858	;# 
   259   003A0B                     RB3PPS          equ	14859	;# 
   260   003A0C                     RB4PPS          equ	14860	;# 
   261   003A0D                     RB5PPS          equ	14861	;# 
   262   003A0E                     RB6PPS          equ	14862	;# 
   263   003A0F                     RB7PPS          equ	14863	;# 
   264   003A10                     RC0PPS          equ	14864	;# 
   265   003A11                     RC1PPS          equ	14865	;# 
   266   003A12                     RC2PPS          equ	14866	;# 
   267   003A13                     RC3PPS          equ	14867	;# 
   268   003A14                     RC4PPS          equ	14868	;# 
   269   003A15                     RC5PPS          equ	14869	;# 
   270   003A16                     RC6PPS          equ	14870	;# 
   271   003A17                     RC7PPS          equ	14871	;# 
   272   003A18                     RD0PPS          equ	14872	;# 
   273   003A19                     RD1PPS          equ	14873	;# 
   274   003A1A                     RD2PPS          equ	14874	;# 
   275   003A1B                     RD3PPS          equ	14875	;# 
   276   003A1C                     RD4PPS          equ	14876	;# 
   277   003A1D                     RD5PPS          equ	14877	;# 
   278   003A1E                     RD6PPS          equ	14878	;# 
   279   003A1F                     RD7PPS          equ	14879	;# 
   280   003A20                     RE0PPS          equ	14880	;# 
   281   003A21                     RE1PPS          equ	14881	;# 
   282   003A22                     RE2PPS          equ	14882	;# 
   283   003A40                     ANSELA          equ	14912	;# 
   284   003A41                     WPUA            equ	14913	;# 
   285   003A42                     ODCONA          equ	14914	;# 
   286   003A43                     SLRCONA         equ	14915	;# 
   287   003A44                     INLVLA          equ	14916	;# 
   288   003A45                     IOCAP           equ	14917	;# 
   289   003A46                     IOCAN           equ	14918	;# 
   290   003A47                     IOCAF           equ	14919	;# 
   291   003A50                     ANSELB          equ	14928	;# 
   292   003A51                     WPUB            equ	14929	;# 
   293   003A52                     ODCONB          equ	14930	;# 
   294   003A53                     SLRCONB         equ	14931	;# 
   295   003A54                     INLVLB          equ	14932	;# 
   296   003A55                     IOCBP           equ	14933	;# 
   297   003A56                     IOCBN           equ	14934	;# 
   298   003A57                     IOCBF           equ	14935	;# 
   299   003A5A                     RB1I2C          equ	14938	;# 
   300   003A5B                     RB2I2C          equ	14939	;# 
   301   003A60                     ANSELC          equ	14944	;# 
   302   003A61                     WPUC            equ	14945	;# 
   303   003A62                     ODCONC          equ	14946	;# 
   304   003A63                     SLRCONC         equ	14947	;# 
   305   003A64                     INLVLC          equ	14948	;# 
   306   003A65                     IOCCP           equ	14949	;# 
   307   003A66                     IOCCN           equ	14950	;# 
   308   003A67                     IOCCF           equ	14951	;# 
   309   003A6A                     RC3I2C          equ	14954	;# 
   310   003A6B                     RC4I2C          equ	14955	;# 
   311   003A70                     ANSELD          equ	14960	;# 
   312   003A71                     WPUD            equ	14961	;# 
   313   003A72                     ODCOND          equ	14962	;# 
   314   003A73                     SLRCOND         equ	14963	;# 
   315   003A74                     INLVLD          equ	14964	;# 
   316   003A7A                     RD0I2C          equ	14970	;# 
   317   003A7B                     RD1I2C          equ	14971	;# 
   318   003A80                     ANSELE          equ	14976	;# 
   319   003A81                     WPUE            equ	14977	;# 
   320   003A82                     ODCONE          equ	14978	;# 
   321   003A83                     SLRCONE         equ	14979	;# 
   322   003A84                     INLVLE          equ	14980	;# 
   323   003A85                     IOCEP           equ	14981	;# 
   324   003A86                     IOCEN           equ	14982	;# 
   325   003A87                     IOCEF           equ	14983	;# 
   326   003ABF                     PPSLOCK         equ	15039	;# 
   327   003AC0                     INT0PPS         equ	15040	;# 
   328   003AC1                     INT1PPS         equ	15041	;# 
   329   003AC2                     INT2PPS         equ	15042	;# 
   330   003AC3                     T0CKIPPS        equ	15043	;# 
   331   003AC4                     T1CKIPPS        equ	15044	;# 
   332   003AC5                     T1GPPS          equ	15045	;# 
   333   003AC6                     T3CKIPPS        equ	15046	;# 
   334   003AC7                     T3GPPS          equ	15047	;# 
   335   003AC8                     T5CKIPPS        equ	15048	;# 
   336   003AC9                     T5GPPS          equ	15049	;# 
   337   003ACA                     T2INPPS         equ	15050	;# 
   338   003ACB                     T4INPPS         equ	15051	;# 
   339   003ACC                     T6INPPS         equ	15052	;# 
   340   003ACD                     CCP1PPS         equ	15053	;# 
   341   003ACE                     CCP2PPS         equ	15054	;# 
   342   003ACF                     CCP3PPS         equ	15055	;# 
   343   003AD0                     CCP4PPS         equ	15056	;# 
   344   003AD1                     SMT1WINPPS      equ	15057	;# 
   345   003AD2                     SMT1SIGPPS      equ	15058	;# 
   346   003AD3                     CWG1INPPS       equ	15059	;# 
   347   003AD4                     CWG2INPPS       equ	15060	;# 
   348   003AD5                     CWG3INPPS       equ	15061	;# 
   349   003AD6                     MD1CARLPPS      equ	15062	;# 
   350   003AD7                     MD1CARHPPS      equ	15063	;# 
   351   003AD8                     MD1SRCPPS       equ	15064	;# 
   352   003AD9                     CLCIN0PPS       equ	15065	;# 
   353   003ADA                     CLCIN1PPS       equ	15066	;# 
   354   003ADB                     CLCIN2PPS       equ	15067	;# 
   355   003ADC                     CLCIN3PPS       equ	15068	;# 
   356   003ADD                     ADACTPPS        equ	15069	;# 
   357   003ADE                     SPI1SCKPPS      equ	15070	;# 
   358   003ADF                     SPI1SDIPPS      equ	15071	;# 
   359   003AE0                     SPI1SSPPS       equ	15072	;# 
   360   003AE1                     I2C1SCLPPS      equ	15073	;# 
   361   003AE2                     I2C1SDAPPS      equ	15074	;# 
   362   003AE3                     I2C2SCLPPS      equ	15075	;# 
   363   003AE4                     I2C2SDAPPS      equ	15076	;# 
   364   003AE5                     U1RXPPS         equ	15077	;# 
   365   003AE6                     U1CTSPPS        equ	15078	;# 
   366   003AE8                     U2RXPPS         equ	15080	;# 
   367   003AE9                     U2CTSPPS        equ	15081	;# 
   368   003BC9                     DMA2BUF         equ	15305	;# 
   369   003BCA                     DMA2DCNT        equ	15306	;# 
   370   003BCA                     DMA2DCNTL       equ	15306	;# 
   371   003BCB                     DMA2DCNTH       equ	15307	;# 
   372   003BCC                     DMA2DPTR        equ	15308	;# 
   373   003BCC                     DMA2DPTRL       equ	15308	;# 
   374   003BCD                     DMA2DPTRH       equ	15309	;# 
   375   003BCE                     DMA2DSZ         equ	15310	;# 
   376   003BCE                     DMA2DSZL        equ	15310	;# 
   377   003BCF                     DMA2DSZH        equ	15311	;# 
   378   003BD0                     DMA2DSA         equ	15312	;# 
   379   003BD0                     DMA2DSAL        equ	15312	;# 
   380   003BD1                     DMA2DSAH        equ	15313	;# 
   381   003BD2                     DMA2SCNT        equ	15314	;# 
   382   003BD2                     DMA2SCNTL       equ	15314	;# 
   383   003BD3                     DMA2SCNTH       equ	15315	;# 
   384   003BD4                     DMA2SPTR        equ	15316	;# 
   385   003BD4                     DMA2SPTRL       equ	15316	;# 
   386   003BD5                     DMA2SPTRH       equ	15317	;# 
   387   003BD6                     DMA2SPTRU       equ	15318	;# 
   388   003BD7                     DMA2SSZ         equ	15319	;# 
   389   003BD7                     DMA2SSZL        equ	15319	;# 
   390   003BD8                     DMA2SSZH        equ	15320	;# 
   391   003BD9                     DMA2SSA         equ	15321	;# 
   392   003BD9                     DMA2SSAL        equ	15321	;# 
   393   003BDA                     DMA2SSAH        equ	15322	;# 
   394   003BDB                     DMA2SSAU        equ	15323	;# 
   395   003BDC                     DMA2CON0        equ	15324	;# 
   396   003BDD                     DMA2CON1        equ	15325	;# 
   397   003BDE                     DMA2AIRQ        equ	15326	;# 
   398   003BDF                     DMA2SIRQ        equ	15327	;# 
   399   003BE9                     DMA1BUF         equ	15337	;# 
   400   003BEA                     DMA1DCNT        equ	15338	;# 
   401   003BEA                     DMA1DCNTL       equ	15338	;# 
   402   003BEB                     DMA1DCNTH       equ	15339	;# 
   403   003BEC                     DMA1DPTR        equ	15340	;# 
   404   003BEC                     DMA1DPTRL       equ	15340	;# 
   405   003BED                     DMA1DPTRH       equ	15341	;# 
   406   003BEE                     DMA1DSZ         equ	15342	;# 
   407   003BEE                     DMA1DSZL        equ	15342	;# 
   408   003BEF                     DMA1DSZH        equ	15343	;# 
   409   003BF0                     DMA1DSA         equ	15344	;# 
   410   003BF0                     DMA1DSAL        equ	15344	;# 
   411   003BF1                     DMA1DSAH        equ	15345	;# 
   412   003BF2                     DMA1SCNT        equ	15346	;# 
   413   003BF2                     DMA1SCNTL       equ	15346	;# 
   414   003BF3                     DMA1SCNTH       equ	15347	;# 
   415   003BF4                     DMA1SPTR        equ	15348	;# 
   416   003BF4                     DMA1SPTRL       equ	15348	;# 
   417   003BF5                     DMA1SPTRH       equ	15349	;# 
   418   003BF6                     DMA1SPTRU       equ	15350	;# 
   419   003BF7                     DMA1SSZ         equ	15351	;# 
   420   003BF7                     DMA1SSZL        equ	15351	;# 
   421   003BF8                     DMA1SSZH        equ	15352	;# 
   422   003BF9                     DMA1SSA         equ	15353	;# 
   423   003BF9                     DMA1SSAL        equ	15353	;# 
   424   003BFA                     DMA1SSAH        equ	15354	;# 
   425   003BFB                     DMA1SSAU        equ	15355	;# 
   426   003BFC                     DMA1CON0        equ	15356	;# 
   427   003BFD                     DMA1CON1        equ	15357	;# 
   428   003BFE                     DMA1AIRQ        equ	15358	;# 
   429   003BFF                     DMA1SIRQ        equ	15359	;# 
   430   003C56                     CLC4CON         equ	15446	;# 
   431   003C57                     CLC4POL         equ	15447	;# 
   432   003C58                     CLC4SEL0        equ	15448	;# 
   433   003C59                     CLC4SEL1        equ	15449	;# 
   434   003C5A                     CLC4SEL2        equ	15450	;# 
   435   003C5B                     CLC4SEL3        equ	15451	;# 
   436   003C5C                     CLC4GLS0        equ	15452	;# 
   437   003C5D                     CLC4GLS1        equ	15453	;# 
   438   003C5E                     CLC4GLS2        equ	15454	;# 
   439   003C5F                     CLC4GLS3        equ	15455	;# 
   440   003C60                     CLC3CON         equ	15456	;# 
   441   003C61                     CLC3POL         equ	15457	;# 
   442   003C62                     CLC3SEL0        equ	15458	;# 
   443   003C63                     CLC3SEL1        equ	15459	;# 
   444   003C64                     CLC3SEL2        equ	15460	;# 
   445   003C65                     CLC3SEL3        equ	15461	;# 
   446   003C66                     CLC3GLS0        equ	15462	;# 
   447   003C67                     CLC3GLS1        equ	15463	;# 
   448   003C68                     CLC3GLS2        equ	15464	;# 
   449   003C69                     CLC3GLS3        equ	15465	;# 
   450   003C6A                     CLC2CON         equ	15466	;# 
   451   003C6B                     CLC2POL         equ	15467	;# 
   452   003C6C                     CLC2SEL0        equ	15468	;# 
   453   003C6D                     CLC2SEL1        equ	15469	;# 
   454   003C6E                     CLC2SEL2        equ	15470	;# 
   455   003C6F                     CLC2SEL3        equ	15471	;# 
   456   003C70                     CLC2GLS0        equ	15472	;# 
   457   003C71                     CLC2GLS1        equ	15473	;# 
   458   003C72                     CLC2GLS2        equ	15474	;# 
   459   003C73                     CLC2GLS3        equ	15475	;# 
   460   003C74                     CLC1CON         equ	15476	;# 
   461   003C75                     CLC1POL         equ	15477	;# 
   462   003C76                     CLC1SEL0        equ	15478	;# 
   463   003C77                     CLC1SEL1        equ	15479	;# 
   464   003C78                     CLC1SEL2        equ	15480	;# 
   465   003C79                     CLC1SEL3        equ	15481	;# 
   466   003C7A                     CLC1GLS0        equ	15482	;# 
   467   003C7B                     CLC1GLS1        equ	15483	;# 
   468   003C7C                     CLC1GLS2        equ	15484	;# 
   469   003C7D                     CLC1GLS3        equ	15485	;# 
   470   003C7E                     CLCDATA0        equ	15486	;# 
   471   003CE5                     CLKRCON         equ	15589	;# 
   472   003CE6                     CLKRCLK         equ	15590	;# 
   473   003CFA                     MD1CON0         equ	15610	;# 
   474   003CFB                     MD1CON1         equ	15611	;# 
   475   003CFC                     MD1SRC          equ	15612	;# 
   476   003CFD                     MD1CARL         equ	15613	;# 
   477   003CFE                     MD1CARH         equ	15614	;# 
   478   003D10                     SPI1RXB         equ	15632	;# 
   479   003D11                     SPI1TXB         equ	15633	;# 
   480   003D12                     SPI1TCNT        equ	15634	;# 
   481   003D12                     SPI1TCNTL       equ	15634	;# 
   482   003D13                     SPI1TCNTH       equ	15635	;# 
   483   003D14                     SPI1CON0        equ	15636	;# 
   484   003D15                     SPI1CON1        equ	15637	;# 
   485   003D16                     SPI1CON2        equ	15638	;# 
   486   003D17                     SPI1STATUS      equ	15639	;# 
   487   003D18                     SPI1TWIDTH      equ	15640	;# 
   488   003D19                     SPI1BAUD        equ	15641	;# 
   489   003D1A                     SPI1INTF        equ	15642	;# 
   490   003D1B                     SPI1INTE        equ	15643	;# 
   491   003D1C                     SPI1CLK         equ	15644	;# 
   492   003D54                     I2C2RXB         equ	15700	;# 
   493   003D55                     I2C2TXB         equ	15701	;# 
   494   003D56                     I2C2CNT         equ	15702	;# 
   495   003D57                     I2C2ADB0        equ	15703	;# 
   496   003D58                     I2C2ADB1        equ	15704	;# 
   497   003D59                     I2C2ADR0        equ	15705	;# 
   498   003D5A                     I2C2ADR1        equ	15706	;# 
   499   003D5B                     I2C2ADR2        equ	15707	;# 
   500   003D5C                     I2C2ADR3        equ	15708	;# 
   501   003D5D                     I2C2CON0        equ	15709	;# 
   502   003D5E                     I2C2CON1        equ	15710	;# 
   503   003D5F                     I2C2CON2        equ	15711	;# 
   504   003D60                     I2C2ERR         equ	15712	;# 
   505   003D61                     I2C2STAT0       equ	15713	;# 
   506   003D62                     I2C2STAT1       equ	15714	;# 
   507   003D63                     I2C2PIR         equ	15715	;# 
   508   003D64                     I2C2PIE         equ	15716	;# 
   509   003D65                     I2C2CLK         equ	15717	;# 
   510   003D66                     I2C2BTO         equ	15718	;# 
   511   003D6A                     I2C1RXB         equ	15722	;# 
   512   003D6B                     I2C1TXB         equ	15723	;# 
   513   003D6C                     I2C1CNT         equ	15724	;# 
   514   003D6D                     I2C1ADB0        equ	15725	;# 
   515   003D6E                     I2C1ADB1        equ	15726	;# 
   516   003D6F                     I2C1ADR0        equ	15727	;# 
   517   003D70                     I2C1ADR1        equ	15728	;# 
   518   003D71                     I2C1ADR2        equ	15729	;# 
   519   003D72                     I2C1ADR3        equ	15730	;# 
   520   003D73                     I2C1CON0        equ	15731	;# 
   521   003D74                     I2C1CON1        equ	15732	;# 
   522   003D75                     I2C1CON2        equ	15733	;# 
   523   003D76                     I2C1ERR         equ	15734	;# 
   524   003D77                     I2C1STAT0       equ	15735	;# 
   525   003D78                     I2C1STAT1       equ	15736	;# 
   526   003D79                     I2C1PIR         equ	15737	;# 
   527   003D7A                     I2C1PIE         equ	15738	;# 
   528   003D7B                     I2C1CLK         equ	15739	;# 
   529   003D7C                     I2C1BTO         equ	15740	;# 
   530   003DD0                     U2RXB           equ	15824	;# 
   531   003DD0                     U2RXBL          equ	15824	;# 
   532   003DD2                     U2TXB           equ	15826	;# 
   533   003DD2                     U2TXBL          equ	15826	;# 
   534   003DD4                     U2P1            equ	15828	;# 
   535   003DD4                     U2P1L           equ	15828	;# 
   536   003DD6                     U2P2            equ	15830	;# 
   537   003DD6                     U2P2L           equ	15830	;# 
   538   003DD8                     U2P3            equ	15832	;# 
   539   003DD8                     U2P3L           equ	15832	;# 
   540   003DDA                     U2CON0          equ	15834	;# 
   541   003DDB                     U2CON1          equ	15835	;# 
   542   003DDC                     U2CON2          equ	15836	;# 
   543   003DDD                     U2BRG           equ	15837	;# 
   544   003DDD                     U2BRGL          equ	15837	;# 
   545   003DDE                     U2BRGH          equ	15838	;# 
   546   003DDF                     U2FIFO          equ	15839	;# 
   547   003DE0                     U2UIR           equ	15840	;# 
   548   003DE1                     U2ERRIR         equ	15841	;# 
   549   003DE2                     U2ERRIE         equ	15842	;# 
   550   003DE8                     U1RXB           equ	15848	;# 
   551   003DE8                     U1RXBL          equ	15848	;# 
   552   003DE9                     U1RXCHK         equ	15849	;# 
   553   003DEA                     U1TXB           equ	15850	;# 
   554   003DEA                     U1TXBL          equ	15850	;# 
   555   003DEB                     U1TXCHK         equ	15851	;# 
   556   003DEC                     U1P1            equ	15852	;# 
   557   003DEC                     U1P1L           equ	15852	;# 
   558   003DED                     U1P1H           equ	15853	;# 
   559   003DEE                     U1P2            equ	15854	;# 
   560   003DEE                     U1P2L           equ	15854	;# 
   561   003DEF                     U1P2H           equ	15855	;# 
   562   003DF0                     U1P3            equ	15856	;# 
   563   003DF0                     U1P3L           equ	15856	;# 
   564   003DF1                     U1P3H           equ	15857	;# 
   565   003DF2                     U1CON0          equ	15858	;# 
   566   003DF3                     U1CON1          equ	15859	;# 
   567   003DF4                     U1CON2          equ	15860	;# 
   568   003DF5                     U1BRG           equ	15861	;# 
   569   003DF5                     U1BRGL          equ	15861	;# 
   570   003DF6                     U1BRGH          equ	15862	;# 
   571   003DF7                     U1FIFO          equ	15863	;# 
   572   003DF8                     U1UIR           equ	15864	;# 
   573   003DF9                     U1ERRIR         equ	15865	;# 
   574   003DFA                     U1ERRIE         equ	15866	;# 
   575   003E9C                     DAC1CON1        equ	16028	;# 
   576   003E9E                     DAC1CON0        equ	16030	;# 
   577   003EB8                     CM2CON0         equ	16056	;# 
   578   003EB9                     CM2CON1         equ	16057	;# 
   579   003EBA                     CM2NCH          equ	16058	;# 
   580   003EBB                     CM2PCH          equ	16059	;# 
   581   003EBC                     CM1CON0         equ	16060	;# 
   582   003EBD                     CM1CON1         equ	16061	;# 
   583   003EBE                     CM1NCH          equ	16062	;# 
   584   003EBF                     CM1PCH          equ	16063	;# 
   585   003EC0                     CMOUT           equ	16064	;# 
   586   003EC1                     FVRCON          equ	16065	;# 
   587   003EC3                     ZCDCON          equ	16067	;# 
   588   003EC9                     HLVDCON0        equ	16073	;# 
   589   003ECA                     HLVDCON1        equ	16074	;# 
   590   003ED7                     ADCP            equ	16087	;# 
   591   003EDE                     ADLTH           equ	16094	;# 
   592   003EDE                     ADLTHL          equ	16094	;# 
   593   003EDF                     ADLTHH          equ	16095	;# 
   594   003EE0                     ADUTH           equ	16096	;# 
   595   003EE0                     ADUTHL          equ	16096	;# 
   596   003EE1                     ADUTHH          equ	16097	;# 
   597   003EE2                     ADERR           equ	16098	;# 
   598   003EE2                     ADERRL          equ	16098	;# 
   599   003EE3                     ADERRH          equ	16099	;# 
   600   003EE4                     ADSTPT          equ	16100	;# 
   601   003EE4                     ADSTPTL         equ	16100	;# 
   602   003EE5                     ADSTPTH         equ	16101	;# 
   603   003EE6                     ADFLTR          equ	16102	;# 
   604   003EE6                     ADFLTRL         equ	16102	;# 
   605   003EE7                     ADFLTRH         equ	16103	;# 
   606   003EE8                     ADACC           equ	16104	;# 
   607   003EE8                     ADACCL          equ	16104	;# 
   608   003EE9                     ADACCH          equ	16105	;# 
   609   003EEA                     ADACCU          equ	16106	;# 
   610   003EEB                     ADCNT           equ	16107	;# 
   611   003EEC                     ADRPT           equ	16108	;# 
   612   003EED                     ADPREV          equ	16109	;# 
   613   003EED                     ADPREVL         equ	16109	;# 
   614   003EEE                     ADPREVH         equ	16110	;# 
   615   003EEF                     ADRES           equ	16111	;# 
   616   003EEF                     ADRESL          equ	16111	;# 
   617   003EF0                     ADRESH          equ	16112	;# 
   618   003EF1                     ADPCH           equ	16113	;# 
   619   003EF3                     ADACQ           equ	16115	;# 
   620   003EF3                     ADACQL          equ	16115	;# 
   621   003EF4                     ADACQH          equ	16116	;# 
   622   003EF5                     ADCAP           equ	16117	;# 
   623   003EF6                     ADPRE           equ	16118	;# 
   624   003EF6                     ADPREL          equ	16118	;# 
   625   003EF7                     ADPREH          equ	16119	;# 
   626   003EF8                     ADCON0          equ	16120	;# 
   627   003EF9                     ADCON1          equ	16121	;# 
   628   003EFA                     ADCON2          equ	16122	;# 
   629   003EFB                     ADCON3          equ	16123	;# 
   630   003EFC                     ADSTAT          equ	16124	;# 
   631   003EFD                     ADREF           equ	16125	;# 
   632   003EFE                     ADACT           equ	16126	;# 
   633   003EFF                     ADCLK           equ	16127	;# 
   634   003F12                     SMT1TMR         equ	16146	;# 
   635   003F12                     SMT1TMRL        equ	16146	;# 
   636   003F13                     SMT1TMRH        equ	16147	;# 
   637   003F14                     SMT1TMRU        equ	16148	;# 
   638   003F15                     SMT1CPR         equ	16149	;# 
   639   003F15                     SMT1CPRL        equ	16149	;# 
   640   003F16                     SMT1CPRH        equ	16150	;# 
   641   003F17                     SMT1CPRU        equ	16151	;# 
   642   003F18                     SMT1CPW         equ	16152	;# 
   643   003F18                     SMT1CPWL        equ	16152	;# 
   644   003F19                     SMT1CPWH        equ	16153	;# 
   645   003F1A                     SMT1CPWU        equ	16154	;# 
   646   003F1B                     SMT1PR          equ	16155	;# 
   647   003F1B                     SMT1PRL         equ	16155	;# 
   648   003F1C                     SMT1PRH         equ	16156	;# 
   649   003F1D                     SMT1PRU         equ	16157	;# 
   650   003F1E                     SMT1CON0        equ	16158	;# 
   651   003F1F                     SMT1CON1        equ	16159	;# 
   652   003F20                     SMT1STAT        equ	16160	;# 
   653   003F21                     SMT1CLK         equ	16161	;# 
   654   003F22                     SMT1SIG         equ	16162	;# 
   655   003F23                     SMT1WIN         equ	16163	;# 
   656   003F38                     NCO1ACC         equ	16184	;# 
   657   003F38                     NCO1ACCL        equ	16184	;# 
   658   003F39                     NCO1ACCH        equ	16185	;# 
   659   003F3A                     NCO1ACCU        equ	16186	;# 
   660   003F3B                     NCO1INC         equ	16187	;# 
   661   003F3B                     NCO1INCL        equ	16187	;# 
   662   003F3C                     NCO1INCH        equ	16188	;# 
   663   003F3D                     NCO1INCU        equ	16189	;# 
   664   003F3E                     NCO1CON         equ	16190	;# 
   665   003F3F                     NCO1CLK         equ	16191	;# 
   666   003F40                     CWG3CLK         equ	16192	;# 
   667   003F40                     CWG3CLKCON      equ	16192	;# 
   668   003F41                     CWG3ISM         equ	16193	;# 
   669   003F41                     CWG3DAT         equ	16193	;# 
   670   003F42                     CWG3DBR         equ	16194	;# 
   671   003F43                     CWG3DBF         equ	16195	;# 
   672   003F44                     CWG3CON0        equ	16196	;# 
   673   003F45                     CWG3CON1        equ	16197	;# 
   674   003F46                     CWG3AS0         equ	16198	;# 
   675   003F47                     CWG3AS1         equ	16199	;# 
   676   003F48                     CWG3STR         equ	16200	;# 
   677   003F49                     CWG2CLK         equ	16201	;# 
   678   003F49                     CWG2CLKCON      equ	16201	;# 
   679   003F4A                     CWG2ISM         equ	16202	;# 
   680   003F4A                     CWG2DAT         equ	16202	;# 
   681   003F4B                     CWG2DBR         equ	16203	;# 
   682   003F4C                     CWG2DBF         equ	16204	;# 
   683   003F4D                     CWG2CON0        equ	16205	;# 
   684   003F4E                     CWG2CON1        equ	16206	;# 
   685   003F4F                     CWG2AS0         equ	16207	;# 
   686   003F50                     CWG2AS1         equ	16208	;# 
   687   003F51                     CWG2STR         equ	16209	;# 
   688   003F52                     CWG1CLK         equ	16210	;# 
   689   003F52                     CWG1CLKCON      equ	16210	;# 
   690   003F53                     CWG1ISM         equ	16211	;# 
   691   003F53                     CWG1DAT         equ	16211	;# 
   692   003F54                     CWG1DBR         equ	16212	;# 
   693   003F55                     CWG1DBF         equ	16213	;# 
   694   003F56                     CWG1CON0        equ	16214	;# 
   695   003F57                     CWG1CON1        equ	16215	;# 
   696   003F58                     CWG1AS0         equ	16216	;# 
   697   003F59                     CWG1AS1         equ	16217	;# 
   698   003F5A                     CWG1STR         equ	16218	;# 
   699   003F5E                     CCPTMRS0        equ	16222	;# 
   700   003F5F                     CCPTMRS1        equ	16223	;# 
   701   003F60                     PWM8DC          equ	16224	;# 
   702   003F60                     PWM8DCL         equ	16224	;# 
   703   003F61                     PWM8DCH         equ	16225	;# 
   704   003F62                     PWM8CON         equ	16226	;# 
   705   003F64                     PWM7DC          equ	16228	;# 
   706   003F64                     PWM7DCL         equ	16228	;# 
   707   003F65                     PWM7DCH         equ	16229	;# 
   708   003F66                     PWM7CON         equ	16230	;# 
   709   003F68                     PWM6DC          equ	16232	;# 
   710   003F68                     PWM6DCL         equ	16232	;# 
   711   003F69                     PWM6DCH         equ	16233	;# 
   712   003F6A                     PWM6CON         equ	16234	;# 
   713   003F6C                     PWM5DC          equ	16236	;# 
   714   003F6C                     PWM5DCL         equ	16236	;# 
   715   003F6D                     PWM5DCH         equ	16237	;# 
   716   003F6E                     PWM5CON         equ	16238	;# 
   717   003F70                     CCPR4           equ	16240	;# 
   718   003F70                     CCPR4L          equ	16240	;# 
   719   003F71                     CCPR4H          equ	16241	;# 
   720   003F72                     CCP4CON         equ	16242	;# 
   721   003F73                     CCP4CAP         equ	16243	;# 
   722   003F74                     CCPR3           equ	16244	;# 
   723   003F74                     CCPR3L          equ	16244	;# 
   724   003F75                     CCPR3H          equ	16245	;# 
   725   003F76                     CCP3CON         equ	16246	;# 
   726   003F77                     CCP3CAP         equ	16247	;# 
   727   003F78                     CCPR2           equ	16248	;# 
   728   003F78                     CCPR2L          equ	16248	;# 
   729   003F79                     CCPR2H          equ	16249	;# 
   730   003F7A                     CCP2CON         equ	16250	;# 
   731   003F7B                     CCP2CAP         equ	16251	;# 
   732   003F7C                     CCPR1           equ	16252	;# 
   733   003F7C                     CCPR1L          equ	16252	;# 
   734   003F7D                     CCPR1H          equ	16253	;# 
   735   003F7E                     CCP1CON         equ	16254	;# 
   736   003F7F                     CCP1CAP         equ	16255	;# 
   737   003F92                     T6TMR           equ	16274	;# 
   738   003F92                     TMR6            equ	16274	;# 
   739   003F93                     T6PR            equ	16275	;# 
   740   003F93                     PR6             equ	16275	;# 
   741   003F94                     T6CON           equ	16276	;# 
   742   003F95                     T6HLT           equ	16277	;# 
   743   003F96                     T6CLKCON        equ	16278	;# 
   744   003F96                     T6CLK           equ	16278	;# 
   745   003F97                     T6RST           equ	16279	;# 
   746   003F98                     TMR5            equ	16280	;# 
   747   003F98                     TMR5L           equ	16280	;# 
   748   003F99                     TMR5H           equ	16281	;# 
   749   003F9A                     T5CON           equ	16282	;# 
   750   003F9A                     TMR5CON         equ	16282	;# 
   751   003F9B                     T5GCON          equ	16283	;# 
   752   003F9B                     TMR5GCON        equ	16283	;# 
   753   003F9C                     T5GATE          equ	16284	;# 
   754   003F9C                     TMR5GATE        equ	16284	;# 
   755   003F9D                     T5CLK           equ	16285	;# 
   756   003F9D                     TMR5CLK         equ	16285	;# 
   757   003F9D                     PR5             equ	16285	;# 
   758   003F9E                     T4TMR           equ	16286	;# 
   759   003F9E                     TMR4            equ	16286	;# 
   760   003F9F                     T4PR            equ	16287	;# 
   761   003F9F                     PR4             equ	16287	;# 
   762   003FA0                     T4CON           equ	16288	;# 
   763   003FA1                     T4HLT           equ	16289	;# 
   764   003FA2                     T4CLKCON        equ	16290	;# 
   765   003FA2                     T4CLK           equ	16290	;# 
   766   003FA3                     T4RST           equ	16291	;# 
   767   003FA4                     TMR3            equ	16292	;# 
   768   003FA4                     TMR3L           equ	16292	;# 
   769   003FA5                     TMR3H           equ	16293	;# 
   770   003FA6                     T3CON           equ	16294	;# 
   771   003FA6                     TMR3CON         equ	16294	;# 
   772   003FA7                     T3GCON          equ	16295	;# 
   773   003FA7                     TMR3GCON        equ	16295	;# 
   774   003FA8                     T3GATE          equ	16296	;# 
   775   003FA8                     TMR3GATE        equ	16296	;# 
   776   003FA9                     T3CLK           equ	16297	;# 
   777   003FA9                     TMR3CLK         equ	16297	;# 
   778   003FA9                     PR3             equ	16297	;# 
   779   003FAA                     T2TMR           equ	16298	;# 
   780   003FAA                     TMR2            equ	16298	;# 
   781   003FAB                     T2PR            equ	16299	;# 
   782   003FAB                     PR2             equ	16299	;# 
   783   003FAC                     T2CON           equ	16300	;# 
   784   003FAD                     T2HLT           equ	16301	;# 
   785   003FAE                     T2CLKCON        equ	16302	;# 
   786   003FAE                     T2CLK           equ	16302	;# 
   787   003FAF                     T2RST           equ	16303	;# 
   788   003FB0                     TMR1            equ	16304	;# 
   789   003FB0                     TMR1L           equ	16304	;# 
   790   003FB1                     TMR1H           equ	16305	;# 
   791   003FB2                     T1CON           equ	16306	;# 
   792   003FB2                     TMR1CON         equ	16306	;# 
   793   003FB3                     T1GCON          equ	16307	;# 
   794   003FB3                     TMR1GCON        equ	16307	;# 
   795   003FB4                     T1GATE          equ	16308	;# 
   796   003FB4                     TMR1GATE        equ	16308	;# 
   797   003FB5                     T1CLK           equ	16309	;# 
   798   003FB5                     TMR1CLK         equ	16309	;# 
   799   003FB5                     PR1             equ	16309	;# 
   800   003FB6                     TMR0L           equ	16310	;# 
   801   003FB6                     TMR0            equ	16310	;# 
   802   003FB7                     TMR0H           equ	16311	;# 
   803   003FB7                     PR0             equ	16311	;# 
   804   003FB8                     T0CON0          equ	16312	;# 
   805   003FB9                     T0CON1          equ	16313	;# 
   806   003FBA                     LATA            equ	16314	;# 
   807   003FBB                     LATB            equ	16315	;# 
   808   003FBC                     LATC            equ	16316	;# 
   809   003FBD                     LATD            equ	16317	;# 
   810   003FBE                     LATE            equ	16318	;# 
   811   003FC2                     TRISA           equ	16322	;# 
   812   003FC3                     TRISB           equ	16323	;# 
   813   003FC4                     TRISC           equ	16324	;# 
   814   003FC5                     TRISD           equ	16325	;# 
   815   003FC6                     TRISE           equ	16326	;# 
   816   003FCA                     PORTA           equ	16330	;# 
   817   003FCB                     PORTB           equ	16331	;# 
   818   003FCC                     PORTC           equ	16332	;# 
   819   003FCD                     PORTD           equ	16333	;# 
   820   003FCE                     PORTE           equ	16334	;# 
   821   003FD2                     INTCON0         equ	16338	;# 
   822   003FD3                     INTCON1         equ	16339	;# 
   823   003FD4                     IVTLOCK         equ	16340	;# 
   824   003FD5                     IVTBASE         equ	16341	;# 
   825   003FD5                     IVTBASEL        equ	16341	;# 
   826   003FD6                     IVTBASEH        equ	16342	;# 
   827   003FD7                     IVTBASEU        equ	16343	;# 
   828   003FD8                     STATUS          equ	16344	;# 
   829   003FD9                     FSR2            equ	16345	;# 
   830   003FD9                     FSR2L           equ	16345	;# 
   831   003FDA                     FSR2H           equ	16346	;# 
   832   003FDB                     PLUSW2          equ	16347	;# 
   833   003FDC                     PREINC2         equ	16348	;# 
   834   003FDD                     POSTDEC2        equ	16349	;# 
   835   003FDE                     POSTINC2        equ	16350	;# 
   836   003FDF                     INDF2           equ	16351	;# 
   837   003FE0                     BSR             equ	16352	;# 
   838   003FE1                     FSR1            equ	16353	;# 
   839   003FE1                     FSR1L           equ	16353	;# 
   840   003FE2                     FSR1H           equ	16354	;# 
   841   003FE3                     PLUSW1          equ	16355	;# 
   842   003FE4                     PREINC1         equ	16356	;# 
   843   003FE5                     POSTDEC1        equ	16357	;# 
   844   003FE6                     POSTINC1        equ	16358	;# 
   845   003FE7                     INDF1           equ	16359	;# 
   846   003FE8                     WREG            equ	16360	;# 
   847   003FE9                     FSR0            equ	16361	;# 
   848   003FE9                     FSR0L           equ	16361	;# 
   849   003FEA                     FSR0H           equ	16362	;# 
   850   003FEB                     PLUSW0          equ	16363	;# 
   851   003FEC                     PREINC0         equ	16364	;# 
   852   003FED                     POSTDEC0        equ	16365	;# 
   853   003FEE                     POSTINC0        equ	16366	;# 
   854   003FEF                     INDF0           equ	16367	;# 
   855   003FF0                     PCON0           equ	16368	;# 
   856   003FF1                     PCON1           equ	16369	;# 
   857   003FF3                     PROD            equ	16371	;# 
   858   003FF3                     PRODL           equ	16371	;# 
   859   003FF4                     PRODH           equ	16372	;# 
   860   003FF5                     TABLAT          equ	16373	;# 
   861   003FF6                     TBLPTR          equ	16374	;# 
   862   003FF6                     TBLPTRL         equ	16374	;# 
   863   003FF7                     TBLPTRH         equ	16375	;# 
   864   003FF8                     TBLPTRU         equ	16376	;# 
   865   003FF9                     PCLAT           equ	16377	;# 
   866   003FF9                     PCL             equ	16377	;# 
   867   003FFA                     PCLATH          equ	16378	;# 
   868   003FFB                     PCLATU          equ	16379	;# 
   869   003FFC                     STKPTR          equ	16380	;# 
   870   003FFD                     TOS             equ	16381	;# 
   871   003FFD                     TOSL            equ	16381	;# 
   872   003FFE                     TOSH            equ	16382	;# 
   873   003FFF                     TOSU            equ	16383	;# 
   874   003990                     _PIE0bits       set	14736
   875   0039A1                     _PIR1bits       set	14753
   876   0039A0                     _PIR0bits       set	14752
   877   003991                     _PIE1bits       set	14737
   878   003A66                     _IOCCNbits      set	14950
   879   003A65                     _IOCCPbits      set	14949
   880   003A63                     _SLRCONCbits    set	14947
   881   003A64                     _INLVLCbits     set	14948
   882   003A61                     _WPUCbits       set	14945
   883   003A60                     _ANSELCbits     set	14944
   884   003A62                     _ODCONCbits     set	14946
   885   003A40                     _ANSELAbits     set	14912
   886   003A67                     _IOCCFbits      set	14951
   887   003A70                     _ANSELD         set	14960
   888   003A60                     _ANSELC         set	14944
   889   003A50                     _ANSELB         set	14928
   890   003A40                     _ANSELA         set	14912
   891   003EF4                     _ADACQH         set	16116
   892   003EF3                     _ADACQL         set	16115
   893   003EF7                     _ADPREH         set	16119
   894   003EF6                     _ADPREL         set	16118
   895   003EFF                     _ADCLK          set	16127
   896   003EF1                     _ADPCH          set	16113
   897   003EEF                     _ADRESL         set	16111
   898   003EF0                     _ADRESH         set	16112
   899   003EF8                     _ADCON0bits     set	16120
   900   003FD5                     _IVTBASEL       set	16341
   901   003FD6                     _IVTBASEH       set	16342
   902   003FD7                     _IVTBASEU       set	16343
   903   003FC4                     _TRISCbits      set	16324
   904   003FD2                     _INTCON0bits    set	16338
   905   003FCC                     _PORTC          set	16332
   906   003FC2                     _TRISAbits      set	16322
   907   003FBB                     _LATB           set	16315
   908   003FC5                     _TRISD          set	16325
   909   003FC3                     _TRISB          set	16323
   910   003FBC                     _LATCbits       set	16316
   911   01FDE9                     _LATD1          set	130537
   912   01FDE8                     _LATD0          set	130536
   913                           
   914                           	psect	smallconst
   915   002000                     __psmallconst:
   916                           	callstack 0
   917   002000  00                 	db	0
   918   002001                     STR_4:
   919   002001  54                 	db	84	;'T'
   920   002002  69                 	db	105	;'i'
   921   002003  6D                 	db	109	;'m'
   922   002004  65                 	db	101	;'e'
   923   002005  3A                 	db	58	;':'
   924   002006  20                 	db	32
   925   002007  25                 	db	37
   926   002008  32                 	db	50	;'2'
   927   002009  64                 	db	100	;'d'
   928   00200A  20                 	db	32
   929   00200B  73                 	db	115	;'s'
   930   00200C  65                 	db	101	;'e'
   931   00200D  63                 	db	99	;'c'
   932   00200E  20                 	db	32
   933   00200F  00                 	db	0
   934   002010                     STR_3:
   935   002010  49                 	db	73	;'I'
   936   002011  4E                 	db	78	;'N'
   937   002012  54                 	db	84	;'T'
   938   002013  45                 	db	69	;'E'
   939   002014  52                 	db	82	;'R'
   940   002015  52                 	db	82	;'R'
   941   002016  55                 	db	85	;'U'
   942   002017  50                 	db	80	;'P'
   943   002018  54                 	db	84	;'T'
   944   002019  20                 	db	32
   945   00201A  4D                 	db	77	;'M'
   946   00201B  4F                 	db	79	;'O'
   947   00201C  44                 	db	68	;'D'
   948   00201D  45                 	db	69	;'E'
   949   00201E  00                 	db	0
   950   00201F                     STR_1:
   951   00201F  49                 	db	73	;'I'
   952   002020  6E                 	db	110	;'n'
   953   002021  70                 	db	112	;'p'
   954   002022  75                 	db	117	;'u'
   955   002023  74                 	db	116	;'t'
   956   002024  20                 	db	32
   957   002025  4C                 	db	76	;'L'
   958   002026  69                 	db	105	;'i'
   959   002027  67                 	db	103	;'g'
   960   002028  68                 	db	104	;'h'
   961   002029  74                 	db	116	;'t'
   962   00202A  3A                 	db	58	;':'
   963   00202B  00                 	db	0
   964   00202C                     STR_7:
   965   00202C  25                 	db	37
   966   00202D  2D                 	db	45
   967   00202E  33                 	db	51	;'3'
   968   00202F  2E                 	db	46
   969   002030  30                 	db	48	;'0'
   970   002031  66                 	db	102	;'f'
   971   002032  20                 	db	32
   972   002033  4C                 	db	76	;'L'
   973   002034  75                 	db	117	;'u'
   974   002035  78                 	db	120	;'x'
   975   002036  00                 	db	0
   976   002037                     STR_2:
   977   002037  25                 	db	37
   978   002038  2E                 	db	46
   979   002039  30                 	db	48	;'0'
   980   00203A  66                 	db	102	;'f'
   981   00203B  20                 	db	32
   982   00203C  4C                 	db	76	;'L'
   983   00203D  75                 	db	117	;'u'
   984   00203E  78                 	db	120	;'x'
   985   00203F  00                 	db	0
   986   002040                     STR_6:
   987   002040  2D                 	db	45
   988   002041  2D                 	db	45
   989   002042  2D                 	db	45
   990   002043  20                 	db	32
   991   002044  4C                 	db	76	;'L'
   992   002045  75                 	db	117	;'u'
   993   002046  78                 	db	120	;'x'
   994   002047  00                 	db	0
   995   002048                     STR_8:
   996   002048  69                 	db	105	;'i'
   997   002049  6E                 	db	110	;'n'
   998   00204A  66                 	db	102	;'f'
   999   00204B  00                 	db	0
  1000   00204C                     STR_11:
  1001   00204C  6E                 	db	110	;'n'
  1002   00204D  61                 	db	97	;'a'
  1003   00204E  6E                 	db	110	;'n'
  1004   00204F  00                 	db	0
  1005   00204C                     STR_12          equ	STR_11
  1006   00204C                     STR_13          equ	STR_11
  1007   002048                     STR_9           equ	STR_8
  1008   002048                     STR_10          equ	STR_8
  1009   00201F                     STR_5           equ	STR_1
  1010   002050  00                 	db	0	; dummy byte at the end
  1011   002000                     __smallconst    set	__psmallconst
  1012   002000                     __mediumconst   set	__psmallconst
  1013   000003                     __activetblptr  equ	3
  1014                           
  1015                           ; #config settings
  1016                           
  1017                           	psect	cinit
  1018   009460                     __pcinit:
  1019                           	callstack 0
  1020   009460                     start_initialization:
  1021                           	callstack 0
  1022   009460                     __initialization:
  1023                           	callstack 0
  1024                           
  1025                           ; Clear objects allocated to BANK1 (80 bytes)
  1026   009460  EE00  F100         	lfsr	0,__pbssBANK1
  1027   009464  0E50               	movlw	80
  1028   009466                     clear_0:
  1029   009466  6AEE               	clrf	postinc0,c
  1030   009468  06E8               	decf	wreg,f,c
  1031   00946A  E1FD               	bnz	clear_0
  1032                           
  1033                           ; Clear objects allocated to BANK0 (14 bytes)
  1034   00946C  EE00  F0EB         	lfsr	0,__pbssBANK0
  1035   009470  0E0E               	movlw	14
  1036   009472                     clear_1:
  1037   009472  6AEE               	clrf	postinc0,c
  1038   009474  06E8               	decf	wreg,f,c
  1039   009476  E1FD               	bnz	clear_1
  1040                           
  1041                           ; Clear objects allocated to COMRAM (22 bytes)
  1042   009478  EE00  F02A         	lfsr	0,__pbssCOMRAM
  1043   00947C  0E16               	movlw	22
  1044   00947E                     clear_2:
  1045   00947E  6AEE               	clrf	postinc0,c
  1046   009480  06E8               	decf	wreg,f,c
  1047   009482  E1FD               	bnz	clear_2
  1048                           
  1049                           ;
  1050                           ; Setup IVTBASE
  1051                           ;
  1052   003FD5                     IVTBASEL        equ	16341
  1053   003FD6                     IVTBASEH        equ	16342
  1054   003FD7                     IVTBASEU        equ	16343
  1055   009484  0E08               	movlw	(ivt0x6008_base shr 0)& (0+255)
  1056   009486  6ED5               	movwf	213,c
  1057   009488  0E60               	movlw	(ivt0x6008_base shr (0+8))& (0+255)
  1058   00948A  6ED6               	movwf	214,c
  1059   00948C  0E00               	movlw	(ivt0x6008_base shr (0+16))& (0+255)
  1060   00948E  6ED7               	movwf	215,c
  1061   009490                     end_of_initialization:
  1062                           	callstack 0
  1063   009490                     __end_of__initialization:
  1064                           	callstack 0
  1065   009490  0100               	movlb	0
  1066   009492  EF4D  F03F         	goto	_main	;jump to C main() function
  1067                           
  1068                           	psect	bssCOMRAM
  1069   00002A                     __pbssCOMRAM:
  1070                           	callstack 0
  1071   00002A                     floorf@F521:
  1072                           	callstack 0
  1073   00002A                     	ds	4
  1074   00002E                     ___fpclassifyf@F465:
  1075                           	callstack 0
  1076   00002E                     	ds	4
  1077   000032                     _lux:
  1078                           	callstack 0
  1079   000032                     	ds	4
  1080   000036                     _data:
  1081                           	callstack 0
  1082   000036                     	ds	10
  1083                           
  1084                           	psect	bssBANK0
  1085   0000EB                     __pbssBANK0:
  1086                           	callstack 0
  1087   0000EB                     _voltage:
  1088                           	callstack 0
  1089   0000EB                     	ds	4
  1090   0000EF                     _width:
  1091                           	callstack 0
  1092   0000EF                     	ds	2
  1093   0000F1                     _prec:
  1094                           	callstack 0
  1095   0000F1                     	ds	2
  1096   0000F3                     _digital:
  1097                           	callstack 0
  1098   0000F3                     	ds	2
  1099   0000F5                     _flags:
  1100                           	callstack 0
  1101   0000F5                     	ds	1
  1102   0000F6                     _systemState:
  1103                           	callstack 0
  1104   0000F6                     	ds	1
  1105   0000F7                     _interruptTriggered:
  1106                           	callstack 0
  1107   0000F7                     	ds	1
  1108   0000F8                     _adcReady:
  1109                           	callstack 0
  1110   0000F8                     	ds	1
  1111                           
  1112                           	psect	bssBANK1
  1113   000100                     __pbssBANK1:
  1114                           	callstack 0
  1115   000100                     _dbuf:
  1116                           	callstack 0
  1117   000100                     	ds	80
  1118                           
  1119                           	psect	cstackBANK1
  1120   000150                     __pcstackBANK1:
  1121                           	callstack 0
  1122   000150                     main@countdownMsg:
  1123                           	callstack 0
  1124                           
  1125                           ; 17 bytes @ 0x0
  1126   000150                     	ds	17
  1127   000161                     main@secondsLeft:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x11
  1131   000161                     	ds	2
  1132                           
  1133                           	psect	cstackBANK0
  1134   000060                     __pcstackBANK0:
  1135                           	callstack 0
  1136   000060                     ?___fpclassifyf:
  1137                           	callstack 0
  1138   000060                     ?___awdiv:
  1139                           	callstack 0
  1140   000060                     ?___awmod:
  1141                           	callstack 0
  1142   000060                     ?_read_prec_or_width:
  1143                           	callstack 0
  1144   000060                     ?___fladd:
  1145                           	callstack 0
  1146   000060                     ?___fldiv:
  1147                           	callstack 0
  1148   000060                     ?_labs:
  1149                           	callstack 0
  1150   000060                     ?___flneg:
  1151                           	callstack 0
  1152   000060                     ?___fltol:
  1153                           	callstack 0
  1154   000060                     ?___xxtofl:
  1155                           	callstack 0
  1156   000060                     read_prec_or_width@fmt:
  1157                           	callstack 0
  1158   000060                     MSdelay@val:
  1159                           	callstack 0
  1160   000060                     ___awdiv@dividend:
  1161                           	callstack 0
  1162   000060                     ___awmod@dividend:
  1163                           	callstack 0
  1164   000060                     memcpy@d1:
  1165                           	callstack 0
  1166   000060                     fputc@c:
  1167                           	callstack 0
  1168   000060                     strcpy@dest:
  1169                           	callstack 0
  1170   000060                     ___fleq@ff1:
  1171                           	callstack 0
  1172   000060                     ___flneg@f1:
  1173                           	callstack 0
  1174   000060                     ___fltol@f1:
  1175                           	callstack 0
  1176   000060                     ___fladd@b:
  1177                           	callstack 0
  1178   000060                     ___fldiv@b:
  1179                           	callstack 0
  1180   000060                     ___xxtofl@val:
  1181                           	callstack 0
  1182   000060                     ___fpclassifyf@x:
  1183                           	callstack 0
  1184   000060                     labs@a:
  1185                           	callstack 0
  1186   000060                     
  1187                           ; 1 bytes @ 0x0
  1188   000060                     	ds	1
  1189   000061                     read_prec_or_width@ap:
  1190                           	callstack 0
  1191                           
  1192                           ; 1 bytes @ 0x1
  1193   000061                     	ds	1
  1194   000062                     fputc@fp:
  1195                           	callstack 0
  1196   000062                     strcpy@src:
  1197                           	callstack 0
  1198   000062                     MSdelay@i:
  1199                           	callstack 0
  1200   000062                     ___awdiv@divisor:
  1201                           	callstack 0
  1202   000062                     ___awmod@divisor:
  1203                           	callstack 0
  1204   000062                     memcpy@s1:
  1205                           	callstack 0
  1206   000062                     ??_read_prec_or_width:
  1207                           
  1208                           ; 1 bytes @ 0x2
  1209   000062                     	ds	1
  1210   000063                     ??_fputc:
  1211   000063                     ??_strcpy:
  1212                           
  1213                           ; 1 bytes @ 0x3
  1214   000063                     	ds	1
  1215   000064                     ___awdiv@counter:
  1216                           	callstack 0
  1217   000064                     ___awmod@counter:
  1218                           	callstack 0
  1219   000064                     read_prec_or_width@c:
  1220                           	callstack 0
  1221   000064                     MSdelay@j:
  1222                           	callstack 0
  1223   000064                     memcpy@n:
  1224                           	callstack 0
  1225   000064                     strcpy@d:
  1226                           	callstack 0
  1227   000064                     ___fleq@ff2:
  1228                           	callstack 0
  1229   000064                     ___fladd@a:
  1230                           	callstack 0
  1231   000064                     ___fldiv@a:
  1232                           	callstack 0
  1233   000064                     ??___fpclassifyf:
  1234   000064                     ??_labs:
  1235   000064                     ??___fltol:
  1236   000064                     ??___xxtofl:
  1237                           
  1238                           ; 1 bytes @ 0x4
  1239   000064                     	ds	1
  1240   000065                     ___awdiv@sign:
  1241                           	callstack 0
  1242   000065                     ___awmod@sign:
  1243                           	callstack 0
  1244   000065                     read_prec_or_width@n:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x5
  1248   000065                     	ds	1
  1249   000066                     ?_abs:
  1250                           	callstack 0
  1251   000066                     LCD_Command@cmd:
  1252                           	callstack 0
  1253   000066                     LCD_Char@dat:
  1254                           	callstack 0
  1255   000066                     memcpy@tmp:
  1256                           	callstack 0
  1257   000066                     ___awdiv@quotient:
  1258                           	callstack 0
  1259   000066                     abs@a:
  1260                           	callstack 0
  1261   000066                     
  1262                           ; 1 bytes @ 0x6
  1263   000066                     	ds	1
  1264   000067                     LCD_String@msg:
  1265                           	callstack 0
  1266   000067                     memcpy@d:
  1267                           	callstack 0
  1268   000067                     
  1269                           ; 1 bytes @ 0x7
  1270   000067                     	ds	1
  1271   000068                     ___fltol@sign1:
  1272                           	callstack 0
  1273   000068                     ___xxtofl@sign:
  1274                           	callstack 0
  1275   000068                     ___fpclassifyf@e:
  1276                           	callstack 0
  1277   000068                     fputs@s:
  1278                           	callstack 0
  1279   000068                     ??___fladd:
  1280   000068                     ??___fldiv:
  1281   000068                     ??_abs:
  1282   000068                     ??___fleq:
  1283                           
  1284                           ; 1 bytes @ 0x8
  1285   000068                     	ds	1
  1286   000069                     LCD_String_xy@pos:
  1287                           	callstack 0
  1288   000069                     ___fltol@exp1:
  1289                           	callstack 0
  1290   000069                     ___xxtofl@exp:
  1291                           	callstack 0
  1292   000069                     memcpy@s:
  1293                           	callstack 0
  1294   000069                     
  1295                           ; 1 bytes @ 0x9
  1296   000069                     	ds	1
  1297   00006A                     fputs@fp:
  1298                           	callstack 0
  1299   00006A                     LCD_String_xy@msg:
  1300                           	callstack 0
  1301   00006A                     ___xxtofl@arg:
  1302                           	callstack 0
  1303   00006A                     ___fpclassifyf@u:
  1304                           	callstack 0
  1305                           
  1306                           ; 4 bytes @ 0xA
  1307   00006A                     	ds	1
  1308   00006B                     fputs@c:
  1309                           	callstack 0
  1310   00006B                     
  1311                           ; 1 bytes @ 0xB
  1312   00006B                     	ds	1
  1313   00006C                     ___fladd@signs:
  1314                           	callstack 0
  1315   00006C                     fputs@i:
  1316                           	callstack 0
  1317   00006C                     ___fldiv@rem:
  1318                           	callstack 0
  1319   00006C                     ??_LCD_String_xy:
  1320                           
  1321                           ; 1 bytes @ 0xC
  1322   00006C                     	ds	1
  1323   00006D                     ___fladd@aexp:
  1324                           	callstack 0
  1325                           
  1326                           ; 1 bytes @ 0xD
  1327   00006D                     	ds	1
  1328   00006E                     ?___flmul:
  1329                           	callstack 0
  1330   00006E                     LCD_String_xy@row:
  1331                           	callstack 0
  1332   00006E                     ___fladd@bexp:
  1333                           	callstack 0
  1334   00006E                     pad@fp:
  1335                           	callstack 0
  1336   00006E                     ___flmul@b:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0xE
  1340   00006E                     	ds	1
  1341   00006F                     LCD_String_xy@location:
  1342                           	callstack 0
  1343   00006F                     ___fladd@grs:
  1344                           	callstack 0
  1345   00006F                     pad@buf:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0xF
  1349   00006F                     	ds	1
  1350   000070                     ___fldiv@sign:
  1351                           	callstack 0
  1352   000070                     _LCD_String_xy$605:
  1353                           	callstack 0
  1354                           
  1355                           ; 2 bytes @ 0x10
  1356   000070                     	ds	1
  1357   000071                     ___fldiv@new_exp:
  1358                           	callstack 0
  1359   000071                     pad@p:
  1360                           	callstack 0
  1361                           
  1362                           ; 2 bytes @ 0x11
  1363   000071                     	ds	1
  1364   000072                     ___flmul@a:
  1365                           	callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x12
  1368   000072                     	ds	1
  1369   000073                     ___fldiv@grs:
  1370                           	callstack 0
  1371   000073                     ??_pad:
  1372                           
  1373                           ; 1 bytes @ 0x13
  1374   000073                     	ds	1
  1375   000074                     pad@i:
  1376                           	callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x14
  1379   000074                     	ds	2
  1380   000076                     dtoa@fp:
  1381                           	callstack 0
  1382   000076                     ??___flmul:
  1383                           
  1384                           ; 1 bytes @ 0x16
  1385   000076                     	ds	1
  1386   000077                     ___fldiv@bexp:
  1387                           	callstack 0
  1388   000077                     dtoa@d:
  1389                           	callstack 0
  1390                           
  1391                           ; 2 bytes @ 0x17
  1392   000077                     	ds	1
  1393   000078                     ___fldiv@aexp:
  1394                           	callstack 0
  1395                           
  1396                           ; 1 bytes @ 0x18
  1397   000078                     	ds	1
  1398   000079                     ?_floorf:
  1399                           	callstack 0
  1400   000079                     _dtoa$1270:
  1401                           	callstack 0
  1402   000079                     floorf@x:
  1403                           	callstack 0
  1404   000079                     
  1405                           ; 1 bytes @ 0x19
  1406   000079                     	ds	1
  1407   00007A                     ___flmul@sign:
  1408                           	callstack 0
  1409                           
  1410                           ; 1 bytes @ 0x1A
  1411   00007A                     	ds	1
  1412   00007B                     ___flmul@aexp:
  1413                           	callstack 0
  1414   00007B                     dtoa@w:
  1415                           	callstack 0
  1416                           
  1417                           ; 2 bytes @ 0x1B
  1418   00007B                     	ds	1
  1419   00007C                     ___flmul@grs:
  1420                           	callstack 0
  1421                           
  1422                           ; 4 bytes @ 0x1C
  1423   00007C                     	ds	1
  1424   00007D                     dtoa@p:
  1425                           	callstack 0
  1426   00007D                     ??_floorf:
  1427                           
  1428                           ; 1 bytes @ 0x1D
  1429   00007D                     	ds	2
  1430   00007F                     dtoa@s:
  1431                           	callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x1F
  1434   00007F                     	ds	1
  1435   000080                     ___flmul@bexp:
  1436                           	callstack 0
  1437   000080                     dtoa@i:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x20
  1441   000080                     	ds	1
  1442   000081                     ___flmul@prod:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x21
  1446   000081                     	ds	2
  1447   000083                     floorf@m:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x23
  1451   000083                     	ds	2
  1452   000085                     ___flmul@temp:
  1453                           	callstack 0
  1454                           
  1455                           ; 2 bytes @ 0x25
  1456   000085                     	ds	2
  1457   000087                     ?___flsub:
  1458                           	callstack 0
  1459   000087                     floorf@e:
  1460                           	callstack 0
  1461   000087                     ___flge@ff1:
  1462                           	callstack 0
  1463   000087                     ___flsub@b:
  1464                           	callstack 0
  1465                           
  1466                           ; 4 bytes @ 0x27
  1467   000087                     	ds	2
  1468   000089                     floorf@u:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x29
  1472   000089                     	ds	2
  1473   00008B                     ___flge@ff2:
  1474                           	callstack 0
  1475   00008B                     ___flsub@a:
  1476                           	callstack 0
  1477                           
  1478                           ; 4 bytes @ 0x2B
  1479   00008B                     	ds	4
  1480   00008F                     ??___flge:
  1481                           
  1482                           ; 1 bytes @ 0x2F
  1483   00008F                     	ds	4
  1484   000093                     efgtoa@fp:
  1485                           	callstack 0
  1486                           
  1487                           ; 1 bytes @ 0x33
  1488   000093                     	ds	1
  1489   000094                     efgtoa@f:
  1490                           	callstack 0
  1491                           
  1492                           ; 4 bytes @ 0x34
  1493   000094                     	ds	4
  1494   000098                     efgtoa@c:
  1495                           	callstack 0
  1496                           
  1497                           ; 1 bytes @ 0x38
  1498   000098                     	ds	1
  1499   000099                     ??_efgtoa:
  1500                           
  1501                           ; 1 bytes @ 0x39
  1502   000099                     	ds	2
  1503   00009B                     efgtoa@ne:
  1504                           	callstack 0
  1505                           
  1506                           ; 2 bytes @ 0x3B
  1507   00009B                     	ds	2
  1508   00009D                     efgtoa@p:
  1509                           	callstack 0
  1510                           
  1511                           ; 2 bytes @ 0x3D
  1512   00009D                     	ds	2
  1513   00009F                     efgtoa@t:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x3F
  1517   00009F                     	ds	2
  1518   0000A1                     _efgtoa$1301:
  1519                           	callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x41
  1522   0000A1                     	ds	2
  1523   0000A3                     efgtoa@pp:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x43
  1527   0000A3                     	ds	1
  1528   0000A4                     efgtoa@mode:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x44
  1532   0000A4                     	ds	1
  1533   0000A5                     efgtoa@nmode:
  1534                           	callstack 0
  1535                           
  1536                           ; 1 bytes @ 0x45
  1537   0000A5                     	ds	1
  1538   0000A6                     efgtoa@d:
  1539                           	callstack 0
  1540                           
  1541                           ; 2 bytes @ 0x46
  1542   0000A6                     	ds	2
  1543   0000A8                     efgtoa@m:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x48
  1547   0000A8                     	ds	2
  1548   0000AA                     efgtoa@e:
  1549                           	callstack 0
  1550                           
  1551                           ; 2 bytes @ 0x4A
  1552   0000AA                     	ds	2
  1553   0000AC                     efgtoa@w:
  1554                           	callstack 0
  1555                           
  1556                           ; 2 bytes @ 0x4C
  1557   0000AC                     	ds	2
  1558   0000AE                     efgtoa@ou:
  1559                           	callstack 0
  1560                           
  1561                           ; 4 bytes @ 0x4E
  1562   0000AE                     	ds	4
  1563   0000B2                     efgtoa@i:
  1564                           	callstack 0
  1565                           
  1566                           ; 2 bytes @ 0x52
  1567   0000B2                     	ds	2
  1568   0000B4                     efgtoa@h:
  1569                           	callstack 0
  1570                           
  1571                           ; 4 bytes @ 0x54
  1572   0000B4                     	ds	4
  1573   0000B8                     efgtoa@l:
  1574                           	callstack 0
  1575                           
  1576                           ; 4 bytes @ 0x58
  1577   0000B8                     	ds	4
  1578   0000BC                     efgtoa@sign:
  1579                           	callstack 0
  1580                           
  1581                           ; 1 bytes @ 0x5C
  1582   0000BC                     	ds	1
  1583   0000BD                     efgtoa@g:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x5D
  1587   0000BD                     	ds	4
  1588   0000C1                     efgtoa@n:
  1589                           	callstack 0
  1590                           
  1591                           ; 2 bytes @ 0x61
  1592   0000C1                     	ds	2
  1593   0000C3                     efgtoa@u:
  1594                           	callstack 0
  1595                           
  1596                           ; 4 bytes @ 0x63
  1597   0000C3                     	ds	4
  1598   0000C7                     vfpfcnvrt@fp:
  1599                           	callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x67
  1602   0000C7                     	ds	1
  1603   0000C8                     vfpfcnvrt@fmt:
  1604                           	callstack 0
  1605                           
  1606                           ; 1 bytes @ 0x68
  1607   0000C8                     	ds	1
  1608   0000C9                     vfpfcnvrt@ap:
  1609                           	callstack 0
  1610                           
  1611                           ; 1 bytes @ 0x69
  1612   0000C9                     	ds	1
  1613   0000CA                     ??_vfpfcnvrt:
  1614                           
  1615                           ; 1 bytes @ 0x6A
  1616   0000CA                     	ds	1
  1617   0000CB                     vfpfcnvrt@done:
  1618                           	callstack 0
  1619                           
  1620                           ; 1 bytes @ 0x6B
  1621   0000CB                     	ds	1
  1622   0000CC                     vfpfcnvrt@convarg:
  1623                           	callstack 0
  1624                           
  1625                           ; 4 bytes @ 0x6C
  1626   0000CC                     	ds	4
  1627   0000D0                     vfpfcnvrt@c:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0x70
  1631   0000D0                     	ds	1
  1632   0000D1                     vfpfcnvrt@cp:
  1633                           	callstack 0
  1634                           
  1635                           ; 1 bytes @ 0x71
  1636   0000D1                     	ds	1
  1637   0000D2                     ?_vfprintf:
  1638                           	callstack 0
  1639   0000D2                     vfprintf@fp:
  1640                           	callstack 0
  1641                           
  1642                           ; 1 bytes @ 0x72
  1643   0000D2                     	ds	1
  1644   0000D3                     vfprintf@fmt:
  1645                           	callstack 0
  1646                           
  1647                           ; 1 bytes @ 0x73
  1648   0000D3                     	ds	1
  1649   0000D4                     vfprintf@ap:
  1650                           	callstack 0
  1651                           
  1652                           ; 1 bytes @ 0x74
  1653   0000D4                     	ds	1
  1654   0000D5                     vfprintf@cfmt:
  1655                           	callstack 0
  1656   0000D5                     
  1657                           ; 1 bytes @ 0x75
  1658   0000D5                     	ds	1
  1659   0000D6                     ?_sprintf:
  1660                           	callstack 0
  1661   0000D6                     sprintf@s:
  1662                           	callstack 0
  1663                           
  1664                           ; 2 bytes @ 0x76
  1665   0000D6                     	ds	2
  1666   0000D8                     sprintf@fmt:
  1667                           	callstack 0
  1668                           
  1669                           ; 1 bytes @ 0x78
  1670   0000D8                     	ds	5
  1671   0000DD                     sprintf@ap:
  1672                           	callstack 0
  1673   0000DD                     
  1674                           ; 1 bytes @ 0x7D
  1675   0000DD                     	ds	1
  1676   0000DE                     sprintf@f:
  1677                           	callstack 0
  1678                           
  1679                           ; 11 bytes @ 0x7E
  1680   0000DE                     	ds	11
  1681   0000E9                     ??_main:
  1682                           
  1683                           ; 1 bytes @ 0x89
  1684   0000E9                     	ds	2
  1685                           
  1686                           	psect	cstackCOMRAM
  1687   000001                     __pcstackCOMRAM:
  1688                           	callstack 0
  1689   000001                     ?i2___xxtofl:
  1690                           	callstack 0
  1691   000001                     i2___xxtofl@val:
  1692                           	callstack 0
  1693                           
  1694                           ; 4 bytes @ 0x0
  1695   000001                     	ds	4
  1696   000005                     ??i2___xxtofl:
  1697                           
  1698                           ; 1 bytes @ 0x4
  1699   000005                     	ds	4
  1700   000009                     i2___xxtofl@sign:
  1701                           	callstack 0
  1702                           
  1703                           ; 1 bytes @ 0x8
  1704   000009                     	ds	1
  1705   00000A                     i2___xxtofl@exp:
  1706                           	callstack 0
  1707                           
  1708                           ; 1 bytes @ 0x9
  1709   00000A                     	ds	1
  1710   00000B                     i2___xxtofl@arg:
  1711                           	callstack 0
  1712                           
  1713                           ; 4 bytes @ 0xA
  1714   00000B                     	ds	4
  1715   00000F                     ?i2___flmul:
  1716                           	callstack 0
  1717   00000F                     i2___flmul@b:
  1718                           	callstack 0
  1719                           
  1720                           ; 4 bytes @ 0xE
  1721   00000F                     	ds	4
  1722   000013                     i2___flmul@a:
  1723                           	callstack 0
  1724                           
  1725                           ; 4 bytes @ 0x12
  1726   000013                     	ds	4
  1727   000017                     ??i2___flmul:
  1728                           
  1729                           ; 1 bytes @ 0x16
  1730   000017                     	ds	4
  1731   00001B                     i2___flmul@sign:
  1732                           	callstack 0
  1733                           
  1734                           ; 1 bytes @ 0x1A
  1735   00001B                     	ds	1
  1736   00001C                     i2___flmul@grs:
  1737                           	callstack 0
  1738                           
  1739                           ; 4 bytes @ 0x1B
  1740   00001C                     	ds	4
  1741   000020                     i2___flmul@aexp:
  1742                           	callstack 0
  1743                           
  1744                           ; 1 bytes @ 0x1F
  1745   000020                     	ds	1
  1746   000021                     i2___flmul@bexp:
  1747                           	callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x20
  1750   000021                     	ds	1
  1751   000022                     i2___flmul@prod:
  1752                           	callstack 0
  1753                           
  1754                           ; 4 bytes @ 0x21
  1755   000022                     	ds	4
  1756   000026                     i2___flmul@temp:
  1757                           	callstack 0
  1758                           
  1759                           ; 2 bytes @ 0x25
  1760   000026                     	ds	2
  1761   000028                     ??_my_ISR:
  1762                           
  1763                           ; 1 bytes @ 0x27
  1764   000028                     	ds	2
  1765                           
  1766 ;;
  1767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1768 ;;
  1769 ;; *************** function _main *****************
  1770 ;; Defined at:
  1771 ;;		line 118 in file "main.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  countdownMsg   17    0[BANK1 ] unsigned char [17]
  1776 ;;  secondsLeft     2   17[BANK1 ] int 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  1    wreg      void 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Locals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1789 ;;      Totals:         0       2      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1790 ;;Total ram usage:       21 bytes
  1791 ;; Hardware stack levels required when called: 10
  1792 ;; This function calls:
  1793 ;;		_ADC_Init
  1794 ;;		_Interrupt_Init
  1795 ;;		_LCD_Command
  1796 ;;		_LCD_Init
  1797 ;;		_LCD_String
  1798 ;;		_LCD_String_xy
  1799 ;;		___flmul
  1800 ;;		___xxtofl
  1801 ;;		_sprintf
  1802 ;; This function is called by:
  1803 ;;		Startup code after reset
  1804 ;; This function uses a non-reentrant model
  1805 ;;
  1806                           
  1807                           	psect	text0
  1808   007E9A                     __ptext0:
  1809                           	callstack 0
  1810   007E9A                     _main:
  1811                           	callstack 21
  1812   007E9A                     
  1813                           ;main.c: 120:     ANSELA = 0; ANSELB = 0; ANSELC = 0; ANSELD = 0;
  1814   007E9A  013A               	movlb	58	; () banked
  1815   007E9C  6B40               	clrf	64,b	;volatile
  1816   007E9E  6B50               	clrf	80,b	;volatile
  1817   007EA0  6B60               	clrf	96,b	;volatile
  1818   007EA2  6B70               	clrf	112,b	;volatile
  1819   007EA4                     
  1820                           ; BSR set to: 58
  1821                           ;main.c: 123:     LCD_Init();
  1822   007EA4  EC66  F04A         	call	_LCD_Init	;wreg free
  1823   007EA8                     
  1824                           ;main.c: 124:     ADC_Init();
  1825   007EA8  ECA4  F04A         	call	_ADC_Init	;wreg free
  1826   007EAC                     
  1827                           ;main.c: 125:     Interrupt_Init();
  1828   007EAC  ECF4  F049         	call	_Interrupt_Init	;wreg free
  1829   007EB0                     
  1830                           ;main.c: 128:     ADCON0bits.GO = 1;
  1831   007EB0  013E               	movlb	62	; () banked
  1832   007EB2  81F8               	bsf	248,0,b	;volatile
  1833   007EB4                     l115:
  1834                           
  1835                           ; BSR set to: 62
  1836   007EB4  B1F8               	btfsc	248,0,b	;volatile
  1837   007EB6  EF5F  F03F         	goto	u7011
  1838   007EBA  EF61  F03F         	goto	u7010
  1839   007EBE                     u7011:
  1840   007EBE  EF5A  F03F         	goto	l115
  1841   007EC2                     u7010:
  1842   007EC2                     
  1843                           ; BSR set to: 62
  1844                           ;main.c: 132:     digital = (ADRESH << 8) | ADRESL;
  1845   007EC2  51EF               	movf	239,w,b	;volatile
  1846   007EC4  006F FBC0  F0E9    	movff	16112,??_main	;volatile
  1847   007ECA  0100               	movlb	0	; () banked
  1848   007ECC  6BEA               	clrf	(??_main+1)& (0+255),b
  1849   007ECE  C0E9  F0EA         	movff	??_main,??_main+1
  1850   007ED2  6BE9               	clrf	??_main& (0+255),b
  1851   007ED4  11E9               	iorwf	??_main& (0+255),w,b
  1852   007ED6  6FF3               	movwf	_digital& (0+255),b
  1853   007ED8  51EA               	movf	(??_main+1)& (0+255),w,b
  1854   007EDA  6FF4               	movwf	(_digital+1)& (0+255),b
  1855   007EDC                     
  1856                           ; BSR set to: 0
  1857                           ;main.c: 133:     voltage = (float)digital * (5.0 / 4096.0);
  1858   007EDC  C0F3  F060         	movff	_digital,___xxtofl@val
  1859   007EE0  C0F4  F061         	movff	_digital+1,___xxtofl@val+1
  1860   007EE4  0E00               	movlw	0
  1861   007EE6  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1862   007EE8  0EFF               	movlw	-1
  1863   007EEA  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
  1864   007EEC  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
  1865   007EEE  0E01               	movlw	1
  1866   007EF0  ECCB  F041         	call	___xxtofl
  1867   007EF4  C060  F06E         	movff	?___xxtofl,___flmul@b
  1868   007EF8  C061  F06F         	movff	?___xxtofl+1,___flmul@b+1
  1869   007EFC  C062  F070         	movff	?___xxtofl+2,___flmul@b+2
  1870   007F00  C063  F071         	movff	?___xxtofl+3,___flmul@b+3
  1871   007F04  0E00               	movlw	0
  1872   007F06  0100               	movlb	0	; () banked
  1873   007F08  6F72               	movwf	___flmul@a& (0+255),b
  1874   007F0A  0E00               	movlw	0
  1875   007F0C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1876   007F0E  0EA0               	movlw	160
  1877   007F10  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1878   007F12  0E3A               	movlw	58
  1879   007F14  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1880   007F16  ECAC  F037         	call	___flmul	;wreg free
  1881   007F1A  C06E  F0EB         	movff	?___flmul,_voltage
  1882   007F1E  C06F  F0EC         	movff	?___flmul+1,_voltage+1
  1883   007F22  C070  F0ED         	movff	?___flmul+2,_voltage+2
  1884   007F26  C071  F0EE         	movff	?___flmul+3,_voltage+3
  1885   007F2A                     
  1886                           ;main.c: 134:     lux = voltage * 200.0;
  1887   007F2A  C0EB  F06E         	movff	_voltage,___flmul@b
  1888   007F2E  C0EC  F06F         	movff	_voltage+1,___flmul@b+1
  1889   007F32  C0ED  F070         	movff	_voltage+2,___flmul@b+2
  1890   007F36  C0EE  F071         	movff	_voltage+3,___flmul@b+3
  1891   007F3A  0E00               	movlw	0
  1892   007F3C  0100               	movlb	0	; () banked
  1893   007F3E  6F72               	movwf	___flmul@a& (0+255),b
  1894   007F40  0E00               	movlw	0
  1895   007F42  6F73               	movwf	(___flmul@a+1)& (0+255),b
  1896   007F44  0E48               	movlw	72
  1897   007F46  6F74               	movwf	(___flmul@a+2)& (0+255),b
  1898   007F48  0E43               	movlw	67
  1899   007F4A  6F75               	movwf	(___flmul@a+3)& (0+255),b
  1900   007F4C  ECAC  F037         	call	___flmul	;wreg free
  1901   007F50  C06E  F032         	movff	?___flmul,_lux
  1902   007F54  C06F  F033         	movff	?___flmul+1,_lux+1
  1903   007F58  C070  F034         	movff	?___flmul+2,_lux+2
  1904   007F5C  C071  F035         	movff	?___flmul+3,_lux+3
  1905   007F60                     
  1906                           ;main.c: 136:     LCD_Command(0x01);
  1907   007F60  0E01               	movlw	1
  1908   007F62  EC90  F04A         	call	_LCD_Command
  1909   007F66                     
  1910                           ;main.c: 137:     LCD_String_xy(1, 0, "Input Light:");
  1911   007F66  0E00               	movlw	0
  1912   007F68  0100               	movlb	0	; () banked
  1913   007F6A  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1914   007F6C  0E1F               	movlw	low STR_1
  1915   007F6E  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1916   007F70  516A               	movf	LCD_String_xy@msg& (0+255),w,b
  1917   007F72  A4D8               	btfss	status,2,c
  1918   007F74  0E20               	movlw	high __smallconst
  1919   007F76  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1920   007F78  0E01               	movlw	1
  1921   007F7A  ECF5  F048         	call	_LCD_String_xy
  1922   007F7E                     
  1923                           ;main.c: 138:     sprintf(data, "%.0f Lux", lux);
  1924   007F7E  0E36               	movlw	low _data
  1925   007F80  0100               	movlb	0	; () banked
  1926   007F82  6FD6               	movwf	sprintf@s& (0+255),b
  1927   007F84  6BD7               	clrf	(sprintf@s+1)& (0+255),b
  1928   007F86  0E37               	movlw	low STR_2
  1929   007F88  6FD8               	movwf	sprintf@fmt& (0+255),b
  1930   007F8A  C032  F0D9         	movff	_lux,?_sprintf+3
  1931   007F8E  C033  F0DA         	movff	_lux+1,?_sprintf+4
  1932   007F92  C034  F0DB         	movff	_lux+2,?_sprintf+5
  1933   007F96  C035  F0DC         	movff	_lux+3,?_sprintf+6
  1934   007F9A  ECD4  F049         	call	_sprintf	;wreg free
  1935   007F9E                     
  1936                           ;main.c: 139:     LCD_String_xy(2, 3, data);
  1937   007F9E  0E03               	movlw	3
  1938   007FA0  0100               	movlb	0	; () banked
  1939   007FA2  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1940   007FA4  0E36               	movlw	low _data
  1941   007FA6  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1942   007FA8  6B6B               	clrf	(LCD_String_xy@msg+1)& (0+255),b
  1943   007FAA  0E02               	movlw	2
  1944   007FAC  ECF5  F048         	call	_LCD_String_xy
  1945   007FB0                     
  1946                           ;main.c: 141:     PIE1bits.ADIE = 1;
  1947   007FB0  0139               	movlb	57	; () banked
  1948   007FB2  8591               	bsf	145,2,b	;volatile
  1949   007FB4                     
  1950                           ; BSR set to: 57
  1951                           ;main.c: 142:     ADCON0bits.GO = 1;
  1952   007FB4  013E               	movlb	62	; () banked
  1953   007FB6  81F8               	bsf	248,0,b	;volatile
  1954   007FB8                     l5595:
  1955                           
  1956                           ;main.c: 145:         if (interruptTriggered) {
  1957   007FB8  0100               	movlb	0	; () banked
  1958   007FBA  51F7               	movf	_interruptTriggered& (0+255),w,b
  1959   007FBC  B4D8               	btfsc	status,2,c
  1960   007FBE  EFE3  F03F         	goto	u7021
  1961   007FC2  EFE5  F03F         	goto	u7020
  1962   007FC6                     u7021:
  1963   007FC6  EF69  F040         	goto	l5637
  1964   007FCA                     u7020:
  1965   007FCA                     
  1966                           ; BSR set to: 0
  1967                           ;main.c: 146:             systemState = 1;
  1968   007FCA  0E01               	movlw	1
  1969   007FCC  6FF6               	movwf	_systemState& (0+255),b
  1970   007FCE                     
  1971                           ; BSR set to: 0
  1972                           ;main.c: 148:             LCD_Command(0x01);
  1973   007FCE  0E01               	movlw	1
  1974   007FD0  EC90  F04A         	call	_LCD_Command
  1975   007FD4                     
  1976                           ;main.c: 149:             LCD_String_xy(1, 0, "INTERRUPT MODE");
  1977   007FD4  0E00               	movlw	0
  1978   007FD6  0100               	movlb	0	; () banked
  1979   007FD8  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  1980   007FDA  0E10               	movlw	low STR_3
  1981   007FDC  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  1982   007FDE  516A               	movf	LCD_String_xy@msg& (0+255),w,b
  1983   007FE0  A4D8               	btfss	status,2,c
  1984   007FE2  0E20               	movlw	high __smallconst
  1985   007FE4  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  1986   007FE6  0E01               	movlw	1
  1987   007FE8  ECF5  F048         	call	_LCD_String_xy
  1988   007FEC                     
  1989                           ;main.c: 151:             PIE1bits.ADIE = 0;
  1990   007FEC  0139               	movlb	57	; () banked
  1991   007FEE  9591               	bcf	145,2,b	;volatile
  1992   007FF0                     
  1993                           ; BSR set to: 57
  1994                           ;main.c: 154:             for (int secondsLeft = 10; secondsLeft > 0; secondsLeft--) {
  1995   007FF0  0E00               	movlw	0
  1996   007FF2  0101               	movlb	1	; () banked
  1997   007FF4  6F62               	movwf	(main@secondsLeft+1)& (0+255),b
  1998   007FF6  0E0A               	movlw	10
  1999   007FF8  6F61               	movwf	main@secondsLeft& (0+255),b
  2000   007FFA                     l5611:
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;main.c: 155:                 char countdownMsg[17];;main.c: 156:                 sprint
      +                          f(countdownMsg, "Time: %2d sec ", secondsLeft);
  2004   007FFA  0E50               	movlw	low main@countdownMsg
  2005   007FFC  0100               	movlb	0	; () banked
  2006   007FFE  6FD6               	movwf	sprintf@s& (0+255),b
  2007   008000  0E01               	movlw	high main@countdownMsg
  2008   008002  6FD7               	movwf	(sprintf@s+1)& (0+255),b
  2009   008004  0E01               	movlw	low STR_4
  2010   008006  6FD8               	movwf	sprintf@fmt& (0+255),b
  2011   008008  C161  F0D9         	movff	main@secondsLeft,?_sprintf+3
  2012   00800C  C162  F0DA         	movff	main@secondsLeft+1,?_sprintf+4
  2013   008010  ECD4  F049         	call	_sprintf	;wreg free
  2014   008014                     
  2015                           ;main.c: 157:                 LCD_String_xy(2, 0, countdownMsg);
  2016   008014  0E00               	movlw	0
  2017   008016  0100               	movlb	0	; () banked
  2018   008018  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2019   00801A  0E50               	movlw	low main@countdownMsg
  2020   00801C  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2021   00801E  0E01               	movlw	high main@countdownMsg
  2022   008020  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  2023   008022  0E02               	movlw	2
  2024   008024  ECF5  F048         	call	_LCD_String_xy
  2025   008028                     
  2026                           ;main.c: 159:                 LATCbits.LATC3 = 1;
  2027   008028  86BC               	bsf	188,3,c	;volatile
  2028   00802A                     
  2029                           ;main.c: 160:                 _delay((unsigned long)((500)*(4000000/4000.0)));
  2030   00802A  0E03               	movlw	3
  2031   00802C  0100               	movlb	0	; () banked
  2032   00802E  6FEA               	movwf	(??_main+1)& (0+255),b
  2033   008030  0E8A               	movlw	138
  2034   008032  6FE9               	movwf	??_main& (0+255),b
  2035   008034  0E55               	movlw	85
  2036   008036                     u7097:
  2037   008036  2EE8               	decfsz	wreg,f,c
  2038   008038  D7FE               	bra	u7097
  2039   00803A  2FE9               	decfsz	??_main& (0+255),f,b
  2040   00803C  D7FC               	bra	u7097
  2041   00803E  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  2042   008040  D7FA               	bra	u7097
  2043   008042  D000               	nop2	
  2044   008044                     
  2045                           ;main.c: 161:                 LATCbits.LATC3 = 0;
  2046   008044  96BC               	bcf	188,3,c	;volatile
  2047   008046                     
  2048                           ;main.c: 162:                 _delay((unsigned long)((500)*(4000000/4000.0)));
  2049   008046  0E03               	movlw	3
  2050   008048  0100               	movlb	0	; () banked
  2051   00804A  6FEA               	movwf	(??_main+1)& (0+255),b
  2052   00804C  0E8A               	movlw	138
  2053   00804E  6FE9               	movwf	??_main& (0+255),b
  2054   008050  0E55               	movlw	85
  2055   008052                     u7107:
  2056   008052  2EE8               	decfsz	wreg,f,c
  2057   008054  D7FE               	bra	u7107
  2058   008056  2FE9               	decfsz	??_main& (0+255),f,b
  2059   008058  D7FC               	bra	u7107
  2060   00805A  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  2061   00805C  D7FA               	bra	u7107
  2062   00805E  D000               	nop2	
  2063   008060                     
  2064                           ;main.c: 163:             }
  2065   008060  0101               	movlb	1	; () banked
  2066   008062  0761               	decf	main@secondsLeft& (0+255),f,b
  2067   008064  A0D8               	btfss	status,0,c
  2068   008066  0762               	decf	(main@secondsLeft+1)& (0+255),f,b
  2069   008068                     
  2070                           ; BSR set to: 1
  2071   008068  BF62               	btfsc	(main@secondsLeft+1)& (0+255),7,b
  2072   00806A  EF41  F040         	goto	u7030
  2073   00806E  5162               	movf	(main@secondsLeft+1)& (0+255),w,b
  2074   008070  E106               	bnz	u7031
  2075   008072  0561               	decf	main@secondsLeft& (0+255),w,b
  2076   008074  B0D8               	btfsc	status,0,c
  2077   008076  EF3F  F040         	goto	u7031
  2078   00807A  EF41  F040         	goto	u7030
  2079   00807E                     u7031:
  2080   00807E  EFFD  F03F         	goto	l5611
  2081   008082                     u7030:
  2082   008082                     
  2083                           ; BSR set to: 1
  2084                           ;main.c: 166:             interruptTriggered = 0;
  2085   008082  0100               	movlb	0	; () banked
  2086   008084  6BF7               	clrf	_interruptTriggered& (0+255),b
  2087                           
  2088                           ;main.c: 167:             systemState = 0;
  2089   008086  6BF6               	clrf	_systemState& (0+255),b
  2090                           
  2091                           ;main.c: 168:             LATCbits.LATC3 = 0;
  2092   008088  96BC               	bcf	188,3,c	;volatile
  2093                           
  2094                           ;main.c: 169:             IOCCFbits.IOCCF2 = 0;
  2095   00808A  013A               	movlb	58	; () banked
  2096   00808C  9567               	bcf	103,2,b	;volatile
  2097                           
  2098                           ;main.c: 170:             PIR0bits.IOCIF = 0;
  2099   00808E  0139               	movlb	57	; () banked
  2100   008090  9FA0               	bcf	160,7,b	;volatile
  2101                           
  2102                           ;main.c: 171:             PIE1bits.ADIE = 1;
  2103   008092  8591               	bsf	145,2,b	;volatile
  2104   008094                     
  2105                           ; BSR set to: 57
  2106                           ;main.c: 174:             LCD_Command(0x01);
  2107   008094  0E01               	movlw	1
  2108   008096  EC90  F04A         	call	_LCD_Command
  2109   00809A                     
  2110                           ;main.c: 175:             LCD_String_xy(1, 0, "Input Light:");
  2111   00809A  0E00               	movlw	0
  2112   00809C  0100               	movlb	0	; () banked
  2113   00809E  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2114   0080A0  0E1F               	movlw	low STR_1
  2115   0080A2  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2116   0080A4  516A               	movf	LCD_String_xy@msg& (0+255),w,b
  2117   0080A6  A4D8               	btfss	status,2,c
  2118   0080A8  0E20               	movlw	high __smallconst
  2119   0080AA  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  2120   0080AC  0E01               	movlw	1
  2121   0080AE  ECF5  F048         	call	_LCD_String_xy
  2122   0080B2                     
  2123                           ;main.c: 176:             LCD_String_xy(2, 3, "--- Lux");
  2124   0080B2  0E03               	movlw	3
  2125   0080B4  0100               	movlb	0	; () banked
  2126   0080B6  6F69               	movwf	LCD_String_xy@pos& (0+255),b
  2127   0080B8  0E40               	movlw	low STR_6
  2128   0080BA  6F6A               	movwf	LCD_String_xy@msg& (0+255),b
  2129   0080BC  516A               	movf	LCD_String_xy@msg& (0+255),w,b
  2130   0080BE  A4D8               	btfss	status,2,c
  2131   0080C0  0E20               	movlw	high __smallconst
  2132   0080C2  6F6B               	movwf	(LCD_String_xy@msg+1)& (0+255),b
  2133   0080C4  0E02               	movlw	2
  2134   0080C6  ECF5  F048         	call	_LCD_String_xy
  2135   0080CA                     
  2136                           ;main.c: 178:             adcReady = 0;
  2137   0080CA  0100               	movlb	0	; () banked
  2138   0080CC  6BF8               	clrf	_adcReady& (0+255),b
  2139   0080CE                     
  2140                           ; BSR set to: 0
  2141                           ;main.c: 179:             ADCON0bits.GO = 1;
  2142   0080CE  013E               	movlb	62	; () banked
  2143   0080D0  81F8               	bsf	248,0,b	;volatile
  2144   0080D2                     l5637:
  2145                           
  2146                           ;main.c: 183:         if (adcReady && systemState == 0) {
  2147   0080D2  0100               	movlb	0	; () banked
  2148   0080D4  51F8               	movf	_adcReady& (0+255),w,b
  2149   0080D6  B4D8               	btfsc	status,2,c
  2150   0080D8  EF70  F040         	goto	u7041
  2151   0080DC  EF72  F040         	goto	u7040
  2152   0080E0                     u7041:
  2153   0080E0  EFA1  F040         	goto	l5651
  2154   0080E4                     u7040:
  2155   0080E4                     
  2156                           ; BSR set to: 0
  2157   0080E4  51F6               	movf	_systemState& (0+255),w,b
  2158   0080E6  A4D8               	btfss	status,2,c
  2159   0080E8  EF78  F040         	goto	u7051
  2160   0080EC  EF7A  F040         	goto	u7050
  2161   0080F0                     u7051:
  2162   0080F0  EFA1  F040         	goto	l5651
  2163   0080F4                     u7050:
  2164   0080F4                     
  2165                           ; BSR set to: 0
  2166                           ;main.c: 184:             adcReady = 0;
  2167   0080F4  6BF8               	clrf	_adcReady& (0+255),b
  2168   0080F6                     
  2169                           ; BSR set to: 0
  2170                           ;main.c: 186:             LCD_Command(0xC3);
  2171   0080F6  0EC3               	movlw	195
  2172   0080F8  EC90  F04A         	call	_LCD_Command
  2173   0080FC                     
  2174                           ;main.c: 187:             sprintf(data, "%-3.0f Lux", lux);
  2175   0080FC  0E36               	movlw	low _data
  2176   0080FE  0100               	movlb	0	; () banked
  2177   008100  6FD6               	movwf	sprintf@s& (0+255),b
  2178   008102  6BD7               	clrf	(sprintf@s+1)& (0+255),b
  2179   008104  0E2C               	movlw	low STR_7
  2180   008106  6FD8               	movwf	sprintf@fmt& (0+255),b
  2181   008108  C032  F0D9         	movff	_lux,?_sprintf+3
  2182   00810C  C033  F0DA         	movff	_lux+1,?_sprintf+4
  2183   008110  C034  F0DB         	movff	_lux+2,?_sprintf+5
  2184   008114  C035  F0DC         	movff	_lux+3,?_sprintf+6
  2185   008118  ECD4  F049         	call	_sprintf	;wreg free
  2186   00811C                     
  2187                           ;main.c: 188:             LCD_String(data);
  2188   00811C  0E36               	movlw	low _data
  2189   00811E  0100               	movlb	0	; () banked
  2190   008120  6F67               	movwf	LCD_String@msg& (0+255),b
  2191   008122  6B68               	clrf	(LCD_String@msg+1)& (0+255),b
  2192   008124  EC61  F048         	call	_LCD_String	;wreg free
  2193   008128                     
  2194                           ;main.c: 190:             _delay((unsigned long)((200)*(4000000/4000.0)));
  2195   008128  0E02               	movlw	2
  2196   00812A  0100               	movlb	0	; () banked
  2197   00812C  6FEA               	movwf	(??_main+1)& (0+255),b
  2198   00812E  0E04               	movlw	4
  2199   008130  6FE9               	movwf	??_main& (0+255),b
  2200   008132  0EBA               	movlw	186
  2201   008134                     u7117:
  2202   008134  2EE8               	decfsz	wreg,f,c
  2203   008136  D7FE               	bra	u7117
  2204   008138  2FE9               	decfsz	??_main& (0+255),f,b
  2205   00813A  D7FC               	bra	u7117
  2206   00813C  2FEA               	decfsz	(??_main+1)& (0+255),f,b
  2207   00813E  D7FA               	bra	u7117
  2208   008140  0000               	nop	
  2209   008142                     l5651:
  2210                           
  2211                           ;main.c: 194:         if (!ADCON0bits.GO && !adcReady && systemState == 0) {
  2212   008142  013E               	movlb	62	; () banked
  2213   008144  B1F8               	btfsc	248,0,b	;volatile
  2214   008146  EFA7  F040         	goto	u7061
  2215   00814A  EFA9  F040         	goto	u7060
  2216   00814E                     u7061:
  2217   00814E  EFDC  F03F         	goto	l5595
  2218   008152                     u7060:
  2219   008152                     
  2220                           ; BSR set to: 62
  2221   008152  0100               	movlb	0	; () banked
  2222   008154  51F8               	movf	_adcReady& (0+255),w,b
  2223   008156  A4D8               	btfss	status,2,c
  2224   008158  EFB0  F040         	goto	u7071
  2225   00815C  EFB2  F040         	goto	u7070
  2226   008160                     u7071:
  2227   008160  EFDC  F03F         	goto	l5595
  2228   008164                     u7070:
  2229   008164                     
  2230                           ; BSR set to: 0
  2231   008164  51F6               	movf	_systemState& (0+255),w,b
  2232   008166  A4D8               	btfss	status,2,c
  2233   008168  EFB8  F040         	goto	u7081
  2234   00816C  EFBA  F040         	goto	u7080
  2235   008170                     u7081:
  2236   008170  EFDC  F03F         	goto	l5595
  2237   008174                     u7080:
  2238   008174                     
  2239                           ; BSR set to: 0
  2240                           ;main.c: 195:             ADCON0bits.GO = 1;
  2241   008174  013E               	movlb	62	; () banked
  2242   008176  81F8               	bsf	248,0,b	;volatile
  2243   008178  EFDC  F03F         	goto	l5595
  2244   00817C  EF57  F030         	goto	start
  2245   008180                     __end_of_main:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function _sprintf *****************
  2249 ;; Defined at:
  2250 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  s               2  118[BANK0 ] PTR unsigned char 
  2253 ;;		 -> main@countdownMsg(17), data(10), 
  2254 ;;  fmt             1  120[BANK0 ] PTR const unsigned char 
  2255 ;;		 -> STR_7(11), STR_4(15), STR_2(9), 
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;  f              11  126[BANK0 ] struct _IO_FILE
  2258 ;;  ret             2    0        int 
  2259 ;;  ap              1  125[BANK0 ] PTR void [1]
  2260 ;;		 -> ?_sprintf(2), 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  2  118[BANK0 ] int 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2270 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2271 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2273 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2274 ;;Total ram usage:       19 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; Hardware stack levels required when called: 9
  2277 ;; This function calls:
  2278 ;;		_vfprintf
  2279 ;; This function is called by:
  2280 ;;		_main
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text1
  2285   0093A8                     __ptext1:
  2286                           	callstack 0
  2287   0093A8                     _sprintf:
  2288                           	callstack 21
  2289   0093A8  0ED9               	movlw	low (?_sprintf+3)
  2290   0093AA  0100               	movlb	0	; () banked
  2291   0093AC  6FDD               	movwf	sprintf@ap& (0+255),b
  2292   0093AE  C0D6  F0DE         	movff	sprintf@s,sprintf@f
  2293   0093B2  C0D7  F0DF         	movff	sprintf@s+1,sprintf@f+1
  2294   0093B6                     
  2295                           ; BSR set to: 0
  2296   0093B6  0E00               	movlw	0
  2297   0093B8  6FE1               	movwf	(sprintf@f+3)& (0+255),b
  2298   0093BA  0E00               	movlw	0
  2299   0093BC  6FE0               	movwf	(sprintf@f+2)& (0+255),b
  2300   0093BE                     
  2301                           ; BSR set to: 0
  2302   0093BE  0E00               	movlw	0
  2303   0093C0  6FE8               	movwf	(sprintf@f+10)& (0+255),b
  2304   0093C2  0E00               	movlw	0
  2305   0093C4  6FE7               	movwf	(sprintf@f+9)& (0+255),b
  2306   0093C6                     
  2307                           ; BSR set to: 0
  2308   0093C6  0EDE               	movlw	low sprintf@f
  2309   0093C8  6FD2               	movwf	vfprintf@fp& (0+255),b
  2310   0093CA  C0D8  F0D3         	movff	sprintf@fmt,vfprintf@fmt
  2311   0093CE  0EDD               	movlw	low sprintf@ap
  2312   0093D0  6FD4               	movwf	vfprintf@ap& (0+255),b
  2313   0093D2  EC46  F049         	call	_vfprintf	;wreg free
  2314   0093D6  0100               	movlb	0	; () banked
  2315   0093D8  51E0               	movf	(sprintf@f+2)& (0+255),w,b
  2316   0093DA  25D6               	addwf	sprintf@s& (0+255),w,b
  2317   0093DC  6ED9               	movwf	fsr2l,c
  2318   0093DE  51E1               	movf	(sprintf@f+3)& (0+255),w,b
  2319   0093E0  21D7               	addwfc	(sprintf@s+1)& (0+255),w,b
  2320   0093E2  6EDA               	movwf	fsr2h,c
  2321   0093E4  6ADF               	clrf	indf2,c
  2322   0093E6                     
  2323                           ; BSR set to: 0
  2324   0093E6  0012               	return		;funcret
  2325   0093E8                     __end_of_sprintf:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _vfprintf *****************
  2329 ;; Defined at:
  2330 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  fp              1  114[BANK0 ] PTR struct _IO_FILE
  2333 ;;		 -> sprintf@f(11), 
  2334 ;;  fmt             1  115[BANK0 ] PTR const unsigned char 
  2335 ;;		 -> STR_7(11), STR_4(15), STR_2(9), 
  2336 ;;  ap              1  116[BANK0 ] PTR PTR void 
  2337 ;;		 -> sprintf@ap(1), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  cfmt            1  117[BANK0 ] PTR unsigned char 
  2340 ;;		 -> STR_7(11), STR_4(15), STR_2(9), 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  2  114[BANK0 ] int 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2350 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2351 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2353 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2354 ;;Total ram usage:        4 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 8
  2357 ;; This function calls:
  2358 ;;		_vfpfcnvrt
  2359 ;; This function is called by:
  2360 ;;		_sprintf
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           	psect	text2
  2365   00928C                     __ptext2:
  2366                           	callstack 0
  2367   00928C                     _vfprintf:
  2368                           	callstack 21
  2369   00928C                     
  2370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2371   00928C  C0D3  F0D5         	movff	vfprintf@fmt,vfprintf@cfmt
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2374   009290  EF53  F049         	goto	l5437
  2375   009294                     l5435:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2378   009294  C0D2  F0C7         	movff	vfprintf@fp,vfpfcnvrt@fp
  2379   009298  0ED5               	movlw	low vfprintf@cfmt
  2380   00929A  0100               	movlb	0	; () banked
  2381   00929C  6FC8               	movwf	vfpfcnvrt@fmt& (0+255),b
  2382   00929E  C0D4  F0C9         	movff	vfprintf@ap,vfpfcnvrt@ap
  2383   0092A2  ECC0  F03D         	call	_vfpfcnvrt	;wreg free
  2384   0092A6                     l5437:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2387   0092A6  0060  F357  FFF6   	movff	vfprintf@cfmt,tblptrl
  2388   0092AC                     	if	1	;There is more than 1 active tblptr byte
  2389   0092AC  0E20               	movlw	high __smallconst
  2390   0092AE  6EF7               	movwf	tblptrh,c
  2391   0092B0                     	endif
  2392   0092B0                     	if	0	;tblptru may be non-zero
  2393   0092B0                     	endif
  2394   0092B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2395   0092B0  0E00               	movlw	low (__smallconst shr (0+16))
  2396   0092B2  6EF8               	movwf	tblptru,c
  2397   0092B4                     	endif
  2398   0092B4  0008               	tblrd		*
  2399   0092B6  50F5               	movf	tablat,w,c
  2400   0092B8  0900               	iorlw	0
  2401   0092BA  A4D8               	btfss	status,2,c
  2402   0092BC  EF62  F049         	goto	u6891
  2403   0092C0  EF64  F049         	goto	u6890
  2404   0092C4                     u6891:
  2405   0092C4  EF4A  F049         	goto	l5435
  2406   0092C8                     u6890:
  2407   0092C8                     
  2408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2409   0092C8  0E00               	movlw	0
  2410   0092CA  0100               	movlb	0	; () banked
  2411   0092CC  6FD3               	movwf	(?_vfprintf+1)& (0+255),b
  2412   0092CE  0E00               	movlw	0
  2413   0092D0  6FD2               	movwf	?_vfprintf& (0+255),b
  2414   0092D2                     
  2415                           ; BSR set to: 0
  2416   0092D2  0012               	return		;funcret
  2417   0092D4                     __end_of_vfprintf:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _vfpfcnvrt *****************
  2421 ;; Defined at:
  2422 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;  fp              1  103[BANK0 ] PTR struct _IO_FILE
  2425 ;;		 -> sprintf@f(11), 
  2426 ;;  fmt             1  104[BANK0 ] PTR PTR unsigned char 
  2427 ;;		 -> vfprintf@cfmt(1), 
  2428 ;;  ap              1  105[BANK0 ] PTR PTR void 
  2429 ;;		 -> sprintf@ap(1), 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  convarg         4  108[BANK0 ] struct .
  2432 ;;  cp              1  113[BANK0 ] PTR unsigned char 
  2433 ;;		 -> STR_7(11), STR_4(15), STR_2(9), 
  2434 ;;  c               1  112[BANK0 ] unsigned char 
  2435 ;;  done            1  107[BANK0 ] _Bool 
  2436 ;; Return value:  Size  Location     Type
  2437 ;;                  1    wreg      void 
  2438 ;; Registers used:
  2439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2440 ;; Tracked objects:
  2441 ;;		On entry : 0/0
  2442 ;;		On exit  : 0/0
  2443 ;;		Unchanged: 0/0
  2444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2445 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2446 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2447 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;Total ram usage:       11 bytes
  2450 ;; Hardware stack levels used: 1
  2451 ;; Hardware stack levels required when called: 7
  2452 ;; This function calls:
  2453 ;;		_dtoa
  2454 ;;		_efgtoa
  2455 ;;		_fputc
  2456 ;;		_read_prec_or_width
  2457 ;; This function is called by:
  2458 ;;		_vfprintf
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text3
  2463   007B80                     __ptext3:
  2464                           	callstack 0
  2465   007B80                     _vfpfcnvrt:
  2466                           	callstack 21
  2467   007B80                     
  2468                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2469   007B80  0100               	movlb	0	; () banked
  2470   007B82  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2471   007B84  6ED9               	movwf	fsr2l,c
  2472   007B86  6ADA               	clrf	fsr2h,c
  2473   007B88  006F FF7F FFF6     	movff	indf2,tblptrl
  2474   007B8E                     	if	1	;There is more than 1 active tblptr byte
  2475   007B8E  0E20               	movlw	high __smallconst
  2476   007B90  6EF7               	movwf	tblptrh,c
  2477   007B92                     	endif
  2478   007B92                     	if	0	;tblptru may be non-zero
  2479   007B92                     	endif
  2480   007B92                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2481   007B92  0E00               	movlw	low (__smallconst shr (0+16))
  2482   007B94  6EF8               	movwf	tblptru,c
  2483   007B96                     	endif
  2484   007B96  0008               	tblrd		*
  2485   007B98  50F5               	movf	tablat,w,c
  2486   007B9A  0A25               	xorlw	37
  2487   007B9C  A4D8               	btfss	status,2,c
  2488   007B9E  EFD3  F03D         	goto	u6791
  2489   007BA2  EFD5  F03D         	goto	u6790
  2490   007BA6                     u6791:
  2491   007BA6  EF38  F03F         	goto	l5407
  2492   007BAA                     u6790:
  2493   007BAA                     
  2494                           ; BSR set to: 0
  2495                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2496   007BAA  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2497   007BAC  6ED9               	movwf	fsr2l,c
  2498   007BAE  6ADA               	clrf	fsr2h,c
  2499   007BB0  2ADF               	incf	indf2,f,c
  2500   007BB2                     
  2501                           ; BSR set to: 0
  2502                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2503   007BB2  0E00               	movlw	0
  2504   007BB4  6FF0               	movwf	(_width+1)& (0+255),b
  2505   007BB6  0E00               	movlw	0
  2506   007BB8  6FEF               	movwf	_width& (0+255),b
  2507   007BBA  C0EF  F0F5         	movff	_width,_flags
  2508   007BBE                     
  2509                           ; BSR set to: 0
  2510                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2511   007BBE  69F1               	setf	_prec& (0+255),b
  2512   007BC0  69F2               	setf	(_prec+1)& (0+255),b
  2513   007BC2                     
  2514                           ; BSR set to: 0
  2515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2516   007BC2  6BCB               	clrf	vfpfcnvrt@done& (0+255),b
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2519   007BC4  EF01  F03E         	goto	l5343
  2520   007BC8                     l5333:
  2521                           
  2522                           ; BSR set to: 0
  2523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1214:            
      +                                   flags |= (1 << 0);
  2524   007BC8  81F5               	bsf	_flags& (0+255),0,b
  2525   007BCA                     
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1215:            
      +                                   ++*fmt;
  2528   007BCA  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2529   007BCC  6ED9               	movwf	fsr2l,c
  2530   007BCE  6ADA               	clrf	fsr2h,c
  2531   007BD0  2ADF               	incf	indf2,f,c
  2532                           
  2533                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1216:            
      +                                   break;
  2534   007BD2  EF01  F03E         	goto	l5343
  2535   007BD6                     l5337:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2539   007BD6  0E01               	movlw	1
  2540   007BD8  6FCB               	movwf	vfpfcnvrt@done& (0+255),b
  2541                           
  2542                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2543   007BDA  EF01  F03E         	goto	l5343
  2544   007BDE                     l5341:
  2545                           
  2546                           ; BSR set to: 0
  2547   007BDE  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2548   007BE0  6ED9               	movwf	fsr2l,c
  2549   007BE2  6ADA               	clrf	fsr2h,c
  2550   007BE4  006F FF7F FFF6     	movff	indf2,tblptrl
  2551   007BEA                     	if	1	;There is more than 1 active tblptr byte
  2552   007BEA  0E20               	movlw	high __smallconst
  2553   007BEC  6EF7               	movwf	tblptrh,c
  2554   007BEE                     	endif
  2555   007BEE                     	if	0	;tblptru may be non-zero
  2556   007BEE                     	endif
  2557   007BEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2558   007BEE  0E00               	movlw	low (__smallconst shr (0+16))
  2559   007BF0  6EF8               	movwf	tblptru,c
  2560   007BF2                     	endif
  2561   007BF2  0008               	tblrd		*
  2562   007BF4  50F5               	movf	tablat,w,c
  2563                           
  2564                           ; Switch size 1, requested type "simple"
  2565                           ; Number of cases is 1, Range of values is 45 to 45
  2566                           ; switch strategies available:
  2567                           ; Name         Instructions Cycles
  2568                           ; simple_byte            4     3 (average)
  2569                           ;	Chosen strategy is simple_byte
  2570   007BF6  0A2D               	xorlw	45	; case 45
  2571   007BF8  B4D8               	btfsc	status,2,c
  2572   007BFA  EFE4  F03D         	goto	l5333
  2573   007BFE  EFEB  F03D         	goto	l5337
  2574   007C02                     l5343:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2578   007C02  51CB               	movf	vfpfcnvrt@done& (0+255),w,b
  2579   007C04  B4D8               	btfsc	status,2,c
  2580   007C06  EF07  F03E         	goto	u6801
  2581   007C0A  EF09  F03E         	goto	u6800
  2582   007C0E                     u6801:
  2583   007C0E  EFEF  F03D         	goto	l5341
  2584   007C12                     u6800:
  2585   007C12                     
  2586                           ; BSR set to: 0
  2587                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2588   007C12  C0C8  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2589   007C16  C0C9  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2590   007C1A  EC0A  F047         	call	_read_prec_or_width	;wreg free
  2591   007C1E  C060  F0EF         	movff	?_read_prec_or_width,_width
  2592   007C22  C061  F0F0         	movff	?_read_prec_or_width+1,_width+1
  2593   007C26                     
  2594                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2595   007C26  0100               	movlb	0	; () banked
  2596   007C28  BFF0               	btfsc	(_width+1)& (0+255),7,b
  2597   007C2A  EF1B  F03E         	goto	u6810
  2598   007C2E  EF19  F03E         	goto	u6811
  2599   007C32                     u6811:
  2600   007C32  EF20  F03E         	goto	l5351
  2601   007C36                     u6810:
  2602   007C36                     
  2603                           ; BSR set to: 0
  2604                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2605   007C36  81F5               	bsf	_flags& (0+255),0,b
  2606                           
  2607                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2608   007C38  6DEF               	negf	_width& (0+255),b
  2609   007C3A  1FF0               	comf	(_width+1)& (0+255),f,b
  2610   007C3C  B0D8               	btfsc	status,0,c
  2611   007C3E  2BF0               	incf	(_width+1)& (0+255),f,b
  2612   007C40                     l5351:
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2616   007C40  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2617   007C42  6ED9               	movwf	fsr2l,c
  2618   007C44  6ADA               	clrf	fsr2h,c
  2619   007C46  006F FF7F FFF6     	movff	indf2,tblptrl
  2620   007C4C                     	if	1	;There is more than 1 active tblptr byte
  2621   007C4C  0E20               	movlw	high __smallconst
  2622   007C4E  6EF7               	movwf	tblptrh,c
  2623   007C50                     	endif
  2624   007C50                     	if	0	;tblptru may be non-zero
  2625   007C50                     	endif
  2626   007C50                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2627   007C50  0E00               	movlw	low (__smallconst shr (0+16))
  2628   007C52  6EF8               	movwf	tblptru,c
  2629   007C54                     	endif
  2630   007C54  0008               	tblrd		*
  2631   007C56  50F5               	movf	tablat,w,c
  2632   007C58  0A2E               	xorlw	46
  2633   007C5A  A4D8               	btfss	status,2,c
  2634   007C5C  EF32  F03E         	goto	u6821
  2635   007C60  EF34  F03E         	goto	u6820
  2636   007C64                     u6821:
  2637   007C64  EF42  F03E         	goto	l5357
  2638   007C68                     u6820:
  2639   007C68                     
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2642   007C68  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2643   007C6A  6ED9               	movwf	fsr2l,c
  2644   007C6C  6ADA               	clrf	fsr2h,c
  2645   007C6E  2ADF               	incf	indf2,f,c
  2646   007C70                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2649   007C70  C0C8  F060         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2650   007C74  C0C9  F061         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2651   007C78  EC0A  F047         	call	_read_prec_or_width	;wreg free
  2652   007C7C  C060  F0F1         	movff	?_read_prec_or_width,_prec
  2653   007C80  C061  F0F2         	movff	?_read_prec_or_width+1,_prec+1
  2654   007C84                     l5357:
  2655                           
  2656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2657   007C84  0100               	movlb	0	; () banked
  2658   007C86  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2659   007C88  6ED9               	movwf	fsr2l,c
  2660   007C8A  6ADA               	clrf	fsr2h,c
  2661   007C8C  50DF               	movf	indf2,w,c
  2662   007C8E  6FD1               	movwf	vfpfcnvrt@cp& (0+255),b
  2663   007C90                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2666   007C90  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2667   007C96                     	if	1	;There is more than 1 active tblptr byte
  2668   007C96  0E20               	movlw	high __smallconst
  2669   007C98  6EF7               	movwf	tblptrh,c
  2670   007C9A                     	endif
  2671   007C9A                     	if	0	;tblptru may be non-zero
  2672   007C9A                     	endif
  2673   007C9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2674   007C9A  0E00               	movlw	low (__smallconst shr (0+16))
  2675   007C9C  6EF8               	movwf	tblptru,c
  2676   007C9E                     	endif
  2677   007C9E  0008               	tblrd		*
  2678   007CA0  50F5               	movf	tablat,w,c
  2679   007CA2  0A64               	xorlw	100
  2680   007CA4  B4D8               	btfsc	status,2,c
  2681   007CA6  EF57  F03E         	goto	u6831
  2682   007CAA  EF59  F03E         	goto	u6830
  2683   007CAE                     u6831:
  2684   007CAE  EF6A  F03E         	goto	l5363
  2685   007CB2                     u6830:
  2686   007CB2                     
  2687                           ; BSR set to: 0
  2688   007CB2  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2689   007CB8                     	if	1	;There is more than 1 active tblptr byte
  2690   007CB8  0E20               	movlw	high __smallconst
  2691   007CBA  6EF7               	movwf	tblptrh,c
  2692   007CBC                     	endif
  2693   007CBC                     	if	0	;tblptru may be non-zero
  2694   007CBC                     	endif
  2695   007CBC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2696   007CBC  0E00               	movlw	low (__smallconst shr (0+16))
  2697   007CBE  6EF8               	movwf	tblptru,c
  2698   007CC0                     	endif
  2699   007CC0  0008               	tblrd		*
  2700   007CC2  50F5               	movf	tablat,w,c
  2701   007CC4  0A69               	xorlw	105
  2702   007CC6  A4D8               	btfss	status,2,c
  2703   007CC8  EF68  F03E         	goto	u6841
  2704   007CCC  EF6A  F03E         	goto	u6840
  2705   007CD0                     u6841:
  2706   007CD0  EF87  F03E         	goto	l5371
  2707   007CD4                     u6840:
  2708   007CD4                     l5363:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2712   007CD4  51C9               	movf	vfpfcnvrt@ap& (0+255),w,b
  2713   007CD6  6ED9               	movwf	fsr2l,c
  2714   007CD8  6ADA               	clrf	fsr2h,c
  2715   007CDA  0E02               	movlw	2
  2716   007CDC  26DF               	addwf	indf2,f,c
  2717   007CDE  5CDF               	subwf	indf2,w,c
  2718   007CE0  6ED9               	movwf	fsr2l,c
  2719   007CE2  6ADA               	clrf	fsr2h,c
  2720   007CE4  006F FF78  F0CC    	movff	postinc2,vfpfcnvrt@convarg
  2721   007CEA  006F FF78  F0CD    	movff	postinc2,vfpfcnvrt@convarg+1
  2722   007CF0                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2725   007CF0  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2726   007CF2  6ED9               	movwf	fsr2l,c
  2727   007CF4  6ADA               	clrf	fsr2h,c
  2728   007CF6  29D1               	incf	vfpfcnvrt@cp& (0+255),w,b
  2729   007CF8  6EDF               	movwf	indf2,c
  2730   007CFA                     
  2731                           ; BSR set to: 0
  2732                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2733   007CFA  C0C7  F076         	movff	vfpfcnvrt@fp,dtoa@fp
  2734   007CFE  C0CC  F077         	movff	vfpfcnvrt@convarg,dtoa@d
  2735   007D02  C0CD  F078         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2736   007D06  EC81  F043         	call	_dtoa	;wreg free
  2737   007D0A  EF4C  F03F         	goto	l984
  2738   007D0E                     l5371:
  2739                           
  2740                           ; BSR set to: 0
  2741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2742   007D0E  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2743   007D10  6ED9               	movwf	fsr2l,c
  2744   007D12  6ADA               	clrf	fsr2h,c
  2745   007D14  50DF               	movf	indf2,w,c
  2746   007D16  6FD1               	movwf	vfpfcnvrt@cp& (0+255),b
  2747   007D18                     
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2750   007D18  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2751   007D1E                     	if	1	;There is more than 1 active tblptr byte
  2752   007D1E  0E20               	movlw	high __smallconst
  2753   007D20  6EF7               	movwf	tblptrh,c
  2754   007D22                     	endif
  2755   007D22                     	if	0	;tblptru may be non-zero
  2756   007D22                     	endif
  2757   007D22                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2758   007D22  0E00               	movlw	low (__smallconst shr (0+16))
  2759   007D24  6EF8               	movwf	tblptru,c
  2760   007D26                     	endif
  2761   007D26  0008               	tblrd		*
  2762   007D28  006F FFD4  F0D0    	movff	tablat,vfpfcnvrt@c
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2765   007D2E  EFA3  F03E         	goto	l5381
  2766   007D32                     l5375:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2770   007D32  2BD1               	incf	vfpfcnvrt@cp& (0+255),f,b
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  2773   007D34  EFB2  F03E         	goto	l5383
  2774   007D38                     l5377:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2778   007D38  0E6C               	movlw	108
  2779   007D3A  6FD0               	movwf	vfpfcnvrt@c& (0+255),b
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  2782   007D3C  EFB2  F03E         	goto	l5383
  2783   007D40                     l990:
  2784                           
  2785                           ; BSR set to: 0
  2786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2787   007D40  6BD0               	clrf	vfpfcnvrt@c& (0+255),b
  2788                           
  2789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  2790   007D42  EFB2  F03E         	goto	l5383
  2791   007D46                     l5381:
  2792                           
  2793                           ; BSR set to: 0
  2794   007D46  51D0               	movf	vfpfcnvrt@c& (0+255),w,b
  2795                           
  2796                           ; Switch size 1, requested type "simple"
  2797                           ; Number of cases is 3, Range of values is 76 to 108
  2798                           ; switch strategies available:
  2799                           ; Name         Instructions Cycles
  2800                           ; simple_byte           10     6 (average)
  2801                           ;	Chosen strategy is simple_byte
  2802   007D48  0A4C               	xorlw	76	; case 76
  2803   007D4A  B4D8               	btfsc	status,2,c
  2804   007D4C  EF99  F03E         	goto	l5375
  2805   007D50  0A2A               	xorlw	42	; case 102
  2806   007D52  B4D8               	btfsc	status,2,c
  2807   007D54  EF9C  F03E         	goto	l5377
  2808   007D58  0A0A               	xorlw	10	; case 108
  2809   007D5A  B4D8               	btfsc	status,2,c
  2810   007D5C  EF99  F03E         	goto	l5375
  2811   007D60  EFA0  F03E         	goto	l990
  2812   007D64                     l5383:
  2813                           
  2814                           ; BSR set to: 0
  2815   007D64  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2816   007D6A                     	if	1	;There is more than 1 active tblptr byte
  2817   007D6A  0E20               	movlw	high __smallconst
  2818   007D6C  6EF7               	movwf	tblptrh,c
  2819   007D6E                     	endif
  2820   007D6E                     	if	0	;tblptru may be non-zero
  2821   007D6E                     	endif
  2822   007D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2823   007D6E  0E00               	movlw	low (__smallconst shr (0+16))
  2824   007D70  6EF8               	movwf	tblptru,c
  2825   007D72                     	endif
  2826   007D72  0008               	tblrd		*
  2827   007D74  50F5               	movf	tablat,w,c
  2828   007D76  0A66               	xorlw	102
  2829   007D78  A4D8               	btfss	status,2,c
  2830   007D7A  EFC1  F03E         	goto	u6851
  2831   007D7E  EFC3  F03E         	goto	u6850
  2832   007D82                     u6851:
  2833   007D82  EF31  F03F         	goto	l5403
  2834   007D86                     u6850:
  2835   007D86  EFF7  F03E         	goto	l5391
  2836   007D8A                     l5385:
  2837                           
  2838                           ; BSR set to: 0
  2839                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2840   007D8A  51C9               	movf	vfpfcnvrt@ap& (0+255),w,b
  2841   007D8C  6ED9               	movwf	fsr2l,c
  2842   007D8E  6ADA               	clrf	fsr2h,c
  2843   007D90  006F FF7C  F0CA    	movff	indf2,??_vfpfcnvrt
  2844   007D96  0E04               	movlw	4
  2845   007D98  26DF               	addwf	indf2,f,c
  2846   007D9A  51CA               	movf	??_vfpfcnvrt& (0+255),w,b
  2847   007D9C  6ED9               	movwf	fsr2l,c
  2848   007D9E  6ADA               	clrf	fsr2h,c
  2849   007DA0  006F FF78  F0CC    	movff	postinc2,vfpfcnvrt@convarg
  2850   007DA6  006F FF78  F0CD    	movff	postinc2,vfpfcnvrt@convarg+1
  2851   007DAC  006F FF78  F0CE    	movff	postinc2,vfpfcnvrt@convarg+2
  2852   007DB2  006F FF78  F0CF    	movff	postinc2,vfpfcnvrt@convarg+3
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  2855   007DB8  EF02  F03F         	goto	l5393
  2856   007DBC                     l5387:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2860   007DBC  51C9               	movf	vfpfcnvrt@ap& (0+255),w,b
  2861   007DBE  6ED9               	movwf	fsr2l,c
  2862   007DC0  6ADA               	clrf	fsr2h,c
  2863   007DC2  006F FF7C  F0CA    	movff	indf2,??_vfpfcnvrt
  2864   007DC8  0E04               	movlw	4
  2865   007DCA  26DF               	addwf	indf2,f,c
  2866   007DCC  51CA               	movf	??_vfpfcnvrt& (0+255),w,b
  2867   007DCE  6ED9               	movwf	fsr2l,c
  2868   007DD0  6ADA               	clrf	fsr2h,c
  2869   007DD2  006F FF78  F0CC    	movff	postinc2,vfpfcnvrt@convarg
  2870   007DD8  006F FF78  F0CD    	movff	postinc2,vfpfcnvrt@convarg+1
  2871   007DDE  006F FF78  F0CE    	movff	postinc2,vfpfcnvrt@convarg+2
  2872   007DE4  006F FF78  F0CF    	movff	postinc2,vfpfcnvrt@convarg+3
  2873                           
  2874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  2875   007DEA  EF02  F03F         	goto	l5393
  2876   007DEE                     l5391:
  2877                           
  2878                           ; BSR set to: 0
  2879   007DEE  51D0               	movf	vfpfcnvrt@c& (0+255),w,b
  2880                           
  2881                           ; Switch size 1, requested type "simple"
  2882                           ; Number of cases is 2, Range of values is 76 to 108
  2883                           ; switch strategies available:
  2884                           ; Name         Instructions Cycles
  2885                           ; simple_byte            7     4 (average)
  2886                           ;	Chosen strategy is simple_byte
  2887   007DF0  0A4C               	xorlw	76	; case 76
  2888   007DF2  B4D8               	btfsc	status,2,c
  2889   007DF4  EFDE  F03E         	goto	l5387
  2890   007DF8  0A20               	xorlw	32	; case 108
  2891   007DFA  B4D8               	btfsc	status,2,c
  2892   007DFC  EFC5  F03E         	goto	l5385
  2893   007E00  EF02  F03F         	goto	l5393
  2894   007E04                     l5393:
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2898   007E04  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2899   007E06  6ED9               	movwf	fsr2l,c
  2900   007E08  6ADA               	clrf	fsr2h,c
  2901   007E0A  29D1               	incf	vfpfcnvrt@cp& (0+255),w,b
  2902   007E0C  6EDF               	movwf	indf2,c
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2905   007E0E  EF22  F03F         	goto	l5401
  2906   007E12                     l5395:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2910   007E12  C0C7  F093         	movff	vfpfcnvrt@fp,efgtoa@fp
  2911   007E16  C0CC  F094         	movff	vfpfcnvrt@convarg,efgtoa@f
  2912   007E1A  C0CD  F095         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2913   007E1E  C0CE  F096         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2914   007E22  C0CF  F097         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2915   007E26  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2916   007E2C                     	if	1	;There is more than 1 active tblptr byte
  2917   007E2C  0E20               	movlw	high __smallconst
  2918   007E2E  6EF7               	movwf	tblptrh,c
  2919   007E30                     	endif
  2920   007E30                     	if	0	;tblptru may be non-zero
  2921   007E30                     	endif
  2922   007E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2923   007E30  0E00               	movlw	low (__smallconst shr (0+16))
  2924   007E32  6EF8               	movwf	tblptru,c
  2925   007E34                     	endif
  2926   007E34  0008               	tblrd		*
  2927   007E36  006F FFD4  F098    	movff	tablat,efgtoa@c
  2928   007E3C  EC59  F030         	call	_efgtoa	;wreg free
  2929   007E40  EF4C  F03F         	goto	l984
  2930   007E44                     l5401:
  2931                           
  2932                           ; BSR set to: 0
  2933   007E44  0060  F347  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  2934   007E4A                     	if	1	;There is more than 1 active tblptr byte
  2935   007E4A  0E20               	movlw	high __smallconst
  2936   007E4C  6EF7               	movwf	tblptrh,c
  2937   007E4E                     	endif
  2938   007E4E                     	if	0	;tblptru may be non-zero
  2939   007E4E                     	endif
  2940   007E4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2941   007E4E  0E00               	movlw	low (__smallconst shr (0+16))
  2942   007E50  6EF8               	movwf	tblptru,c
  2943   007E52                     	endif
  2944   007E52  0008               	tblrd		*
  2945   007E54  50F5               	movf	tablat,w,c
  2946                           
  2947                           ; Switch size 1, requested type "simple"
  2948                           ; Number of cases is 1, Range of values is 102 to 102
  2949                           ; switch strategies available:
  2950                           ; Name         Instructions Cycles
  2951                           ; simple_byte            4     3 (average)
  2952                           ;	Chosen strategy is simple_byte
  2953   007E56  0A66               	xorlw	102	; case 102
  2954   007E58  B4D8               	btfsc	status,2,c
  2955   007E5A  EF09  F03F         	goto	l5395
  2956   007E5E  EF31  F03F         	goto	l5403
  2957   007E62                     l5403:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2960   007E62  0100               	movlb	0	; () banked
  2961   007E64  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2962   007E66  6ED9               	movwf	fsr2l,c
  2963   007E68  6ADA               	clrf	fsr2h,c
  2964   007E6A  2ADF               	incf	indf2,f,c
  2965   007E6C  EF4C  F03F         	goto	l984
  2966   007E70                     l5407:
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2970   007E70  51C8               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2971   007E72  6ED9               	movwf	fsr2l,c
  2972   007E74  6ADA               	clrf	fsr2h,c
  2973   007E76  006F FF7F FFF6     	movff	indf2,tblptrl
  2974   007E7C                     	if	1	;There is more than 1 active tblptr byte
  2975   007E7C  0E20               	movlw	high __smallconst
  2976   007E7E  6EF7               	movwf	tblptrh,c
  2977   007E80                     	endif
  2978   007E80                     	if	0	;tblptru may be non-zero
  2979   007E80                     	endif
  2980   007E80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2981   007E80  0E00               	movlw	low (__smallconst shr (0+16))
  2982   007E82  6EF8               	movwf	tblptru,c
  2983   007E84                     	endif
  2984   007E84  0008               	tblrd		*
  2985   007E86  50F5               	movf	tablat,w,c
  2986   007E88  6F60               	movwf	fputc@c& (0+255),b
  2987   007E8A  6B61               	clrf	(fputc@c+1)& (0+255),b
  2988   007E8C  C0C7  F062         	movff	vfpfcnvrt@fp,fputc@fp
  2989   007E90  EC45  F046         	call	_fputc	;wreg free
  2990   007E94  EF31  F03F         	goto	l5403
  2991   007E98                     l984:
  2992   007E98  0012               	return		;funcret
  2993   007E9A                     __end_of_vfpfcnvrt:
  2994                           	callstack 0
  2995                           
  2996 ;; *************** function _read_prec_or_width *****************
  2997 ;; Defined at:
  2998 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  fmt             1    0[BANK0 ] PTR PTR const unsigned c
  3001 ;;		 -> vfprintf@cfmt(1), 
  3002 ;;  ap              1    1[BANK0 ] PTR PTR void [1]
  3003 ;;		 -> sprintf@ap(1), 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  c               1    4[BANK0 ] unsigned char 
  3006 ;;  n               2    5[BANK0 ] int 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    0[BANK0 ] int 
  3009 ;; Registers used:
  3010 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;Total ram usage:        7 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 2
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_vfpfcnvrt
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text4
  3031   008E14                     __ptext4:
  3032                           	callstack 0
  3033   008E14                     _read_prec_or_width:
  3034                           	callstack 25
  3035   008E14                     
  3036                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3037   008E14  0E00               	movlw	0
  3038   008E16  0100               	movlb	0	; () banked
  3039   008E18  6F66               	movwf	(read_prec_or_width@n+1)& (0+255),b
  3040   008E1A  0E00               	movlw	0
  3041   008E1C  6F65               	movwf	read_prec_or_width@n& (0+255),b
  3042   008E1E                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3045   008E1E  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  3046   008E20  6ED9               	movwf	fsr2l,c
  3047   008E22  6ADA               	clrf	fsr2h,c
  3048   008E24  006F FF7F FFF6     	movff	indf2,tblptrl
  3049   008E2A                     	if	1	;There is more than 1 active tblptr byte
  3050   008E2A  0E20               	movlw	high __smallconst
  3051   008E2C  6EF7               	movwf	tblptrh,c
  3052   008E2E                     	endif
  3053   008E2E                     	if	0	;tblptru may be non-zero
  3054   008E2E                     	endif
  3055   008E2E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3056   008E2E  0E00               	movlw	low (__smallconst shr (0+16))
  3057   008E30  6EF8               	movwf	tblptru,c
  3058   008E32                     	endif
  3059   008E32  0008               	tblrd		*
  3060   008E34  50F5               	movf	tablat,w,c
  3061   008E36  0A2A               	xorlw	42
  3062   008E38  A4D8               	btfss	status,2,c
  3063   008E3A  EF21  F047         	goto	u6771
  3064   008E3E  EF23  F047         	goto	u6770
  3065   008E42                     u6771:
  3066   008E42  EF4C  F047         	goto	l5309
  3067   008E46                     u6770:
  3068   008E46                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3071   008E46  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  3072   008E48  6ED9               	movwf	fsr2l,c
  3073   008E4A  6ADA               	clrf	fsr2h,c
  3074   008E4C  2ADF               	incf	indf2,f,c
  3075   008E4E                     
  3076                           ; BSR set to: 0
  3077                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3078   008E4E  5161               	movf	read_prec_or_width@ap& (0+255),w,b
  3079   008E50  6ED9               	movwf	fsr2l,c
  3080   008E52  6ADA               	clrf	fsr2h,c
  3081   008E54  0E02               	movlw	2
  3082   008E56  26DF               	addwf	indf2,f,c
  3083   008E58  5CDF               	subwf	indf2,w,c
  3084   008E5A  6ED9               	movwf	fsr2l,c
  3085   008E5C  6ADA               	clrf	fsr2h,c
  3086   008E5E  006F FF78  F065    	movff	postinc2,read_prec_or_width@n
  3087   008E64  006F FF78  F066    	movff	postinc2,read_prec_or_width@n+1
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3090   008E6A  EF62  F047         	goto	l964
  3091   008E6E                     l5305:
  3092                           
  3093                           ; BSR set to: 0
  3094                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3095   008E6E  0E0A               	movlw	10
  3096   008E70  0365               	mulwf	read_prec_or_width@n& (0+255),b
  3097   008E72  006F FFCC  F062    	movff	prodl,??_read_prec_or_width
  3098   008E78  006F FFD0  F063    	movff	prodh,??_read_prec_or_width+1
  3099   008E7E  0366               	mulwf	(read_prec_or_width@n+1)& (0+255),b
  3100   008E80  50F3               	movf	prodl,w,c
  3101   008E82  2763               	addwf	(??_read_prec_or_width+1)& (0+255),f,b
  3102   008E84  5164               	movf	read_prec_or_width@c& (0+255),w,b
  3103   008E86  2562               	addwf	??_read_prec_or_width& (0+255),w,b
  3104   008E88  6F65               	movwf	read_prec_or_width@n& (0+255),b
  3105   008E8A  0E00               	movlw	0
  3106   008E8C  2163               	addwfc	(??_read_prec_or_width+1)& (0+255),w,b
  3107   008E8E  6F66               	movwf	(read_prec_or_width@n+1)& (0+255),b
  3108   008E90                     
  3109                           ; BSR set to: 0
  3110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3111   008E90  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  3112   008E92  6ED9               	movwf	fsr2l,c
  3113   008E94  6ADA               	clrf	fsr2h,c
  3114   008E96  2ADF               	incf	indf2,f,c
  3115   008E98                     l5309:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3119   008E98  5160               	movf	read_prec_or_width@fmt& (0+255),w,b
  3120   008E9A  6ED9               	movwf	fsr2l,c
  3121   008E9C  6ADA               	clrf	fsr2h,c
  3122   008E9E  006F FF7F FFF6     	movff	indf2,tblptrl
  3123   008EA4                     	if	1	;There is more than 1 active tblptr byte
  3124   008EA4  0E20               	movlw	high __smallconst
  3125   008EA6  6EF7               	movwf	tblptrh,c
  3126   008EA8                     	endif
  3127   008EA8                     	if	0	;tblptru may be non-zero
  3128   008EA8                     	endif
  3129   008EA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3130   008EA8  0E00               	movlw	low (__smallconst shr (0+16))
  3131   008EAA  6EF8               	movwf	tblptru,c
  3132   008EAC                     	endif
  3133   008EAC  0008               	tblrd		*
  3134   008EAE  50F5               	movf	tablat,w,c
  3135   008EB0  0FD0               	addlw	208
  3136   008EB2  6F64               	movwf	read_prec_or_width@c& (0+255),b
  3137   008EB4  0E09               	movlw	9
  3138   008EB6  6564               	cpfsgt	read_prec_or_width@c& (0+255),b
  3139   008EB8  EF60  F047         	goto	u6781
  3140   008EBC  EF62  F047         	goto	u6780
  3141   008EC0                     u6781:
  3142   008EC0  EF37  F047         	goto	l5305
  3143   008EC4                     u6780:
  3144   008EC4                     l964:
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3148   008EC4  C065  F060         	movff	read_prec_or_width@n,?_read_prec_or_width
  3149   008EC8  C066  F061         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3150   008ECC                     
  3151                           ; BSR set to: 0
  3152   008ECC  0012               	return		;funcret
  3153   008ECE                     __end_of_read_prec_or_width:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _efgtoa *****************
  3157 ;; Defined at:
  3158 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
  3161 ;;		 -> sprintf@f(11), 
  3162 ;;  f               4   52[BANK0 ] PTR struct _IO_FILE
  3163 ;;  c               1   56[BANK0 ] unsigned char 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  u               4   99[BANK0 ] struct flui
  3166 ;;  g               4   93[BANK0 ] struct flui
  3167 ;;  l               4   88[BANK0 ] struct flui
  3168 ;;  h               4   84[BANK0 ] struct flui
  3169 ;;  ou              4   78[BANK0 ] struct flui
  3170 ;;  n               2   97[BANK0 ] int 
  3171 ;;  i               2   82[BANK0 ] int 
  3172 ;;  w               2   76[BANK0 ] int 
  3173 ;;  e               2   74[BANK0 ] int 
  3174 ;;  m               2   72[BANK0 ] int 
  3175 ;;  d               2   70[BANK0 ] int 
  3176 ;;  t               2   63[BANK0 ] int 
  3177 ;;  p               2   61[BANK0 ] int 
  3178 ;;  ne              2   59[BANK0 ] int 
  3179 ;;  sign            1   92[BANK0 ] unsigned char 
  3180 ;;  nmode           1   69[BANK0 ] unsigned char 
  3181 ;;  mode            1   68[BANK0 ] unsigned char 
  3182 ;;  pp              1   67[BANK0 ] unsigned char 
  3183 ;;  esign           1    0        unsigned char 
  3184 ;; Return value:  Size  Location     Type
  3185 ;;                  1    wreg      void 
  3186 ;; Registers used:
  3187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3188 ;; Tracked objects:
  3189 ;;		On entry : 0/0
  3190 ;;		On exit  : 0/0
  3191 ;;		Unchanged: 0/0
  3192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3193 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3194 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3195 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3196 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3197 ;;Total ram usage:       52 bytes
  3198 ;; Hardware stack levels used: 1
  3199 ;; Hardware stack levels required when called: 6
  3200 ;; This function calls:
  3201 ;;		___fladd
  3202 ;;		___fldiv
  3203 ;;		___fleq
  3204 ;;		___flge
  3205 ;;		___flmul
  3206 ;;		___flneg
  3207 ;;		___flsub
  3208 ;;		___fltol
  3209 ;;		___fpclassifyf
  3210 ;;		_floorf
  3211 ;;		_labs
  3212 ;;		_memcpy
  3213 ;;		_pad
  3214 ;;		_strcpy
  3215 ;; This function is called by:
  3216 ;;		_vfpfcnvrt
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text5
  3221   0060B2                     __ptext5:
  3222                           	callstack 0
  3223   0060B2                     _efgtoa:
  3224                           	callstack 21
  3225   0060B2                     
  3226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v3.00\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v3
      +                          .00\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3227   0060B2  0100               	movlb	0	; () banked
  3228   0060B4  6BBC               	clrf	efgtoa@sign& (0+255),b
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3231   0060B6  C094  F0BD         	movff	efgtoa@f,efgtoa@g
  3232   0060BA  C095  F0BE         	movff	efgtoa@f+1,efgtoa@g+1
  3233   0060BE  C096  F0BF         	movff	efgtoa@f+2,efgtoa@g+2
  3234   0060C2  C097  F0C0         	movff	efgtoa@f+3,efgtoa@g+3
  3235   0060C6                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3238   0060C6  BFC0               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3239   0060C8  EF6A  F030         	goto	u6450
  3240   0060CC  EF68  F030         	goto	u6451
  3241   0060D0                     u6451:
  3242   0060D0  EF7E  F030         	goto	l5085
  3243   0060D4                     u6450:
  3244   0060D4                     
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3247   0060D4  0E01               	movlw	1
  3248   0060D6  6FBC               	movwf	efgtoa@sign& (0+255),b
  3249   0060D8                     
  3250                           ; BSR set to: 0
  3251                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3252   0060D8  C0BD  F060         	movff	efgtoa@g,___flneg@f1
  3253   0060DC  C0BE  F061         	movff	efgtoa@g+1,___flneg@f1+1
  3254   0060E0  C0BF  F062         	movff	efgtoa@g+2,___flneg@f1+2
  3255   0060E4  C0C0  F063         	movff	efgtoa@g+3,___flneg@f1+3
  3256   0060E8  EC13  F04A         	call	___flneg	;wreg free
  3257   0060EC  C060  F0BD         	movff	?___flneg,efgtoa@g
  3258   0060F0  C061  F0BE         	movff	?___flneg+1,efgtoa@g+1
  3259   0060F4  C062  F0BF         	movff	?___flneg+2,efgtoa@g+2
  3260   0060F8  C063  F0C0         	movff	?___flneg+3,efgtoa@g+3
  3261   0060FC                     l5085:
  3262                           
  3263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3264   0060FC  0E00               	movlw	0
  3265   0060FE  0100               	movlb	0	; () banked
  3266   006100  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3267   006102  0E00               	movlw	0
  3268   006104  6FC1               	movwf	efgtoa@n& (0+255),b
  3269   006106                     
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3272   006106  C0EF  F0AC         	movff	_width,efgtoa@w
  3273   00610A  C0F0  F0AD         	movff	_width+1,efgtoa@w+1
  3274   00610E                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3277   00610E  51BC               	movf	efgtoa@sign& (0+255),w,b
  3278   006110  B4D8               	btfsc	status,2,c
  3279   006112  EF8D  F030         	goto	u6461
  3280   006116  EF8F  F030         	goto	u6460
  3281   00611A                     u6461:
  3282   00611A  EFA3  F030         	goto	l5099
  3283   00611E                     u6460:
  3284   00611E                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3287   00611E  51BC               	movf	efgtoa@sign& (0+255),w,b
  3288   006120  A4D8               	btfss	status,2,c
  3289   006122  EF95  F030         	goto	u6471
  3290   006126  EF97  F030         	goto	u6470
  3291   00612A                     u6471:
  3292   00612A  EF9D  F030         	goto	l5095
  3293   00612E                     u6470:
  3294   00612E                     
  3295                           ; BSR set to: 0
  3296   00612E  0E00               	movlw	0
  3297   006130  6FA2               	movwf	(_efgtoa$1301+1)& (0+255),b
  3298   006132  0E2B               	movlw	43
  3299   006134  6FA1               	movwf	_efgtoa$1301& (0+255),b
  3300   006136  EFA1  F030         	goto	l5097
  3301   00613A                     l5095:
  3302                           
  3303                           ; BSR set to: 0
  3304   00613A  0E00               	movlw	0
  3305   00613C  6FA2               	movwf	(_efgtoa$1301+1)& (0+255),b
  3306   00613E  0E2D               	movlw	45
  3307   006140  6FA1               	movwf	_efgtoa$1301& (0+255),b
  3308   006142                     l5097:
  3309                           
  3310                           ; BSR set to: 0
  3311   006142  C0A1  F0BC         	movff	_efgtoa$1301,efgtoa@sign
  3312   006146                     l5099:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3316   006146  C0BD  F060         	movff	efgtoa@g,___fpclassifyf@x
  3317   00614A  C0BE  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3318   00614E  C0BF  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3319   006152  C0C0  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3320   006156  EC47  F045         	call	___fpclassifyf	;wreg free
  3321   00615A  0100               	movlb	0	; () banked
  3322   00615C  0560               	decf	?___fpclassifyf& (0+255),w,b
  3323   00615E  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3324   006160  A4D8               	btfss	status,2,c
  3325   006162  EFB5  F030         	goto	u6481
  3326   006166  EFB7  F030         	goto	u6480
  3327   00616A                     u6481:
  3328   00616A  EFE5  F030         	goto	l5117
  3329   00616E                     u6480:
  3330   00616E                     
  3331                           ; BSR set to: 0
  3332                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3333   00616E  51BC               	movf	efgtoa@sign& (0+255),w,b
  3334   006170  B4D8               	btfsc	status,2,c
  3335   006172  EFBD  F030         	goto	u6491
  3336   006176  EFBF  F030         	goto	u6490
  3337   00617A                     u6491:
  3338   00617A  EFC8  F030         	goto	l5109
  3339   00617E                     u6490:
  3340   00617E                     
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3343   00617E  C0BC  F100         	movff	efgtoa@sign,_dbuf
  3344   006182                     
  3345                           ; BSR set to: 0
  3346                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  3347   006182  07AC               	decf	efgtoa@w& (0+255),f,b
  3348   006184  A0D8               	btfss	status,0,c
  3349   006186  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  3350   006188                     
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3353   006188  0E00               	movlw	0
  3354   00618A  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3355   00618C  0E01               	movlw	1
  3356   00618E  6FC1               	movwf	efgtoa@n& (0+255),b
  3357   006190                     l5109:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3361   006190  0E00               	movlw	low _dbuf
  3362   006192  25C1               	addwf	efgtoa@n& (0+255),w,b
  3363   006194  6F60               	movwf	strcpy@dest& (0+255),b
  3364   006196  0E01               	movlw	high _dbuf
  3365   006198  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3366   00619A  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3367   00619C  0E48               	movlw	low STR_8
  3368   00619E  6F62               	movwf	strcpy@src& (0+255),b
  3369   0061A0  EC6A  F049         	call	_strcpy	;wreg free
  3370   0061A4                     l5111:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3373   0061A4  0100               	movlb	0	; () banked
  3374   0061A6  0EFD               	movlw	253
  3375   0061A8  27AC               	addwf	efgtoa@w& (0+255),f,b
  3376   0061AA  0EFF               	movlw	255
  3377   0061AC  23AD               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3378   0061AE                     
  3379                           ; BSR set to: 0
  3380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3381   0061AE  C093  F06E         	movff	efgtoa@fp,pad@fp
  3382   0061B2  0E00               	movlw	low _dbuf
  3383   0061B4  6F6F               	movwf	pad@buf& (0+255),b
  3384   0061B6  0E01               	movlw	high _dbuf
  3385   0061B8  6F70               	movwf	(pad@buf+1)& (0+255),b
  3386   0061BA  C0AC  F071         	movff	efgtoa@w,pad@p
  3387   0061BE  C0AD  F072         	movff	efgtoa@w+1,pad@p+1
  3388   0061C2  EC15  F048         	call	_pad	;wreg free
  3389   0061C6  EF4F  F035         	goto	l919
  3390   0061CA                     l5117:
  3391                           
  3392                           ; BSR set to: 0
  3393                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3394   0061CA  C0BD  F060         	movff	efgtoa@g,___fpclassifyf@x
  3395   0061CE  C0BE  F061         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3396   0061D2  C0BF  F062         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3397   0061D6  C0C0  F063         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3398   0061DA  EC47  F045         	call	___fpclassifyf	;wreg free
  3399   0061DE  0100               	movlb	0	; () banked
  3400   0061E0  5160               	movf	?___fpclassifyf& (0+255),w,b
  3401   0061E2  1161               	iorwf	(?___fpclassifyf+1)& (0+255),w,b
  3402   0061E4  A4D8               	btfss	status,2,c
  3403   0061E6  EFF7  F030         	goto	u6501
  3404   0061EA  EFF9  F030         	goto	u6500
  3405   0061EE                     u6501:
  3406   0061EE  EF16  F031         	goto	l5135
  3407   0061F2                     u6500:
  3408   0061F2                     
  3409                           ; BSR set to: 0
  3410                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3411   0061F2  51BC               	movf	efgtoa@sign& (0+255),w,b
  3412   0061F4  B4D8               	btfsc	status,2,c
  3413   0061F6  EFFF  F030         	goto	u6511
  3414   0061FA  EF01  F031         	goto	u6510
  3415   0061FE                     u6511:
  3416   0061FE  EF0A  F031         	goto	l5127
  3417   006202                     u6510:
  3418   006202                     
  3419                           ; BSR set to: 0
  3420                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3421   006202  C0BC  F100         	movff	efgtoa@sign,_dbuf
  3422   006206                     
  3423                           ; BSR set to: 0
  3424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  3425   006206  07AC               	decf	efgtoa@w& (0+255),f,b
  3426   006208  A0D8               	btfss	status,0,c
  3427   00620A  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  3428   00620C                     
  3429                           ; BSR set to: 0
  3430                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3431   00620C  0E00               	movlw	0
  3432   00620E  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  3433   006210  0E01               	movlw	1
  3434   006212  6FC1               	movwf	efgtoa@n& (0+255),b
  3435   006214                     l5127:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3439   006214  0E00               	movlw	low _dbuf
  3440   006216  25C1               	addwf	efgtoa@n& (0+255),w,b
  3441   006218  6F60               	movwf	strcpy@dest& (0+255),b
  3442   00621A  0E01               	movlw	high _dbuf
  3443   00621C  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3444   00621E  6F61               	movwf	(strcpy@dest+1)& (0+255),b
  3445   006220  0E4C               	movlw	low STR_11
  3446   006222  6F62               	movwf	strcpy@src& (0+255),b
  3447   006224  EC6A  F049         	call	_strcpy	;wreg free
  3448   006228  EFD2  F030         	goto	l5111
  3449   00622C                     l5135:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3453   00622C  0E00               	movlw	0
  3454   00622E  6FC3               	movwf	efgtoa@u& (0+255),b
  3455   006230  0E00               	movlw	0
  3456   006232  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  3457   006234  0E80               	movlw	128
  3458   006236  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  3459   006238  0E3F               	movlw	63
  3460   00623A  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3463   00623C  0E00               	movlw	0
  3464   00623E  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3465   006240  0E00               	movlw	0
  3466   006242  6FAA               	movwf	efgtoa@e& (0+255),b
  3467   006244                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3470   006244  C0BD  F060         	movff	efgtoa@g,___fleq@ff1
  3471   006248  C0BE  F061         	movff	efgtoa@g+1,___fleq@ff1+1
  3472   00624C  C0BF  F062         	movff	efgtoa@g+2,___fleq@ff1+2
  3473   006250  C0C0  F063         	movff	efgtoa@g+3,___fleq@ff1+3
  3474   006254  0E00               	movlw	0
  3475   006256  6F64               	movwf	___fleq@ff2& (0+255),b
  3476   006258  0E00               	movlw	0
  3477   00625A  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  3478   00625C  0E00               	movlw	0
  3479   00625E  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  3480   006260  0E00               	movlw	0
  3481   006262  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  3482   006264  ECBF  F047         	call	___fleq	;wreg free
  3483   006268  0100               	movlb	0	; () banked
  3484   00626A  B0D8               	btfsc	status,0,c
  3485   00626C  EF3A  F031         	goto	u6521
  3486   006270  EF3C  F031         	goto	u6520
  3487   006274                     u6521:
  3488   006274  EF1E  F032         	goto	l922
  3489   006278                     u6520:
  3490   006278  EF48  F031         	goto	l5143
  3491   00627C                     l924:
  3492                           
  3493                           ; BSR set to: 0
  3494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3495   00627C  C0AE  F0C3         	movff	efgtoa@ou,efgtoa@u
  3496   006280  C0AF  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  3497   006284  C0B0  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  3498   006288  C0B1  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  3499   00628C                     
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3502   00628C  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  3503   00628E  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  3504   006290                     l5143:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3508   006290  C0C3  F06E         	movff	efgtoa@u,___flmul@b
  3509   006294  C0C4  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3510   006298  C0C5  F070         	movff	efgtoa@u+2,___flmul@b+2
  3511   00629C  C0C6  F071         	movff	efgtoa@u+3,___flmul@b+3
  3512   0062A0  0E00               	movlw	0
  3513   0062A2  6F72               	movwf	___flmul@a& (0+255),b
  3514   0062A4  0E00               	movlw	0
  3515   0062A6  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3516   0062A8  0E20               	movlw	32
  3517   0062AA  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3518   0062AC  0E41               	movlw	65
  3519   0062AE  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3520   0062B0  ECAC  F037         	call	___flmul	;wreg free
  3521   0062B4  C06E  F0AE         	movff	?___flmul,efgtoa@ou
  3522   0062B8  C06F  F0AF         	movff	?___flmul+1,efgtoa@ou+1
  3523   0062BC  C070  F0B0         	movff	?___flmul+2,efgtoa@ou+2
  3524   0062C0  C071  F0B1         	movff	?___flmul+3,efgtoa@ou+3
  3525   0062C4  0100               	movlb	0	; () banked
  3526   0062C6  51AE               	movf	efgtoa@ou& (0+255),w,b
  3527   0062C8  5DBD               	subwf	efgtoa@g& (0+255),w,b
  3528   0062CA  6F60               	movwf	labs@a& (0+255),b
  3529   0062CC  51AF               	movf	(efgtoa@ou+1)& (0+255),w,b
  3530   0062CE  59BE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3531   0062D0  6F61               	movwf	(labs@a+1)& (0+255),b
  3532   0062D2  51B0               	movf	(efgtoa@ou+2)& (0+255),w,b
  3533   0062D4  59BF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3534   0062D6  6F62               	movwf	(labs@a+2)& (0+255),b
  3535   0062D8  51B1               	movf	(efgtoa@ou+3)& (0+255),w,b
  3536   0062DA  59C0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3537   0062DC  6F63               	movwf	(labs@a+3)& (0+255),b
  3538   0062DE  ECC9  F048         	call	_labs	;wreg free
  3539   0062E2  0100               	movlb	0	; () banked
  3540   0062E4  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3541   0062E6  EF80  F031         	goto	u6531
  3542   0062EA  5163               	movf	(?_labs+3)& (0+255),w,b
  3543   0062EC  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3544   0062EE  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3545   0062F0  E109               	bnz	u6530
  3546   0062F2  0E02               	movlw	2
  3547   0062F4  5D60               	subwf	?_labs& (0+255),w,b
  3548   0062F6  A0D8               	btfss	status,0,c
  3549   0062F8  EF80  F031         	goto	u6531
  3550   0062FC  EF82  F031         	goto	u6530
  3551   006300                     u6531:
  3552   006300  EF3E  F031         	goto	l924
  3553   006304                     u6530:
  3554   006304                     
  3555                           ; BSR set to: 0
  3556   006304  C0AE  F087         	movff	efgtoa@ou,___flge@ff1
  3557   006308  C0AF  F088         	movff	efgtoa@ou+1,___flge@ff1+1
  3558   00630C  C0B0  F089         	movff	efgtoa@ou+2,___flge@ff1+2
  3559   006310  C0B1  F08A         	movff	efgtoa@ou+3,___flge@ff1+3
  3560   006314  C0BD  F08B         	movff	efgtoa@g,___flge@ff2
  3561   006318  C0BE  F08C         	movff	efgtoa@g+1,___flge@ff2+1
  3562   00631C  C0BF  F08D         	movff	efgtoa@g+2,___flge@ff2+2
  3563   006320  C0C0  F08E         	movff	efgtoa@g+3,___flge@ff2+3
  3564   006324  ECC4  F044         	call	___flge	;wreg free
  3565   006328  0100               	movlb	0	; () banked
  3566   00632A  A0D8               	btfss	status,0,c
  3567   00632C  EF9A  F031         	goto	u6541
  3568   006330  EF9C  F031         	goto	u6540
  3569   006334                     u6541:
  3570   006334  EF3E  F031         	goto	l924
  3571   006338                     u6540:
  3572   006338                     
  3573                           ; BSR set to: 0
  3574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3575   006338  51C3               	movf	efgtoa@u& (0+255),w,b
  3576   00633A  5DBD               	subwf	efgtoa@g& (0+255),w,b
  3577   00633C  6F60               	movwf	labs@a& (0+255),b
  3578   00633E  51C4               	movf	(efgtoa@u+1)& (0+255),w,b
  3579   006340  59BE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3580   006342  6F61               	movwf	(labs@a+1)& (0+255),b
  3581   006344  51C5               	movf	(efgtoa@u+2)& (0+255),w,b
  3582   006346  59BF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3583   006348  6F62               	movwf	(labs@a+2)& (0+255),b
  3584   00634A  51C6               	movf	(efgtoa@u+3)& (0+255),w,b
  3585   00634C  59C0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3586   00634E  6F63               	movwf	(labs@a+3)& (0+255),b
  3587   006350  ECC9  F048         	call	_labs	;wreg free
  3588   006354  0100               	movlb	0	; () banked
  3589   006356  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3590   006358  EFBB  F031         	goto	u6550
  3591   00635C  5163               	movf	(?_labs+3)& (0+255),w,b
  3592   00635E  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3593   006360  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3594   006362  E107               	bnz	u6551
  3595   006364  0E02               	movlw	2
  3596   006366  5D60               	subwf	?_labs& (0+255),w,b
  3597   006368  B0D8               	btfsc	status,0,c
  3598   00636A  EFB9  F031         	goto	u6551
  3599   00636E  EFBB  F031         	goto	u6550
  3600   006372                     u6551:
  3601   006372  EF04  F032         	goto	l5161
  3602   006376                     u6550:
  3603   006376                     l5151:
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3607   006376  C0C3  F0BD         	movff	efgtoa@u,efgtoa@g
  3608   00637A  C0C4  F0BE         	movff	efgtoa@u+1,efgtoa@g+1
  3609   00637E  C0C5  F0BF         	movff	efgtoa@u+2,efgtoa@g+2
  3610   006382  C0C6  F0C0         	movff	efgtoa@u+3,efgtoa@g+3
  3611                           
  3612                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  3613   006386  EF1E  F032         	goto	l922
  3614   00638A                     l5153:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3618   00638A  C0C3  F060         	movff	efgtoa@u,___fldiv@b
  3619   00638E  C0C4  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3620   006392  C0C5  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3621   006396  C0C6  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3622   00639A  0E00               	movlw	0
  3623   00639C  6F64               	movwf	___fldiv@a& (0+255),b
  3624   00639E  0E00               	movlw	0
  3625   0063A0  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3626   0063A2  0E20               	movlw	32
  3627   0063A4  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3628   0063A6  0E41               	movlw	65
  3629   0063A8  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3630   0063AA  ECF7  F03B         	call	___fldiv	;wreg free
  3631   0063AE  C060  F0C3         	movff	?___fldiv,efgtoa@u
  3632   0063B2  C061  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3633   0063B6  C062  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3634   0063BA  C063  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3635   0063BE                     
  3636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  3637   0063BE  0100               	movlb	0	; () banked
  3638   0063C0  07AA               	decf	efgtoa@e& (0+255),f,b
  3639   0063C2  A0D8               	btfss	status,0,c
  3640   0063C4  07AB               	decf	(efgtoa@e+1)& (0+255),f,b
  3641   0063C6                     
  3642                           ; BSR set to: 0
  3643                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3644   0063C6  51C3               	movf	efgtoa@u& (0+255),w,b
  3645   0063C8  5DBD               	subwf	efgtoa@g& (0+255),w,b
  3646   0063CA  6F60               	movwf	labs@a& (0+255),b
  3647   0063CC  51C4               	movf	(efgtoa@u+1)& (0+255),w,b
  3648   0063CE  59BE               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3649   0063D0  6F61               	movwf	(labs@a+1)& (0+255),b
  3650   0063D2  51C5               	movf	(efgtoa@u+2)& (0+255),w,b
  3651   0063D4  59BF               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3652   0063D6  6F62               	movwf	(labs@a+2)& (0+255),b
  3653   0063D8  51C6               	movf	(efgtoa@u+3)& (0+255),w,b
  3654   0063DA  59C0               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3655   0063DC  6F63               	movwf	(labs@a+3)& (0+255),b
  3656   0063DE  ECC9  F048         	call	_labs	;wreg free
  3657   0063E2  0100               	movlb	0	; () banked
  3658   0063E4  BF63               	btfsc	(?_labs+3)& (0+255),7,b
  3659   0063E6  EF02  F032         	goto	u6560
  3660   0063EA  5163               	movf	(?_labs+3)& (0+255),w,b
  3661   0063EC  1162               	iorwf	(?_labs+2)& (0+255),w,b
  3662   0063EE  1161               	iorwf	(?_labs+1)& (0+255),w,b
  3663   0063F0  E107               	bnz	u6561
  3664   0063F2  0E02               	movlw	2
  3665   0063F4  5D60               	subwf	?_labs& (0+255),w,b
  3666   0063F6  B0D8               	btfsc	status,0,c
  3667   0063F8  EF00  F032         	goto	u6561
  3668   0063FC  EF02  F032         	goto	u6560
  3669   006400                     u6561:
  3670   006400  EF04  F032         	goto	l5161
  3671   006404                     u6560:
  3672   006404  EFBB  F031         	goto	l5151
  3673   006408                     l5161:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3677   006408  C0BD  F087         	movff	efgtoa@g,___flge@ff1
  3678   00640C  C0BE  F088         	movff	efgtoa@g+1,___flge@ff1+1
  3679   006410  C0BF  F089         	movff	efgtoa@g+2,___flge@ff1+2
  3680   006414  C0C0  F08A         	movff	efgtoa@g+3,___flge@ff1+3
  3681   006418  C0C3  F08B         	movff	efgtoa@u,___flge@ff2
  3682   00641C  C0C4  F08C         	movff	efgtoa@u+1,___flge@ff2+1
  3683   006420  C0C5  F08D         	movff	efgtoa@u+2,___flge@ff2+2
  3684   006424  C0C6  F08E         	movff	efgtoa@u+3,___flge@ff2+3
  3685   006428  ECC4  F044         	call	___flge	;wreg free
  3686   00642C  0100               	movlb	0	; () banked
  3687   00642E  A0D8               	btfss	status,0,c
  3688   006430  EF1C  F032         	goto	u6571
  3689   006434  EF1E  F032         	goto	u6570
  3690   006438                     u6571:
  3691   006438  EFC5  F031         	goto	l5153
  3692   00643C                     u6570:
  3693   00643C                     l922:
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3697   00643C  C098  F0A4         	movff	efgtoa@c,efgtoa@mode
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3700   006440  C0A4  F0A5         	movff	efgtoa@mode,efgtoa@nmode
  3701   006444                     
  3702                           ; BSR set to: 0
  3703                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3704   006444  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  3705   006446  EF27  F032         	goto	u6581
  3706   00644A  EF29  F032         	goto	u6580
  3707   00644E                     u6581:
  3708   00644E  EF2F  F032         	goto	l5167
  3709   006452                     u6580:
  3710   006452                     
  3711                           ; BSR set to: 0
  3712   006452  C0F1  F09D         	movff	_prec,efgtoa@p
  3713   006456  C0F2  F09E         	movff	_prec+1,efgtoa@p+1
  3714   00645A  EF33  F032         	goto	l5169
  3715   00645E                     l5167:
  3716                           
  3717                           ; BSR set to: 0
  3718   00645E  0E00               	movlw	0
  3719   006460  6F9E               	movwf	(efgtoa@p+1)& (0+255),b
  3720   006462  0E06               	movlw	6
  3721   006464  6F9D               	movwf	efgtoa@p& (0+255),b
  3722   006466                     l5169:
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3726   006466  C09D  F0A8         	movff	efgtoa@p,efgtoa@m
  3727   00646A  C09E  F0A9         	movff	efgtoa@p+1,efgtoa@m+1
  3728   00646E                     
  3729                           ; BSR set to: 0
  3730                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3731   00646E  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  3732   006470  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  3733   006472                     
  3734                           ; BSR set to: 0
  3735                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3736   006472  0E66               	movlw	102
  3737   006474  19A5               	xorwf	efgtoa@nmode& (0+255),w,b
  3738   006476  A4D8               	btfss	status,2,c
  3739   006478  EF40  F032         	goto	u6591
  3740   00647C  EF42  F032         	goto	u6590
  3741   006480                     u6591:
  3742   006480  EF62  F032         	goto	l5183
  3743   006484                     u6590:
  3744   006484                     
  3745                           ; BSR set to: 0
  3746                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3747   006484  BFAB               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3748   006486  EF49  F032         	goto	u6600
  3749   00648A  EF47  F032         	goto	u6601
  3750   00648E                     u6601:
  3751   00648E  EF55  F032         	goto	l5179
  3752   006492                     u6600:
  3753   006492                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3756   006492  0E00               	movlw	0
  3757   006494  6FC3               	movwf	efgtoa@u& (0+255),b
  3758   006496  0E00               	movlw	0
  3759   006498  6FC4               	movwf	(efgtoa@u+1)& (0+255),b
  3760   00649A  0E80               	movlw	128
  3761   00649C  6FC5               	movwf	(efgtoa@u+2)& (0+255),b
  3762   00649E  0E3F               	movlw	63
  3763   0064A0  6FC6               	movwf	(efgtoa@u+3)& (0+255),b
  3764                           
  3765                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3766   0064A2  0E00               	movlw	0
  3767   0064A4  6FAB               	movwf	(efgtoa@e+1)& (0+255),b
  3768   0064A6  0E00               	movlw	0
  3769   0064A8  6FAA               	movwf	efgtoa@e& (0+255),b
  3770   0064AA                     l5179:
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3774   0064AA  0E67               	movlw	103
  3775   0064AC  19A4               	xorwf	efgtoa@mode& (0+255),w,b
  3776   0064AE  B4D8               	btfsc	status,2,c
  3777   0064B0  EF5C  F032         	goto	u6611
  3778   0064B4  EF5E  F032         	goto	u6610
  3779   0064B8                     u6611:
  3780   0064B8  EF62  F032         	goto	l5183
  3781   0064BC                     u6610:
  3782   0064BC                     
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3785   0064BC  51AA               	movf	efgtoa@e& (0+255),w,b
  3786   0064BE  27A8               	addwf	efgtoa@m& (0+255),f,b
  3787   0064C0  51AB               	movf	(efgtoa@e+1)& (0+255),w,b
  3788   0064C2  23A9               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3789   0064C4                     l5183:
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3793   0064C4  0E00               	movlw	0
  3794   0064C6  6FB3               	movwf	(efgtoa@i+1)& (0+255),b
  3795   0064C8  0E00               	movlw	0
  3796   0064CA  6FB2               	movwf	efgtoa@i& (0+255),b
  3797   0064CC                     
  3798                           ; BSR set to: 0
  3799                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3800   0064CC  C0BD  F0B4         	movff	efgtoa@g,efgtoa@h
  3801   0064D0  C0BE  F0B5         	movff	efgtoa@g+1,efgtoa@h+1
  3802   0064D4  C0BF  F0B6         	movff	efgtoa@g+2,efgtoa@h+2
  3803   0064D8  C0C0  F0B7         	movff	efgtoa@g+3,efgtoa@h+3
  3804   0064DC                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3807   0064DC  C0C3  F0AE         	movff	efgtoa@u,efgtoa@ou
  3808   0064E0  C0C4  F0AF         	movff	efgtoa@u+1,efgtoa@ou+1
  3809   0064E4  C0C5  F0B0         	movff	efgtoa@u+2,efgtoa@ou+2
  3810   0064E8  C0C6  F0B1         	movff	efgtoa@u+3,efgtoa@ou+3
  3811                           
  3812                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3813   0064EC  EFF4  F032         	goto	l5197
  3814   0064F0                     l5189:
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3818   0064F0  C0B4  F060         	movff	efgtoa@h,___fldiv@b
  3819   0064F4  C0B5  F061         	movff	efgtoa@h+1,___fldiv@b+1
  3820   0064F8  C0B6  F062         	movff	efgtoa@h+2,___fldiv@b+2
  3821   0064FC  C0B7  F063         	movff	efgtoa@h+3,___fldiv@b+3
  3822   006500  C0C3  F064         	movff	efgtoa@u,___fldiv@a
  3823   006504  C0C4  F065         	movff	efgtoa@u+1,___fldiv@a+1
  3824   006508  C0C5  F066         	movff	efgtoa@u+2,___fldiv@a+2
  3825   00650C  C0C6  F067         	movff	efgtoa@u+3,___fldiv@a+3
  3826   006510  ECF7  F03B         	call	___fldiv	;wreg free
  3827   006514  C060  F079         	movff	?___fldiv,floorf@x
  3828   006518  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  3829   00651C  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  3830   006520  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  3831   006524  ECC0  F040         	call	_floorf	;wreg free
  3832   006528  C079  F0B8         	movff	?_floorf,efgtoa@l
  3833   00652C  C07A  F0B9         	movff	?_floorf+1,efgtoa@l+1
  3834   006530  C07B  F0BA         	movff	?_floorf+2,efgtoa@l+2
  3835   006534  C07C  F0BB         	movff	?_floorf+3,efgtoa@l+3
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3838   006538  C0B8  F060         	movff	efgtoa@l,___fltol@f1
  3839   00653C  C0B9  F061         	movff	efgtoa@l+1,___fltol@f1+1
  3840   006540  C0BA  F062         	movff	efgtoa@l+2,___fltol@f1+2
  3841   006544  C0BB  F063         	movff	efgtoa@l+3,___fltol@f1+3
  3842   006548  EC40  F044         	call	___fltol	;wreg free
  3843   00654C  C060  F0A6         	movff	?___fltol,efgtoa@d
  3844   006550  C061  F0A7         	movff	?___fltol+1,efgtoa@d+1
  3845   006554                     
  3846                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3847   006554  C0B4  F087         	movff	efgtoa@h,___flsub@b
  3848   006558  C0B5  F088         	movff	efgtoa@h+1,___flsub@b+1
  3849   00655C  C0B6  F089         	movff	efgtoa@h+2,___flsub@b+2
  3850   006560  C0B7  F08A         	movff	efgtoa@h+3,___flsub@b+3
  3851   006564  C0B8  F072         	movff	efgtoa@l,___flmul@a
  3852   006568  C0B9  F073         	movff	efgtoa@l+1,___flmul@a+1
  3853   00656C  C0BA  F074         	movff	efgtoa@l+2,___flmul@a+2
  3854   006570  C0BB  F075         	movff	efgtoa@l+3,___flmul@a+3
  3855   006574  C0C3  F06E         	movff	efgtoa@u,___flmul@b
  3856   006578  C0C4  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3857   00657C  C0C5  F070         	movff	efgtoa@u+2,___flmul@b+2
  3858   006580  C0C6  F071         	movff	efgtoa@u+3,___flmul@b+3
  3859   006584  ECAC  F037         	call	___flmul	;wreg free
  3860   006588  C06E  F08B         	movff	?___flmul,___flsub@a
  3861   00658C  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  3862   006590  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  3863   006594  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  3864   006598  EC8E  F049         	call	___flsub	;wreg free
  3865   00659C  C087  F0B4         	movff	?___flsub,efgtoa@h
  3866   0065A0  C088  F0B5         	movff	?___flsub+1,efgtoa@h+1
  3867   0065A4  C089  F0B6         	movff	?___flsub+2,efgtoa@h+2
  3868   0065A8  C08A  F0B7         	movff	?___flsub+3,efgtoa@h+3
  3869   0065AC                     
  3870                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3871   0065AC  C0C3  F060         	movff	efgtoa@u,___fldiv@b
  3872   0065B0  C0C4  F061         	movff	efgtoa@u+1,___fldiv@b+1
  3873   0065B4  C0C5  F062         	movff	efgtoa@u+2,___fldiv@b+2
  3874   0065B8  C0C6  F063         	movff	efgtoa@u+3,___fldiv@b+3
  3875   0065BC  0E00               	movlw	0
  3876   0065BE  0100               	movlb	0	; () banked
  3877   0065C0  6F64               	movwf	___fldiv@a& (0+255),b
  3878   0065C2  0E00               	movlw	0
  3879   0065C4  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  3880   0065C6  0E20               	movlw	32
  3881   0065C8  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  3882   0065CA  0E41               	movlw	65
  3883   0065CC  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  3884   0065CE  ECF7  F03B         	call	___fldiv	;wreg free
  3885   0065D2  C060  F0C3         	movff	?___fldiv,efgtoa@u
  3886   0065D6  C061  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  3887   0065DA  C062  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  3888   0065DE  C063  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  3889   0065E2                     
  3890                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3891   0065E2  0100               	movlb	0	; () banked
  3892   0065E4  4BB2               	infsnz	efgtoa@i& (0+255),f,b
  3893   0065E6  2BB3               	incf	(efgtoa@i+1)& (0+255),f,b
  3894   0065E8                     l5197:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3898   0065E8  51A8               	movf	efgtoa@m& (0+255),w,b
  3899   0065EA  5DB2               	subwf	efgtoa@i& (0+255),w,b
  3900   0065EC  51B3               	movf	(efgtoa@i+1)& (0+255),w,b
  3901   0065EE  0A80               	xorlw	128
  3902   0065F0  6F99               	movwf	??_efgtoa& (0+255),b
  3903   0065F2  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  3904   0065F4  0A80               	xorlw	128
  3905   0065F6  5999               	subwfb	??_efgtoa& (0+255),w,b
  3906   0065F8  A0D8               	btfss	status,0,c
  3907   0065FA  EF01  F033         	goto	u6621
  3908   0065FE  EF03  F033         	goto	u6620
  3909   006602                     u6621:
  3910   006602  EF78  F032         	goto	l5189
  3911   006606                     u6620:
  3912   006606                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3915   006606  C0C3  F06E         	movff	efgtoa@u,___flmul@b
  3916   00660A  C0C4  F06F         	movff	efgtoa@u+1,___flmul@b+1
  3917   00660E  C0C5  F070         	movff	efgtoa@u+2,___flmul@b+2
  3918   006612  C0C6  F071         	movff	efgtoa@u+3,___flmul@b+3
  3919   006616  0E00               	movlw	0
  3920   006618  6F72               	movwf	___flmul@a& (0+255),b
  3921   00661A  0E00               	movlw	0
  3922   00661C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  3923   00661E  0EA0               	movlw	160
  3924   006620  6F74               	movwf	(___flmul@a+2)& (0+255),b
  3925   006622  0E40               	movlw	64
  3926   006624  6F75               	movwf	(___flmul@a+3)& (0+255),b
  3927   006626  ECAC  F037         	call	___flmul	;wreg free
  3928   00662A  C06E  F0B8         	movff	?___flmul,efgtoa@l
  3929   00662E  C06F  F0B9         	movff	?___flmul+1,efgtoa@l+1
  3930   006632  C070  F0BA         	movff	?___flmul+2,efgtoa@l+2
  3931   006636  C071  F0BB         	movff	?___flmul+3,efgtoa@l+3
  3932   00663A                     
  3933                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3934   00663A  C0B4  F087         	movff	efgtoa@h,___flge@ff1
  3935   00663E  C0B5  F088         	movff	efgtoa@h+1,___flge@ff1+1
  3936   006642  C0B6  F089         	movff	efgtoa@h+2,___flge@ff1+2
  3937   006646  C0B7  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  3938   00664A  C0B8  F08B         	movff	efgtoa@l,___flge@ff2
  3939   00664E  C0B9  F08C         	movff	efgtoa@l+1,___flge@ff2+1
  3940   006652  C0BA  F08D         	movff	efgtoa@l+2,___flge@ff2+2
  3941   006656  C0BB  F08E         	movff	efgtoa@l+3,___flge@ff2+3
  3942   00665A  ECC4  F044         	call	___flge	;wreg free
  3943   00665E  0100               	movlb	0	; () banked
  3944   006660  B0D8               	btfsc	status,0,c
  3945   006662  EF35  F033         	goto	u6631
  3946   006666  EF37  F033         	goto	u6630
  3947   00666A                     u6631:
  3948   00666A  EF41  F033         	goto	l5205
  3949   00666E                     u6630:
  3950   00666E                     
  3951                           ; BSR set to: 0
  3952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3953   00666E  0E00               	movlw	0
  3954   006670  6FB8               	movwf	efgtoa@l& (0+255),b
  3955   006672  0E00               	movlw	0
  3956   006674  6FB9               	movwf	(efgtoa@l+1)& (0+255),b
  3957   006676  0E00               	movlw	0
  3958   006678  6FBA               	movwf	(efgtoa@l+2)& (0+255),b
  3959   00667A  0E00               	movlw	0
  3960   00667C  6FBB               	movwf	(efgtoa@l+3)& (0+255),b
  3961                           
  3962                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
  3963   00667E  EF6A  F033         	goto	l5211
  3964   006682                     l5205:
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3968   006682  C0B4  F060         	movff	efgtoa@h,___fleq@ff1
  3969   006686  C0B5  F061         	movff	efgtoa@h+1,___fleq@ff1+1
  3970   00668A  C0B6  F062         	movff	efgtoa@h+2,___fleq@ff1+2
  3971   00668E  C0B7  F063         	movff	efgtoa@h+3,___fleq@ff1+3
  3972   006692  C0B8  F064         	movff	efgtoa@l,___fleq@ff2
  3973   006696  C0B9  F065         	movff	efgtoa@l+1,___fleq@ff2+1
  3974   00669A  C0BA  F066         	movff	efgtoa@l+2,___fleq@ff2+2
  3975   00669E  C0BB  F067         	movff	efgtoa@l+3,___fleq@ff2+3
  3976   0066A2  ECBF  F047         	call	___fleq	;wreg free
  3977   0066A6  0100               	movlb	0	; () banked
  3978   0066A8  A0D8               	btfss	status,0,c
  3979   0066AA  EF59  F033         	goto	u6641
  3980   0066AE  EF5B  F033         	goto	u6640
  3981   0066B2                     u6641:
  3982   0066B2  EF6A  F033         	goto	l5211
  3983   0066B6                     u6640:
  3984   0066B6                     
  3985                           ; BSR set to: 0
  3986   0066B6  B1A6               	btfsc	efgtoa@d& (0+255),0,b
  3987   0066B8  EF60  F033         	goto	u6651
  3988   0066BC  EF62  F033         	goto	u6650
  3989   0066C0                     u6651:
  3990   0066C0  EF6A  F033         	goto	l5211
  3991   0066C4                     u6650:
  3992   0066C4                     
  3993                           ; BSR set to: 0
  3994                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3995   0066C4  0E00               	movlw	0
  3996   0066C6  6FB8               	movwf	efgtoa@l& (0+255),b
  3997   0066C8  0E00               	movlw	0
  3998   0066CA  6FB9               	movwf	(efgtoa@l+1)& (0+255),b
  3999   0066CC  0E00               	movlw	0
  4000   0066CE  6FBA               	movwf	(efgtoa@l+2)& (0+255),b
  4001   0066D0  0E00               	movlw	0
  4002   0066D2  6FBB               	movwf	(efgtoa@l+3)& (0+255),b
  4003   0066D4                     l5211:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4007   0066D4  C0BD  F060         	movff	efgtoa@g,___fladd@b
  4008   0066D8  C0BE  F061         	movff	efgtoa@g+1,___fladd@b+1
  4009   0066DC  C0BF  F062         	movff	efgtoa@g+2,___fladd@b+2
  4010   0066E0  C0C0  F063         	movff	efgtoa@g+3,___fladd@b+3
  4011   0066E4  C0B8  F064         	movff	efgtoa@l,___fladd@a
  4012   0066E8  C0B9  F065         	movff	efgtoa@l+1,___fladd@a+1
  4013   0066EC  C0BA  F066         	movff	efgtoa@l+2,___fladd@a+2
  4014   0066F0  C0BB  F067         	movff	efgtoa@l+3,___fladd@a+3
  4015   0066F4  EC50  F035         	call	___fladd	;wreg free
  4016   0066F8  C060  F0B4         	movff	?___fladd,efgtoa@h
  4017   0066FC  C061  F0B5         	movff	?___fladd+1,efgtoa@h+1
  4018   006700  C062  F0B6         	movff	?___fladd+2,efgtoa@h+2
  4019   006704  C063  F0B7         	movff	?___fladd+3,efgtoa@h+3
  4020   006708                     
  4021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4022   006708  C0B4  F087         	movff	efgtoa@h,___flge@ff1
  4023   00670C  C0B5  F088         	movff	efgtoa@h+1,___flge@ff1+1
  4024   006710  C0B6  F089         	movff	efgtoa@h+2,___flge@ff1+2
  4025   006714  C0B7  F08A         	movff	efgtoa@h+3,___flge@ff1+3
  4026   006718  0E00               	movlw	0
  4027   00671A  0100               	movlb	0	; () banked
  4028   00671C  6F72               	movwf	___flmul@a& (0+255),b
  4029   00671E  0E00               	movlw	0
  4030   006720  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4031   006722  0E20               	movlw	32
  4032   006724  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4033   006726  0E41               	movlw	65
  4034   006728  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4035   00672A  C0AE  F06E         	movff	efgtoa@ou,___flmul@b
  4036   00672E  C0AF  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  4037   006732  C0B0  F070         	movff	efgtoa@ou+2,___flmul@b+2
  4038   006736  C0B1  F071         	movff	efgtoa@ou+3,___flmul@b+3
  4039   00673A  ECAC  F037         	call	___flmul	;wreg free
  4040   00673E  C06E  F08B         	movff	?___flmul,___flge@ff2
  4041   006742  C06F  F08C         	movff	?___flmul+1,___flge@ff2+1
  4042   006746  C070  F08D         	movff	?___flmul+2,___flge@ff2+2
  4043   00674A  C071  F08E         	movff	?___flmul+3,___flge@ff2+3
  4044   00674E  ECC4  F044         	call	___flge	;wreg free
  4045   006752  0100               	movlb	0	; () banked
  4046   006754  A0D8               	btfss	status,0,c
  4047   006756  EFAF  F033         	goto	u6661
  4048   00675A  EFB1  F033         	goto	u6660
  4049   00675E                     u6661:
  4050   00675E  EFD9  F033         	goto	l5223
  4051   006762                     u6660:
  4052   006762                     
  4053                           ; BSR set to: 0
  4054                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
  4055   006762  4BAA               	infsnz	efgtoa@e& (0+255),f,b
  4056   006764  2BAB               	incf	(efgtoa@e+1)& (0+255),f,b
  4057   006766                     
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4060   006766  C0AE  F06E         	movff	efgtoa@ou,___flmul@b
  4061   00676A  C0AF  F06F         	movff	efgtoa@ou+1,___flmul@b+1
  4062   00676E  C0B0  F070         	movff	efgtoa@ou+2,___flmul@b+2
  4063   006772  C0B1  F071         	movff	efgtoa@ou+3,___flmul@b+3
  4064   006776  0E00               	movlw	0
  4065   006778  6F72               	movwf	___flmul@a& (0+255),b
  4066   00677A  0E00               	movlw	0
  4067   00677C  6F73               	movwf	(___flmul@a+1)& (0+255),b
  4068   00677E  0E20               	movlw	32
  4069   006780  6F74               	movwf	(___flmul@a+2)& (0+255),b
  4070   006782  0E41               	movlw	65
  4071   006784  6F75               	movwf	(___flmul@a+3)& (0+255),b
  4072   006786  ECAC  F037         	call	___flmul	;wreg free
  4073   00678A  C06E  F0AE         	movff	?___flmul,efgtoa@ou
  4074   00678E  C06F  F0AF         	movff	?___flmul+1,efgtoa@ou+1
  4075   006792  C070  F0B0         	movff	?___flmul+2,efgtoa@ou+2
  4076   006796  C071  F0B1         	movff	?___flmul+3,efgtoa@ou+3
  4077   00679A                     
  4078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4079   00679A  0E66               	movlw	102
  4080   00679C  0100               	movlb	0	; () banked
  4081   00679E  19A5               	xorwf	efgtoa@nmode& (0+255),w,b
  4082   0067A0  A4D8               	btfss	status,2,c
  4083   0067A2  EFD5  F033         	goto	u6671
  4084   0067A6  EFD7  F033         	goto	u6670
  4085   0067AA                     u6671:
  4086   0067AA  EFD9  F033         	goto	l5223
  4087   0067AE                     u6670:
  4088   0067AE                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
  4091   0067AE  4BA8               	infsnz	efgtoa@m& (0+255),f,b
  4092   0067B0  2BA9               	incf	(efgtoa@m+1)& (0+255),f,b
  4093   0067B2                     l5223:
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4097   0067B2  C0AE  F0C3         	movff	efgtoa@ou,efgtoa@u
  4098   0067B6  C0AF  F0C4         	movff	efgtoa@ou+1,efgtoa@u+1
  4099   0067BA  C0B0  F0C5         	movff	efgtoa@ou+2,efgtoa@u+2
  4100   0067BE  C0B1  F0C6         	movff	efgtoa@ou+3,efgtoa@u+3
  4101   0067C2                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4104   0067C2  C0AA  F09B         	movff	efgtoa@e,efgtoa@ne
  4105   0067C6  C0AB  F09C         	movff	efgtoa@e+1,efgtoa@ne+1
  4106   0067CA                     
  4107                           ; BSR set to: 0
  4108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4109   0067CA  6BA3               	clrf	efgtoa@pp& (0+255),b
  4110   0067CC                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4113   0067CC  0E00               	movlw	0
  4114   0067CE  6FA0               	movwf	(efgtoa@t+1)& (0+255),b
  4115   0067D0  0E00               	movlw	0
  4116   0067D2  6F9F               	movwf	efgtoa@t& (0+255),b
  4117   0067D4                     
  4118                           ; BSR set to: 0
  4119                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4120   0067D4  0E00               	movlw	0
  4121   0067D6  6FB3               	movwf	(efgtoa@i+1)& (0+255),b
  4122   0067D8  0E00               	movlw	0
  4123   0067DA  6FB2               	movwf	efgtoa@i& (0+255),b
  4124                           
  4125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4126   0067DC  EFD6  F034         	goto	l5273
  4127   0067E0                     l5233:
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4131   0067E0  C0B4  F060         	movff	efgtoa@h,___fldiv@b
  4132   0067E4  C0B5  F061         	movff	efgtoa@h+1,___fldiv@b+1
  4133   0067E8  C0B6  F062         	movff	efgtoa@h+2,___fldiv@b+2
  4134   0067EC  C0B7  F063         	movff	efgtoa@h+3,___fldiv@b+3
  4135   0067F0  C0C3  F064         	movff	efgtoa@u,___fldiv@a
  4136   0067F4  C0C4  F065         	movff	efgtoa@u+1,___fldiv@a+1
  4137   0067F8  C0C5  F066         	movff	efgtoa@u+2,___fldiv@a+2
  4138   0067FC  C0C6  F067         	movff	efgtoa@u+3,___fldiv@a+3
  4139   006800  ECF7  F03B         	call	___fldiv	;wreg free
  4140   006804  C060  F079         	movff	?___fldiv,floorf@x
  4141   006808  C061  F07A         	movff	?___fldiv+1,floorf@x+1
  4142   00680C  C062  F07B         	movff	?___fldiv+2,floorf@x+2
  4143   006810  C063  F07C         	movff	?___fldiv+3,floorf@x+3
  4144   006814  ECC0  F040         	call	_floorf	;wreg free
  4145   006818  C079  F0B8         	movff	?_floorf,efgtoa@l
  4146   00681C  C07A  F0B9         	movff	?_floorf+1,efgtoa@l+1
  4147   006820  C07B  F0BA         	movff	?_floorf+2,efgtoa@l+2
  4148   006824  C07C  F0BB         	movff	?_floorf+3,efgtoa@l+3
  4149                           
  4150                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4151   006828  C0B8  F060         	movff	efgtoa@l,___fltol@f1
  4152   00682C  C0B9  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4153   006830  C0BA  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4154   006834  C0BB  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4155   006838  EC40  F044         	call	___fltol	;wreg free
  4156   00683C  0100               	movlb	0	; () banked
  4157   00683E  BF61               	btfsc	(?___fltol+1)& (0+255),7,b
  4158   006840  EF2D  F034         	goto	u6680
  4159   006844  5161               	movf	(?___fltol+1)& (0+255),w,b
  4160   006846  E107               	bnz	u6681
  4161   006848  0E0A               	movlw	10
  4162   00684A  5D60               	subwf	?___fltol& (0+255),w,b
  4163   00684C  B0D8               	btfsc	status,0,c
  4164   00684E  EF2B  F034         	goto	u6681
  4165   006852  EF2D  F034         	goto	u6680
  4166   006856                     u6681:
  4167   006856  EF3D  F034         	goto	l5237
  4168   00685A                     u6680:
  4169   00685A                     
  4170                           ; BSR set to: 0
  4171   00685A  C0B8  F060         	movff	efgtoa@l,___fltol@f1
  4172   00685E  C0B9  F061         	movff	efgtoa@l+1,___fltol@f1+1
  4173   006862  C0BA  F062         	movff	efgtoa@l+2,___fltol@f1+2
  4174   006866  C0BB  F063         	movff	efgtoa@l+3,___fltol@f1+3
  4175   00686A  EC40  F044         	call	___fltol	;wreg free
  4176   00686E  C060  F0A6         	movff	?___fltol,efgtoa@d
  4177   006872  C061  F0A7         	movff	?___fltol+1,efgtoa@d+1
  4178   006876  EF41  F034         	goto	l952
  4179   00687A                     l5237:
  4180                           
  4181                           ; BSR set to: 0
  4182   00687A  0E00               	movlw	0
  4183   00687C  6FA7               	movwf	(efgtoa@d+1)& (0+255),b
  4184   00687E  0E09               	movlw	9
  4185   006880  6FA6               	movwf	efgtoa@d& (0+255),b
  4186   006882                     l952:
  4187                           
  4188                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4189   006882  0100               	movlb	0	; () banked
  4190   006884  51A3               	movf	efgtoa@pp& (0+255),w,b
  4191   006886  A4D8               	btfss	status,2,c
  4192   006888  EF48  F034         	goto	u6691
  4193   00688C  EF4A  F034         	goto	u6690
  4194   006890                     u6691:
  4195   006890  EF72  F034         	goto	l5257
  4196   006894                     u6690:
  4197   006894                     
  4198                           ; BSR set to: 0
  4199   006894  BF9C               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4200   006896  EF51  F034         	goto	u6700
  4201   00689A  EF4F  F034         	goto	u6701
  4202   00689E                     u6701:
  4203   00689E  EF72  F034         	goto	l5257
  4204   0068A2                     u6700:
  4205   0068A2                     
  4206                           ; BSR set to: 0
  4207                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4208   0068A2  0E00               	movlw	low _dbuf
  4209   0068A4  25C1               	addwf	efgtoa@n& (0+255),w,b
  4210   0068A6  6ED9               	movwf	fsr2l,c
  4211   0068A8  0E01               	movlw	high _dbuf
  4212   0068AA  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4213   0068AC  6EDA               	movwf	fsr2h,c
  4214   0068AE  0E2E               	movlw	46
  4215   0068B0  6EDF               	movwf	indf2,c
  4216   0068B2                     
  4217                           ; BSR set to: 0
  4218   0068B2  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4219   0068B4  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4220   0068B6                     
  4221                           ; BSR set to: 0
  4222                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4223   0068B6  07AC               	decf	efgtoa@w& (0+255),f,b
  4224   0068B8  A0D8               	btfss	status,0,c
  4225   0068BA  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4226   0068BC                     
  4227                           ; BSR set to: 0
  4228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4229   0068BC  0E01               	movlw	1
  4230   0068BE  6FA3               	movwf	efgtoa@pp& (0+255),b
  4231   0068C0  EF72  F034         	goto	l5257
  4232   0068C4                     l5249:
  4233                           
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4236   0068C4  0E00               	movlw	low _dbuf
  4237   0068C6  25C1               	addwf	efgtoa@n& (0+255),w,b
  4238   0068C8  6ED9               	movwf	fsr2l,c
  4239   0068CA  0E01               	movlw	high _dbuf
  4240   0068CC  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4241   0068CE  6EDA               	movwf	fsr2h,c
  4242   0068D0  0E30               	movlw	48
  4243   0068D2  6EDF               	movwf	indf2,c
  4244   0068D4                     
  4245                           ; BSR set to: 0
  4246   0068D4  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4247   0068D6  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4248   0068D8                     
  4249                           ; BSR set to: 0
  4250                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4251   0068D8  07AC               	decf	efgtoa@w& (0+255),f,b
  4252   0068DA  A0D8               	btfss	status,0,c
  4253   0068DC  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4254   0068DE                     
  4255                           ; BSR set to: 0
  4256                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4257   0068DE  079F               	decf	efgtoa@t& (0+255),f,b
  4258   0068E0  A0D8               	btfss	status,0,c
  4259   0068E2  07A0               	decf	(efgtoa@t+1)& (0+255),f,b
  4260   0068E4                     l5257:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4264   0068E4  519F               	movf	efgtoa@t& (0+255),w,b
  4265   0068E6  11A0               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4266   0068E8  A4D8               	btfss	status,2,c
  4267   0068EA  EF79  F034         	goto	u6711
  4268   0068EE  EF7B  F034         	goto	u6710
  4269   0068F2                     u6711:
  4270   0068F2  EF62  F034         	goto	l5249
  4271   0068F6                     u6710:
  4272   0068F6                     
  4273                           ; BSR set to: 0
  4274                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4275   0068F6  0E00               	movlw	low _dbuf
  4276   0068F8  25C1               	addwf	efgtoa@n& (0+255),w,b
  4277   0068FA  6ED9               	movwf	fsr2l,c
  4278   0068FC  0E01               	movlw	high _dbuf
  4279   0068FE  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4280   006900  6EDA               	movwf	fsr2h,c
  4281   006902  51A6               	movf	efgtoa@d& (0+255),w,b
  4282   006904  0F30               	addlw	48
  4283   006906  6EDF               	movwf	indf2,c
  4284   006908                     
  4285                           ; BSR set to: 0
  4286   006908  4BC1               	infsnz	efgtoa@n& (0+255),f,b
  4287   00690A  2BC2               	incf	(efgtoa@n+1)& (0+255),f,b
  4288   00690C                     
  4289                           ; BSR set to: 0
  4290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4291   00690C  07AC               	decf	efgtoa@w& (0+255),f,b
  4292   00690E  A0D8               	btfss	status,0,c
  4293   006910  07AD               	decf	(efgtoa@w+1)& (0+255),f,b
  4294   006912                     
  4295                           ; BSR set to: 0
  4296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4297   006912  C0B4  F087         	movff	efgtoa@h,___flsub@b
  4298   006916  C0B5  F088         	movff	efgtoa@h+1,___flsub@b+1
  4299   00691A  C0B6  F089         	movff	efgtoa@h+2,___flsub@b+2
  4300   00691E  C0B7  F08A         	movff	efgtoa@h+3,___flsub@b+3
  4301   006922  C0B8  F072         	movff	efgtoa@l,___flmul@a
  4302   006926  C0B9  F073         	movff	efgtoa@l+1,___flmul@a+1
  4303   00692A  C0BA  F074         	movff	efgtoa@l+2,___flmul@a+2
  4304   00692E  C0BB  F075         	movff	efgtoa@l+3,___flmul@a+3
  4305   006932  C0C3  F06E         	movff	efgtoa@u,___flmul@b
  4306   006936  C0C4  F06F         	movff	efgtoa@u+1,___flmul@b+1
  4307   00693A  C0C5  F070         	movff	efgtoa@u+2,___flmul@b+2
  4308   00693E  C0C6  F071         	movff	efgtoa@u+3,___flmul@b+3
  4309   006942  ECAC  F037         	call	___flmul	;wreg free
  4310   006946  C06E  F08B         	movff	?___flmul,___flsub@a
  4311   00694A  C06F  F08C         	movff	?___flmul+1,___flsub@a+1
  4312   00694E  C070  F08D         	movff	?___flmul+2,___flsub@a+2
  4313   006952  C071  F08E         	movff	?___flmul+3,___flsub@a+3
  4314   006956  EC8E  F049         	call	___flsub	;wreg free
  4315   00695A  C087  F0B4         	movff	?___flsub,efgtoa@h
  4316   00695E  C088  F0B5         	movff	?___flsub+1,efgtoa@h+1
  4317   006962  C089  F0B6         	movff	?___flsub+2,efgtoa@h+2
  4318   006966  C08A  F0B7         	movff	?___flsub+3,efgtoa@h+3
  4319   00696A                     
  4320                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4321   00696A  C0C3  F060         	movff	efgtoa@u,___fldiv@b
  4322   00696E  C0C4  F061         	movff	efgtoa@u+1,___fldiv@b+1
  4323   006972  C0C5  F062         	movff	efgtoa@u+2,___fldiv@b+2
  4324   006976  C0C6  F063         	movff	efgtoa@u+3,___fldiv@b+3
  4325   00697A  0E00               	movlw	0
  4326   00697C  0100               	movlb	0	; () banked
  4327   00697E  6F64               	movwf	___fldiv@a& (0+255),b
  4328   006980  0E00               	movlw	0
  4329   006982  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  4330   006984  0E20               	movlw	32
  4331   006986  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  4332   006988  0E41               	movlw	65
  4333   00698A  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  4334   00698C  ECF7  F03B         	call	___fldiv	;wreg free
  4335   006990  C060  F0C3         	movff	?___fldiv,efgtoa@u
  4336   006994  C061  F0C4         	movff	?___fldiv+1,efgtoa@u+1
  4337   006998  C062  F0C5         	movff	?___fldiv+2,efgtoa@u+2
  4338   00699C  C063  F0C6         	movff	?___fldiv+3,efgtoa@u+3
  4339   0069A0                     
  4340                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4341   0069A0  0100               	movlb	0	; () banked
  4342   0069A2  079B               	decf	efgtoa@ne& (0+255),f,b
  4343   0069A4  A0D8               	btfss	status,0,c
  4344   0069A6  079C               	decf	(efgtoa@ne+1)& (0+255),f,b
  4345   0069A8                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4348   0069A8  4BB2               	infsnz	efgtoa@i& (0+255),f,b
  4349   0069AA  2BB3               	incf	(efgtoa@i+1)& (0+255),f,b
  4350   0069AC                     l5273:
  4351                           
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4354   0069AC  51A8               	movf	efgtoa@m& (0+255),w,b
  4355   0069AE  5DB2               	subwf	efgtoa@i& (0+255),w,b
  4356   0069B0  51B3               	movf	(efgtoa@i+1)& (0+255),w,b
  4357   0069B2  0A80               	xorlw	128
  4358   0069B4  6F99               	movwf	??_efgtoa& (0+255),b
  4359   0069B6  51A9               	movf	(efgtoa@m+1)& (0+255),w,b
  4360   0069B8  0A80               	xorlw	128
  4361   0069BA  5999               	subwfb	??_efgtoa& (0+255),w,b
  4362   0069BC  B0D8               	btfsc	status,0,c
  4363   0069BE  EFE3  F034         	goto	u6721
  4364   0069C2  EFE5  F034         	goto	u6720
  4365   0069C6                     u6721:
  4366   0069C6  EFF3  F034         	goto	l5277
  4367   0069CA                     u6720:
  4368   0069CA                     
  4369                           ; BSR set to: 0
  4370   0069CA  BFC2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4371   0069CC  EFF1  F034         	goto	u6731
  4372   0069D0  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  4373   0069D2  E109               	bnz	u6730
  4374   0069D4  0E4B               	movlw	75
  4375   0069D6  5DC1               	subwf	efgtoa@n& (0+255),w,b
  4376   0069D8  A0D8               	btfss	status,0,c
  4377   0069DA  EFF1  F034         	goto	u6731
  4378   0069DE  EFF3  F034         	goto	u6730
  4379   0069E2                     u6731:
  4380   0069E2  EFF0  F033         	goto	l5233
  4381   0069E6                     u6730:
  4382   0069E6                     l5277:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4386   0069E6  0E00               	movlw	0
  4387   0069E8  6FB3               	movwf	(efgtoa@i+1)& (0+255),b
  4388   0069EA  0E4F               	movlw	79
  4389   0069EC  6FB2               	movwf	efgtoa@i& (0+255),b
  4390   0069EE                     
  4391                           ; BSR set to: 0
  4392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4393   0069EE  0E00               	movlw	low _dbuf
  4394   0069F0  25B2               	addwf	efgtoa@i& (0+255),w,b
  4395   0069F2  6ED9               	movwf	fsr2l,c
  4396   0069F4  0E01               	movlw	high _dbuf
  4397   0069F6  21B3               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4398   0069F8  6EDA               	movwf	fsr2h,c
  4399   0069FA  6ADF               	clrf	indf2,c
  4400   0069FC                     
  4401                           ; BSR set to: 0
  4402                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4403   0069FC  0E00               	movlw	low _dbuf
  4404   0069FE  6F99               	movwf	??_efgtoa& (0+255),b
  4405   006A00  0E01               	movlw	high _dbuf
  4406   006A02  6F9A               	movwf	(??_efgtoa+1)& (0+255),b
  4407   006A04  51C1               	movf	efgtoa@n& (0+255),w,b
  4408   006A06  5F99               	subwf	??_efgtoa& (0+255),f,b
  4409   006A08  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  4410   006A0A  5B9A               	subwfb	(??_efgtoa+1)& (0+255),f,b
  4411   006A0C  51B2               	movf	efgtoa@i& (0+255),w,b
  4412   006A0E  2599               	addwf	??_efgtoa& (0+255),w,b
  4413   006A10  6F60               	movwf	memcpy@d1& (0+255),b
  4414   006A12  51B3               	movf	(efgtoa@i+1)& (0+255),w,b
  4415   006A14  219A               	addwfc	(??_efgtoa+1)& (0+255),w,b
  4416   006A16  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  4417   006A18  0E00               	movlw	low _dbuf
  4418   006A1A  6F62               	movwf	memcpy@s1& (0+255),b
  4419   006A1C  0E01               	movlw	high _dbuf
  4420   006A1E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  4421   006A20  C0C1  F064         	movff	efgtoa@n,memcpy@n
  4422   006A24  C0C2  F065         	movff	efgtoa@n+1,memcpy@n+1
  4423   006A28  EC9B  F048         	call	_memcpy	;wreg free
  4424   006A2C                     
  4425                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4426   006A2C  0100               	movlb	0	; () banked
  4427   006A2E  51C1               	movf	efgtoa@n& (0+255),w,b
  4428   006A30  5DB2               	subwf	efgtoa@i& (0+255),w,b
  4429   006A32  6FC1               	movwf	efgtoa@n& (0+255),b
  4430   006A34  51C2               	movf	(efgtoa@n+1)& (0+255),w,b
  4431   006A36  59B3               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4432   006A38  6FC2               	movwf	(efgtoa@n+1)& (0+255),b
  4433   006A3A                     
  4434                           ; BSR set to: 0
  4435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4436   006A3A  51BC               	movf	efgtoa@sign& (0+255),w,b
  4437   006A3C  A4D8               	btfss	status,2,c
  4438   006A3E  EF23  F035         	goto	u6741
  4439   006A42  EF26  F035         	goto	u6740
  4440   006A46                     u6741:
  4441   006A46  0E01               	movlw	1
  4442   006A48  EF27  F035         	goto	u6750
  4443   006A4C                     u6740:
  4444   006A4C  0E00               	movlw	0
  4445   006A4E                     u6750:
  4446   006A4E  6FB2               	movwf	efgtoa@i& (0+255),b
  4447   006A50  6BB3               	clrf	(efgtoa@i+1)& (0+255),b
  4448   006A52                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4451   006A52  51BC               	movf	efgtoa@sign& (0+255),w,b
  4452   006A54  B4D8               	btfsc	status,2,c
  4453   006A56  EF2F  F035         	goto	u6761
  4454   006A5A  EF31  F035         	goto	u6760
  4455   006A5E                     u6761:
  4456   006A5E  EF3D  F035         	goto	l5291
  4457   006A62                     u6760:
  4458   006A62                     
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4461   006A62  07C1               	decf	efgtoa@n& (0+255),f,b
  4462   006A64  A0D8               	btfss	status,0,c
  4463   006A66  07C2               	decf	(efgtoa@n+1)& (0+255),f,b
  4464   006A68  0E00               	movlw	low _dbuf
  4465   006A6A  25C1               	addwf	efgtoa@n& (0+255),w,b
  4466   006A6C  6ED9               	movwf	fsr2l,c
  4467   006A6E  0E01               	movlw	high _dbuf
  4468   006A70  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4469   006A72  6EDA               	movwf	fsr2h,c
  4470   006A74  0060  F2F3  FFDF   	movff	efgtoa@sign,indf2
  4471   006A7A                     l5291:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4475   006A7A  51B2               	movf	efgtoa@i& (0+255),w,b
  4476   006A7C  5FAC               	subwf	efgtoa@w& (0+255),f,b
  4477   006A7E  51B3               	movf	(efgtoa@i+1)& (0+255),w,b
  4478   006A80  5BAD               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4479   006A82                     
  4480                           ; BSR set to: 0
  4481                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4482   006A82  C093  F06E         	movff	efgtoa@fp,pad@fp
  4483   006A86  0E00               	movlw	low _dbuf
  4484   006A88  25C1               	addwf	efgtoa@n& (0+255),w,b
  4485   006A8A  6F6F               	movwf	pad@buf& (0+255),b
  4486   006A8C  0E01               	movlw	high _dbuf
  4487   006A8E  21C2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4488   006A90  6F70               	movwf	(pad@buf+1)& (0+255),b
  4489   006A92  C0AC  F071         	movff	efgtoa@w,pad@p
  4490   006A96  C0AD  F072         	movff	efgtoa@w+1,pad@p+1
  4491   006A9A  EC15  F048         	call	_pad	;wreg free
  4492   006A9E                     l919:
  4493   006A9E  0012               	return		;funcret
  4494   006AA0                     __end_of_efgtoa:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function _strcpy *****************
  4498 ;; Defined at:
  4499 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dest            2    0[BANK0 ] PTR unsigned char 
  4502 ;;		 -> dbuf(80), 
  4503 ;;  src             1    2[BANK0 ] PTR const unsigned char 
  4504 ;;		 -> STR_11(4), STR_8(4), 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  d               2    4[BANK0 ] PTR unsigned char 
  4507 ;;		 -> dbuf(80), 
  4508 ;; Return value:  Size  Location     Type
  4509 ;;                  2    0[BANK0 ] PTR unsigned char 
  4510 ;; Registers used:
  4511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4512 ;; Tracked objects:
  4513 ;;		On entry : 0/0
  4514 ;;		On exit  : 0/0
  4515 ;;		Unchanged: 0/0
  4516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4517 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4520 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4521 ;;Total ram usage:        6 bytes
  4522 ;; Hardware stack levels used: 1
  4523 ;; Hardware stack levels required when called: 2
  4524 ;; This function calls:
  4525 ;;		Nothing
  4526 ;; This function is called by:
  4527 ;;		_efgtoa
  4528 ;; This function uses a non-reentrant model
  4529 ;;
  4530                           
  4531                           	psect	text6
  4532   0092D4                     __ptext6:
  4533                           	callstack 0
  4534   0092D4                     _strcpy:
  4535                           	callstack 24
  4536   0092D4  C060  F064         	movff	strcpy@dest,strcpy@d
  4537   0092D8  C061  F065         	movff	strcpy@dest+1,strcpy@d+1
  4538   0092DC                     l4967:
  4539   0092DC  0100               	movlb	0	; () banked
  4540   0092DE  2B62               	incf	strcpy@src& (0+255),f,b
  4541   0092E0  0562               	decf	strcpy@src& (0+255),w,b
  4542   0092E2  6F63               	movwf	??_strcpy& (0+255),b
  4543   0092E4  0060  F18F  FFF6   	movff	??_strcpy,tblptrl
  4544   0092EA                     	if	1	;There is more than 1 active tblptr byte
  4545   0092EA  0E20               	movlw	high __smallconst
  4546   0092EC  6EF7               	movwf	tblptrh,c
  4547   0092EE                     	endif
  4548   0092EE                     	if	0	;tblptru may be non-zero
  4549   0092EE                     	endif
  4550   0092EE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4551   0092EE  0E00               	movlw	low (__smallconst shr (0+16))
  4552   0092F0  6EF8               	movwf	tblptru,c
  4553   0092F2                     	endif
  4554   0092F2  0060  F193  FFD9   	movff	strcpy@d,fsr2l
  4555   0092F8  0060  F197  FFDA   	movff	strcpy@d+1,fsr2h
  4556   0092FE  4B64               	infsnz	strcpy@d& (0+255),f,b
  4557   009300  2B65               	incf	(strcpy@d+1)& (0+255),f,b
  4558   009302  0008               	tblrd		*
  4559   009304  006F FFD7 FFDF     	movff	tablat,indf2
  4560   00930A  50DF               	movf	indf2,w,c
  4561   00930C  A4D8               	btfss	status,2,c
  4562   00930E  EF8B  F049         	goto	u6211
  4563   009312  EF8D  F049         	goto	u6210
  4564   009316                     u6211:
  4565   009316  EF6E  F049         	goto	l4967
  4566   00931A                     u6210:
  4567   00931A                     
  4568                           ; BSR set to: 0
  4569   00931A  0012               	return		;funcret
  4570   00931C                     __end_of_strcpy:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _memcpy *****************
  4574 ;; Defined at:
  4575 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  d1              2    0[BANK0 ] PTR void 
  4578 ;;		 -> dbuf(80), 
  4579 ;;  s1              2    2[BANK0 ] PTR const void 
  4580 ;;		 -> dbuf(80), 
  4581 ;;  n               2    4[BANK0 ] unsigned int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  s               2    9[BANK0 ] PTR const unsigned char 
  4584 ;;		 -> dbuf(80), 
  4585 ;;  d               2    7[BANK0 ] PTR unsigned char 
  4586 ;;		 -> dbuf(80), 
  4587 ;;  tmp             1    6[BANK0 ] unsigned char 
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  2    0[BANK0 ] PTR void 
  4590 ;; Registers used:
  4591 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4597 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4598 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4600 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4601 ;;Total ram usage:       11 bytes
  4602 ;; Hardware stack levels used: 1
  4603 ;; Hardware stack levels required when called: 2
  4604 ;; This function calls:
  4605 ;;		Nothing
  4606 ;; This function is called by:
  4607 ;;		_efgtoa
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text7
  4612   009136                     __ptext7:
  4613                           	callstack 0
  4614   009136                     _memcpy:
  4615                           	callstack 24
  4616   009136  C062  F069         	movff	memcpy@s1,memcpy@s
  4617   00913A  C063  F06A         	movff	memcpy@s1+1,memcpy@s+1
  4618   00913E  C060  F067         	movff	memcpy@d1,memcpy@d
  4619   009142  C061  F068         	movff	memcpy@d1+1,memcpy@d+1
  4620   009146  EFBA  F048         	goto	l5015
  4621   00914A                     l5007:
  4622                           
  4623                           ; BSR set to: 0
  4624   00914A  0060  F1A7  FFD9   	movff	memcpy@s,fsr2l
  4625   009150  0060  F1AB  FFDA   	movff	memcpy@s+1,fsr2h
  4626   009156  50DF               	movf	indf2,w,c
  4627   009158  6F66               	movwf	memcpy@tmp& (0+255),b
  4628   00915A                     
  4629                           ; BSR set to: 0
  4630   00915A  4B69               	infsnz	memcpy@s& (0+255),f,b
  4631   00915C  2B6A               	incf	(memcpy@s+1)& (0+255),f,b
  4632   00915E                     
  4633                           ; BSR set to: 0
  4634   00915E  0060  F19F  FFD9   	movff	memcpy@d,fsr2l
  4635   009164  0060  F1A3  FFDA   	movff	memcpy@d+1,fsr2h
  4636   00916A  0060  F19B  FFDF   	movff	memcpy@tmp,indf2
  4637   009170                     
  4638                           ; BSR set to: 0
  4639   009170  4B67               	infsnz	memcpy@d& (0+255),f,b
  4640   009172  2B68               	incf	(memcpy@d+1)& (0+255),f,b
  4641   009174                     l5015:
  4642   009174  0100               	movlb	0	; () banked
  4643   009176  0764               	decf	memcpy@n& (0+255),f,b
  4644   009178  A0D8               	btfss	status,0,c
  4645   00917A  0765               	decf	(memcpy@n+1)& (0+255),f,b
  4646   00917C  2964               	incf	memcpy@n& (0+255),w,b
  4647   00917E  E106               	bnz	u6331
  4648   009180  2965               	incf	(memcpy@n+1)& (0+255),w,b
  4649   009182  A4D8               	btfss	status,2,c
  4650   009184  EFC6  F048         	goto	u6331
  4651   009188  EFC8  F048         	goto	u6330
  4652   00918C                     u6331:
  4653   00918C  EFA5  F048         	goto	l5007
  4654   009190                     u6330:
  4655   009190                     
  4656                           ; BSR set to: 0
  4657   009190  0012               	return		;funcret
  4658   009192                     __end_of_memcpy:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function _labs *****************
  4662 ;; Defined at:
  4663 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\labs.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;  a               4    0[BANK0 ] long 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  4    0[BANK0 ] long 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4677 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4679 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4680 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4681 ;;Total ram usage:        8 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 2
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_efgtoa
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text8
  4692   009192                     __ptext8:
  4693                           	callstack 0
  4694   009192                     _labs:
  4695                           	callstack 24
  4696   009192  0100               	movlb	0	; () banked
  4697   009194  BF63               	btfsc	(labs@a+3)& (0+255),7,b
  4698   009196  EFCF  F048         	goto	u6221
  4699   00919A  EFD1  F048         	goto	u6220
  4700   00919E                     u6221:
  4701   00919E  EFDB  F048         	goto	l4973
  4702   0091A2                     u6220:
  4703   0091A2                     
  4704                           ; BSR set to: 0
  4705   0091A2  C060  F060         	movff	labs@a,?_labs
  4706   0091A6  C061  F061         	movff	labs@a+1,?_labs+1
  4707   0091AA  C062  F062         	movff	labs@a+2,?_labs+2
  4708   0091AE  C063  F063         	movff	labs@a+3,?_labs+3
  4709   0091B2  EFF4  F048         	goto	l1044
  4710   0091B6                     l4973:
  4711                           
  4712                           ; BSR set to: 0
  4713   0091B6  C060  F064         	movff	labs@a,??_labs
  4714   0091BA  C061  F065         	movff	labs@a+1,??_labs+1
  4715   0091BE  C062  F066         	movff	labs@a+2,??_labs+2
  4716   0091C2  C063  F067         	movff	labs@a+3,??_labs+3
  4717   0091C6  1F64               	comf	??_labs& (0+255),f,b
  4718   0091C8  1F65               	comf	(??_labs+1)& (0+255),f,b
  4719   0091CA  1F66               	comf	(??_labs+2)& (0+255),f,b
  4720   0091CC  1F67               	comf	(??_labs+3)& (0+255),f,b
  4721   0091CE  2B64               	incf	??_labs& (0+255),f,b
  4722   0091D0  0E00               	movlw	0
  4723   0091D2  2365               	addwfc	(??_labs+1)& (0+255),f,b
  4724   0091D4  2366               	addwfc	(??_labs+2)& (0+255),f,b
  4725   0091D6  2367               	addwfc	(??_labs+3)& (0+255),f,b
  4726   0091D8  C064  F060         	movff	??_labs,?_labs
  4727   0091DC  C065  F061         	movff	??_labs+1,?_labs+1
  4728   0091E0  C066  F062         	movff	??_labs+2,?_labs+2
  4729   0091E4  C067  F063         	movff	??_labs+3,?_labs+3
  4730   0091E8                     l1044:
  4731                           
  4732                           ; BSR set to: 0
  4733   0091E8  0012               	return		;funcret
  4734   0091EA                     __end_of_labs:
  4735                           	callstack 0
  4736                           
  4737 ;; *************** function _floorf *****************
  4738 ;; Defined at:
  4739 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\floorf.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  x               4   25[BANK0 ] float 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  u               4   41[BANK0 ] struct .
  4744 ;;  m               4   35[BANK0 ] unsigned long 
  4745 ;;  e               2   39[BANK0 ] int 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  4   25[BANK0 ] float 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4756 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4757 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4758 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4759 ;;Total ram usage:       20 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 2
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_efgtoa
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text9
  4770   008180                     __ptext9:
  4771                           	callstack 0
  4772   008180                     _floorf:
  4773                           	callstack 24
  4774   008180  C02A  F089         	movff	floorf@F521,floorf@u
  4775   008184  C02B  F08A         	movff	floorf@F521+1,floorf@u+1
  4776   008188  C02C  F08B         	movff	floorf@F521+2,floorf@u+2
  4777   00818C  C02D  F08C         	movff	floorf@F521+3,floorf@u+3
  4778   008190  C079  F089         	movff	floorf@x,floorf@u
  4779   008194  C07A  F08A         	movff	floorf@x+1,floorf@u+1
  4780   008198  C07B  F08B         	movff	floorf@x+2,floorf@u+2
  4781   00819C  C07C  F08C         	movff	floorf@x+3,floorf@u+3
  4782   0081A0  0E81               	movlw	129
  4783   0081A2  0100               	movlb	0	; () banked
  4784   0081A4  6F7D               	movwf	??_floorf& (0+255),b
  4785   0081A6  0EFF               	movlw	255
  4786   0081A8  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4787   0081AA  C089  F07F         	movff	floorf@u,??_floorf+2
  4788   0081AE  C08A  F080         	movff	floorf@u+1,??_floorf+3
  4789   0081B2  C08B  F081         	movff	floorf@u+2,??_floorf+4
  4790   0081B6  C08C  F082         	movff	floorf@u+3,??_floorf+5
  4791   0081BA  0E18               	movlw	24
  4792   0081BC  EFE5  F040         	goto	u6230
  4793   0081C0                     u6235:
  4794   0081C0  90D8               	bcf	status,0,c
  4795   0081C2  3382               	rrcf	(??_floorf+5)& (0+255),f,b
  4796   0081C4  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4797   0081C6  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4798   0081C8  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4799   0081CA                     u6230:
  4800   0081CA  2EE8               	decfsz	wreg,f,c
  4801   0081CC  EFE0  F040         	goto	u6235
  4802   0081D0  517F               	movf	(??_floorf+2)& (0+255),w,b
  4803   0081D2  257D               	addwf	??_floorf& (0+255),w,b
  4804   0081D4  6F87               	movwf	floorf@e& (0+255),b
  4805   0081D6  0E00               	movlw	0
  4806   0081D8  217E               	addwfc	(??_floorf+1)& (0+255),w,b
  4807   0081DA  6F88               	movwf	(floorf@e+1)& (0+255),b
  4808   0081DC  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4809   0081DE  EFFA  F040         	goto	u6241
  4810   0081E2  5188               	movf	(floorf@e+1)& (0+255),w,b
  4811   0081E4  E109               	bnz	u6240
  4812   0081E6  0E17               	movlw	23
  4813   0081E8  5D87               	subwf	floorf@e& (0+255),w,b
  4814   0081EA  A0D8               	btfss	status,0,c
  4815   0081EC  EFFA  F040         	goto	u6241
  4816   0081F0  EFFC  F040         	goto	u6240
  4817   0081F4                     u6241:
  4818   0081F4  EF06  F041         	goto	l4983
  4819   0081F8                     u6240:
  4820   0081F8                     l4981:
  4821                           
  4822                           ; BSR set to: 0
  4823   0081F8  C079  F079         	movff	floorf@x,?_floorf
  4824   0081FC  C07A  F07A         	movff	floorf@x+1,?_floorf+1
  4825   008200  C07B  F07B         	movff	floorf@x+2,?_floorf+2
  4826   008204  C07C  F07C         	movff	floorf@x+3,?_floorf+3
  4827   008208  EFCA  F041         	goto	l1030
  4828   00820C                     l4983:
  4829                           
  4830                           ; BSR set to: 0
  4831   00820C  BF88               	btfsc	(floorf@e+1)& (0+255),7,b
  4832   00820E  EF0B  F041         	goto	u6251
  4833   008212  EF0D  F041         	goto	u6250
  4834   008216                     u6251:
  4835   008216  EF7E  F041         	goto	l4993
  4836   00821A                     u6250:
  4837   00821A                     
  4838                           ; BSR set to: 0
  4839   00821A  C087  F07D         	movff	floorf@e,??_floorf
  4840   00821E  0EFF               	movlw	255
  4841   008220  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4842   008222  0EFF               	movlw	255
  4843   008224  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4844   008226  0E7F               	movlw	127
  4845   008228  6F80               	movwf	(??_floorf+3)& (0+255),b
  4846   00822A  0E00               	movlw	0
  4847   00822C  6F81               	movwf	(??_floorf+4)& (0+255),b
  4848   00822E                     u6265:
  4849   00822E  677D               	tstfsz	??_floorf& (0+255),b
  4850   008230  EF1C  F041         	goto	u6266
  4851   008234  EF24  F041         	goto	u6267
  4852   008238                     u6266:
  4853   008238  3581               	rlcf	(??_floorf+4)& (0+255),w,b
  4854   00823A  3381               	rrcf	(??_floorf+4)& (0+255),f,b
  4855   00823C  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4856   00823E  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4857   008240  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4858   008242  2F7D               	decfsz	??_floorf& (0+255),f,b
  4859   008244  EF17  F041         	goto	u6265
  4860   008248                     u6267:
  4861   008248  C07E  F083         	movff	??_floorf+1,floorf@m
  4862   00824C  C07F  F084         	movff	??_floorf+2,floorf@m+1
  4863   008250  C080  F085         	movff	??_floorf+3,floorf@m+2
  4864   008254  C081  F086         	movff	??_floorf+4,floorf@m+3
  4865   008258  0100               	movlb	0	; () banked
  4866   00825A  5183               	movf	floorf@m& (0+255),w,b
  4867   00825C  1589               	andwf	floorf@u& (0+255),w,b
  4868   00825E  6F7D               	movwf	??_floorf& (0+255),b
  4869   008260  5184               	movf	(floorf@m+1)& (0+255),w,b
  4870   008262  158A               	andwf	(floorf@u+1)& (0+255),w,b
  4871   008264  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4872   008266  5185               	movf	(floorf@m+2)& (0+255),w,b
  4873   008268  158B               	andwf	(floorf@u+2)& (0+255),w,b
  4874   00826A  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4875   00826C  5186               	movf	(floorf@m+3)& (0+255),w,b
  4876   00826E  158C               	andwf	(floorf@u+3)& (0+255),w,b
  4877   008270  6F80               	movwf	(??_floorf+3)& (0+255),b
  4878   008272  517D               	movf	??_floorf& (0+255),w,b
  4879   008274  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4880   008276  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4881   008278  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4882   00827A  A4D8               	btfss	status,2,c
  4883   00827C  EF42  F041         	goto	u6271
  4884   008280  EF44  F041         	goto	u6270
  4885   008284                     u6271:
  4886   008284  EF46  F041         	goto	l4989
  4887   008288                     u6270:
  4888   008288  EFFC  F040         	goto	l4981
  4889   00828C                     l4989:
  4890                           
  4891                           ; BSR set to: 0
  4892   00828C  C089  F07D         	movff	floorf@u,??_floorf
  4893   008290  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4894   008294  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4895   008298  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4896   00829C  0E20               	movlw	32
  4897   00829E  EF56  F041         	goto	u6280
  4898   0082A2                     u6285:
  4899   0082A2  90D8               	bcf	status,0,c
  4900   0082A4  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4901   0082A6  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4902   0082A8  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4903   0082AA  337D               	rrcf	??_floorf& (0+255),f,b
  4904   0082AC                     u6280:
  4905   0082AC  2EE8               	decfsz	wreg,f,c
  4906   0082AE  EF51  F041         	goto	u6285
  4907   0082B2  517D               	movf	??_floorf& (0+255),w,b
  4908   0082B4  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4909   0082B6  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4910   0082B8  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4911   0082BA  B4D8               	btfsc	status,2,c
  4912   0082BC  EF62  F041         	goto	u6291
  4913   0082C0  EF64  F041         	goto	u6290
  4914   0082C4                     u6291:
  4915   0082C4  EF6C  F041         	goto	l1033
  4916   0082C8                     u6290:
  4917   0082C8                     
  4918                           ; BSR set to: 0
  4919   0082C8  5183               	movf	floorf@m& (0+255),w,b
  4920   0082CA  2789               	addwf	floorf@u& (0+255),f,b
  4921   0082CC  5184               	movf	(floorf@m+1)& (0+255),w,b
  4922   0082CE  238A               	addwfc	(floorf@u+1)& (0+255),f,b
  4923   0082D0  5185               	movf	(floorf@m+2)& (0+255),w,b
  4924   0082D2  238B               	addwfc	(floorf@u+2)& (0+255),f,b
  4925   0082D4  5186               	movf	(floorf@m+3)& (0+255),w,b
  4926   0082D6  238C               	addwfc	(floorf@u+3)& (0+255),f,b
  4927   0082D8                     l1033:
  4928                           
  4929                           ; BSR set to: 0
  4930   0082D8  1D83               	comf	floorf@m& (0+255),w,b
  4931   0082DA  6F7D               	movwf	??_floorf& (0+255),b
  4932   0082DC  1D84               	comf	(floorf@m+1)& (0+255),w,b
  4933   0082DE  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4934   0082E0  1D85               	comf	(floorf@m+2)& (0+255),w,b
  4935   0082E2  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4936   0082E4  1D86               	comf	(floorf@m+3)& (0+255),w,b
  4937   0082E6  6F80               	movwf	(??_floorf+3)& (0+255),b
  4938   0082E8  517D               	movf	??_floorf& (0+255),w,b
  4939   0082EA  1789               	andwf	floorf@u& (0+255),f,b
  4940   0082EC  517E               	movf	(??_floorf+1)& (0+255),w,b
  4941   0082EE  178A               	andwf	(floorf@u+1)& (0+255),f,b
  4942   0082F0  517F               	movf	(??_floorf+2)& (0+255),w,b
  4943   0082F2  178B               	andwf	(floorf@u+2)& (0+255),f,b
  4944   0082F4  5180               	movf	(??_floorf+3)& (0+255),w,b
  4945   0082F6  178C               	andwf	(floorf@u+3)& (0+255),f,b
  4946   0082F8  EFC2  F041         	goto	l5001
  4947   0082FC                     l4993:
  4948                           
  4949                           ; BSR set to: 0
  4950   0082FC  C089  F07D         	movff	floorf@u,??_floorf
  4951   008300  C08A  F07E         	movff	floorf@u+1,??_floorf+1
  4952   008304  C08B  F07F         	movff	floorf@u+2,??_floorf+2
  4953   008308  C08C  F080         	movff	floorf@u+3,??_floorf+3
  4954   00830C  0E20               	movlw	32
  4955   00830E  EF8E  F041         	goto	u6300
  4956   008312                     u6305:
  4957   008312  90D8               	bcf	status,0,c
  4958   008314  3380               	rrcf	(??_floorf+3)& (0+255),f,b
  4959   008316  337F               	rrcf	(??_floorf+2)& (0+255),f,b
  4960   008318  337E               	rrcf	(??_floorf+1)& (0+255),f,b
  4961   00831A  337D               	rrcf	??_floorf& (0+255),f,b
  4962   00831C                     u6300:
  4963   00831C  2EE8               	decfsz	wreg,f,c
  4964   00831E  EF89  F041         	goto	u6305
  4965   008322  517D               	movf	??_floorf& (0+255),w,b
  4966   008324  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  4967   008326  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  4968   008328  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  4969   00832A  A4D8               	btfss	status,2,c
  4970   00832C  EF9A  F041         	goto	u6311
  4971   008330  EF9C  F041         	goto	u6310
  4972   008334                     u6311:
  4973   008334  EFA6  F041         	goto	l4997
  4974   008338                     u6310:
  4975   008338                     
  4976                           ; BSR set to: 0
  4977   008338  0E00               	movlw	0
  4978   00833A  6F89               	movwf	floorf@u& (0+255),b
  4979   00833C  0E00               	movlw	0
  4980   00833E  6F8A               	movwf	(floorf@u+1)& (0+255),b
  4981   008340  0E00               	movlw	0
  4982   008342  6F8B               	movwf	(floorf@u+2)& (0+255),b
  4983   008344  0E00               	movlw	0
  4984   008346  6F8C               	movwf	(floorf@u+3)& (0+255),b
  4985   008348  EFC2  F041         	goto	l5001
  4986   00834C                     l4997:
  4987                           
  4988                           ; BSR set to: 0
  4989   00834C  90D8               	bcf	status,0,c
  4990   00834E  3589               	rlcf	floorf@u& (0+255),w,b
  4991   008350  6F7D               	movwf	??_floorf& (0+255),b
  4992   008352  358A               	rlcf	(floorf@u+1)& (0+255),w,b
  4993   008354  6F7E               	movwf	(??_floorf+1)& (0+255),b
  4994   008356  358B               	rlcf	(floorf@u+2)& (0+255),w,b
  4995   008358  6F7F               	movwf	(??_floorf+2)& (0+255),b
  4996   00835A  358C               	rlcf	(floorf@u+3)& (0+255),w,b
  4997   00835C  6F80               	movwf	(??_floorf+3)& (0+255),b
  4998   00835E  517D               	movf	??_floorf& (0+255),w,b
  4999   008360  117E               	iorwf	(??_floorf+1)& (0+255),w,b
  5000   008362  117F               	iorwf	(??_floorf+2)& (0+255),w,b
  5001   008364  1180               	iorwf	(??_floorf+3)& (0+255),w,b
  5002   008366  B4D8               	btfsc	status,2,c
  5003   008368  EFB8  F041         	goto	u6321
  5004   00836C  EFBA  F041         	goto	u6320
  5005   008370                     u6321:
  5006   008370  EFC2  F041         	goto	l5001
  5007   008374                     u6320:
  5008   008374                     
  5009                           ; BSR set to: 0
  5010   008374  0E00               	movlw	0
  5011   008376  6F89               	movwf	floorf@u& (0+255),b
  5012   008378  0E00               	movlw	0
  5013   00837A  6F8A               	movwf	(floorf@u+1)& (0+255),b
  5014   00837C  0E80               	movlw	128
  5015   00837E  6F8B               	movwf	(floorf@u+2)& (0+255),b
  5016   008380  0EBF               	movlw	191
  5017   008382  6F8C               	movwf	(floorf@u+3)& (0+255),b
  5018   008384                     l5001:
  5019                           
  5020                           ; BSR set to: 0
  5021   008384  C089  F079         	movff	floorf@u,?_floorf
  5022   008388  C08A  F07A         	movff	floorf@u+1,?_floorf+1
  5023   00838C  C08B  F07B         	movff	floorf@u+2,?_floorf+2
  5024   008390  C08C  F07C         	movff	floorf@u+3,?_floorf+3
  5025   008394                     l1030:
  5026                           
  5027                           ; BSR set to: 0
  5028   008394  0012               	return		;funcret
  5029   008396                     __end_of_floorf:
  5030                           	callstack 0
  5031                           
  5032 ;; *************** function ___fpclassifyf *****************
  5033 ;; Defined at:
  5034 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  5035 ;; Parameters:    Size  Location     Type
  5036 ;;  x               4    0[BANK0 ] float 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  u               4   10[BANK0 ] struct .
  5039 ;;  e               2    8[BANK0 ] int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2    0[BANK0 ] int 
  5042 ;; Registers used:
  5043 ;;		wreg, status,2, status,0
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5049 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5050 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5051 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5052 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5053 ;;Total ram usage:       14 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 2
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_efgtoa
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text10
  5064   008A8E                     __ptext10:
  5065                           	callstack 0
  5066   008A8E                     ___fpclassifyf:
  5067                           	callstack 24
  5068   008A8E  C02E  F06A         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5069   008A92  C02F  F06B         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5070   008A96  C030  F06C         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5071   008A9A  C031  F06D         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5072   008A9E  C060  F06A         	movff	___fpclassifyf@x,___fpclassifyf@u
  5073   008AA2  C061  F06B         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5074   008AA6  C062  F06C         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5075   008AAA  C063  F06D         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5076   008AAE  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5077   008AB2  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5078   008AB6  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5079   008ABA  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5080   008ABE  0E18               	movlw	24
  5081   008AC0  EF68  F045         	goto	u6140
  5082   008AC4                     u6145:
  5083   008AC4  0100               	movlb	0	; () banked
  5084   008AC6  90D8               	bcf	status,0,c
  5085   008AC8  3367               	rrcf	(??___fpclassifyf+3)& (0+255),f,b
  5086   008ACA  3366               	rrcf	(??___fpclassifyf+2)& (0+255),f,b
  5087   008ACC  3365               	rrcf	(??___fpclassifyf+1)& (0+255),f,b
  5088   008ACE  3364               	rrcf	??___fpclassifyf& (0+255),f,b
  5089   008AD0                     u6140:
  5090   008AD0  2EE8               	decfsz	wreg,f,c
  5091   008AD2  EF62  F045         	goto	u6145
  5092   008AD6  5164               	movf	??___fpclassifyf& (0+255),w,b
  5093   008AD8  6F68               	movwf	___fpclassifyf@e& (0+255),b
  5094   008ADA  6B69               	clrf	(___fpclassifyf@e+1)& (0+255),b
  5095   008ADC  5168               	movf	___fpclassifyf@e& (0+255),w,b
  5096   008ADE  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5097   008AE0  A4D8               	btfss	status,2,c
  5098   008AE2  EF75  F045         	goto	u6151
  5099   008AE6  EF77  F045         	goto	u6150
  5100   008AEA                     u6151:
  5101   008AEA  EF97  F045         	goto	l4955
  5102   008AEE                     u6150:
  5103   008AEE                     
  5104                           ; BSR set to: 0
  5105   008AEE  90D8               	bcf	status,0,c
  5106   008AF0  356A               	rlcf	___fpclassifyf@u& (0+255),w,b
  5107   008AF2  6F64               	movwf	??___fpclassifyf& (0+255),b
  5108   008AF4  356B               	rlcf	(___fpclassifyf@u+1)& (0+255),w,b
  5109   008AF6  6F65               	movwf	(??___fpclassifyf+1)& (0+255),b
  5110   008AF8  356C               	rlcf	(___fpclassifyf@u+2)& (0+255),w,b
  5111   008AFA  6F66               	movwf	(??___fpclassifyf+2)& (0+255),b
  5112   008AFC  356D               	rlcf	(___fpclassifyf@u+3)& (0+255),w,b
  5113   008AFE  6F67               	movwf	(??___fpclassifyf+3)& (0+255),b
  5114   008B00  5164               	movf	??___fpclassifyf& (0+255),w,b
  5115   008B02  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5116   008B04  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5117   008B06  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5118   008B08  A4D8               	btfss	status,2,c
  5119   008B0A  EF89  F045         	goto	u6161
  5120   008B0E  EF8B  F045         	goto	u6160
  5121   008B12                     u6161:
  5122   008B12  EF91  F045         	goto	l4951
  5123   008B16                     u6160:
  5124   008B16                     
  5125                           ; BSR set to: 0
  5126   008B16  0E00               	movlw	0
  5127   008B18  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5128   008B1A  0E02               	movlw	2
  5129   008B1C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5130   008B1E  EFC6  F045         	goto	l1016
  5131   008B22                     l4951:
  5132                           
  5133                           ; BSR set to: 0
  5134   008B22  0E00               	movlw	0
  5135   008B24  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5136   008B26  0E03               	movlw	3
  5137   008B28  6F60               	movwf	?___fpclassifyf& (0+255),b
  5138   008B2A  EFC6  F045         	goto	l1016
  5139   008B2E                     l4955:
  5140                           
  5141                           ; BSR set to: 0
  5142   008B2E  2968               	incf	___fpclassifyf@e& (0+255),w,b
  5143   008B30  1169               	iorwf	(___fpclassifyf@e+1)& (0+255),w,b
  5144   008B32  A4D8               	btfss	status,2,c
  5145   008B34  EF9E  F045         	goto	u6171
  5146   008B38  EFA0  F045         	goto	u6170
  5147   008B3C                     u6171:
  5148   008B3C  EFC2  F045         	goto	l4961
  5149   008B40                     u6170:
  5150   008B40                     
  5151                           ; BSR set to: 0
  5152   008B40  C06A  F064         	movff	___fpclassifyf@u,??___fpclassifyf
  5153   008B44  C06B  F065         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5154   008B48  C06C  F066         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5155   008B4C  C06D  F067         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5156   008B50  0E09               	movlw	9
  5157   008B52                     u6185:
  5158   008B52  90D8               	bcf	status,0,c
  5159   008B54  3764               	rlcf	??___fpclassifyf& (0+255),f,b
  5160   008B56  3765               	rlcf	(??___fpclassifyf+1)& (0+255),f,b
  5161   008B58  3766               	rlcf	(??___fpclassifyf+2)& (0+255),f,b
  5162   008B5A  3767               	rlcf	(??___fpclassifyf+3)& (0+255),f,b
  5163   008B5C  2EE8               	decfsz	wreg,f,c
  5164   008B5E  EFA9  F045         	goto	u6185
  5165   008B62  5164               	movf	??___fpclassifyf& (0+255),w,b
  5166   008B64  1165               	iorwf	(??___fpclassifyf+1)& (0+255),w,b
  5167   008B66  1166               	iorwf	(??___fpclassifyf+2)& (0+255),w,b
  5168   008B68  1167               	iorwf	(??___fpclassifyf+3)& (0+255),w,b
  5169   008B6A  B4D8               	btfsc	status,2,c
  5170   008B6C  EFBA  F045         	goto	u6191
  5171   008B70  EFBD  F045         	goto	u6190
  5172   008B74                     u6191:
  5173   008B74  0E01               	movlw	1
  5174   008B76  EFBE  F045         	goto	u6200
  5175   008B7A                     u6190:
  5176   008B7A  0E00               	movlw	0
  5177   008B7C                     u6200:
  5178   008B7C  6F60               	movwf	?___fpclassifyf& (0+255),b
  5179   008B7E  6B61               	clrf	(?___fpclassifyf+1)& (0+255),b
  5180   008B80  EFC6  F045         	goto	l1016
  5181   008B84                     l4961:
  5182                           
  5183                           ; BSR set to: 0
  5184   008B84  0E00               	movlw	0
  5185   008B86  6F61               	movwf	(?___fpclassifyf+1)& (0+255),b
  5186   008B88  0E04               	movlw	4
  5187   008B8A  6F60               	movwf	?___fpclassifyf& (0+255),b
  5188   008B8C                     l1016:
  5189                           
  5190                           ; BSR set to: 0
  5191   008B8C  0012               	return		;funcret
  5192   008B8E                     __end_of___fpclassifyf:
  5193                           	callstack 0
  5194                           
  5195 ;; *************** function ___fltol *****************
  5196 ;; Defined at:
  5197 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fltol.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  f1              4    0[BANK0 ] int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  exp1            1    9[BANK0 ] unsigned char 
  5202 ;;  sign1           1    8[BANK0 ] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  4    0[BANK0 ] long 
  5205 ;; Registers used:
  5206 ;;		wreg, status,2, status,0
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5212 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5213 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5214 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5215 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5216 ;;Total ram usage:       10 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 2
  5219 ;; This function calls:
  5220 ;;		Nothing
  5221 ;; This function is called by:
  5222 ;;		_efgtoa
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226                           	psect	text11
  5227   008880                     __ptext11:
  5228                           	callstack 0
  5229   008880                     ___fltol:
  5230                           	callstack 24
  5231   008880  0100               	movlb	0	; () banked
  5232   008882  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
  5233   008884  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
  5234   008886  6F69               	movwf	___fltol@exp1& (0+255),b
  5235   008888  5169               	movf	___fltol@exp1& (0+255),w,b
  5236   00888A  A4D8               	btfss	status,2,c
  5237   00888C  EF4A  F044         	goto	u6021
  5238   008890  EF4C  F044         	goto	u6020
  5239   008894                     u6021:
  5240   008894  EF56  F044         	goto	l4885
  5241   008898                     u6020:
  5242   008898                     l4881:
  5243                           
  5244                           ; BSR set to: 0
  5245   008898  0E00               	movlw	0
  5246   00889A  6F60               	movwf	?___fltol& (0+255),b
  5247   00889C  0E00               	movlw	0
  5248   00889E  6F61               	movwf	(?___fltol+1)& (0+255),b
  5249   0088A0  0E00               	movlw	0
  5250   0088A2  6F62               	movwf	(?___fltol+2)& (0+255),b
  5251   0088A4  0E00               	movlw	0
  5252   0088A6  6F63               	movwf	(?___fltol+3)& (0+255),b
  5253   0088A8  EFC3  F044         	goto	l474
  5254   0088AC                     l4885:
  5255                           
  5256                           ; BSR set to: 0
  5257   0088AC  C060  F064         	movff	___fltol@f1,??___fltol
  5258   0088B0  C061  F065         	movff	___fltol@f1+1,??___fltol+1
  5259   0088B4  C062  F066         	movff	___fltol@f1+2,??___fltol+2
  5260   0088B8  C063  F067         	movff	___fltol@f1+3,??___fltol+3
  5261   0088BC  0E20               	movlw	32
  5262   0088BE  EF66  F044         	goto	u6030
  5263   0088C2                     u6035:
  5264   0088C2  90D8               	bcf	status,0,c
  5265   0088C4  3367               	rrcf	(??___fltol+3)& (0+255),f,b
  5266   0088C6  3366               	rrcf	(??___fltol+2)& (0+255),f,b
  5267   0088C8  3365               	rrcf	(??___fltol+1)& (0+255),f,b
  5268   0088CA  3364               	rrcf	??___fltol& (0+255),f,b
  5269   0088CC                     u6030:
  5270   0088CC  2EE8               	decfsz	wreg,f,c
  5271   0088CE  EF61  F044         	goto	u6035
  5272   0088D2  5164               	movf	??___fltol& (0+255),w,b
  5273   0088D4  6F68               	movwf	___fltol@sign1& (0+255),b
  5274   0088D6                     
  5275                           ; BSR set to: 0
  5276   0088D6  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
  5277   0088D8                     
  5278                           ; BSR set to: 0
  5279   0088D8  0EFF               	movlw	255
  5280   0088DA  1760               	andwf	___fltol@f1& (0+255),f,b
  5281   0088DC  0EFF               	movlw	255
  5282   0088DE  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
  5283   0088E0  0EFF               	movlw	255
  5284   0088E2  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
  5285   0088E4  0E00               	movlw	0
  5286   0088E6  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
  5287   0088E8                     
  5288                           ; BSR set to: 0
  5289   0088E8  0E96               	movlw	150
  5290   0088EA  5F69               	subwf	___fltol@exp1& (0+255),f,b
  5291   0088EC                     
  5292                           ; BSR set to: 0
  5293   0088EC  BF69               	btfsc	___fltol@exp1& (0+255),7,b
  5294   0088EE  EF7D  F044         	goto	u6040
  5295   0088F2  EF7B  F044         	goto	u6041
  5296   0088F6                     u6041:
  5297   0088F6  EF93  F044         	goto	l4905
  5298   0088FA                     u6040:
  5299   0088FA                     
  5300                           ; BSR set to: 0
  5301   0088FA  5169               	movf	___fltol@exp1& (0+255),w,b
  5302   0088FC  0A80               	xorlw	128
  5303   0088FE  0F97               	addlw	151
  5304   008900  B0D8               	btfsc	status,0,c
  5305   008902  EF85  F044         	goto	u6051
  5306   008906  EF87  F044         	goto	u6050
  5307   00890A                     u6051:
  5308   00890A  EF89  F044         	goto	l4901
  5309   00890E                     u6050:
  5310   00890E  EF4C  F044         	goto	l4881
  5311   008912                     l4901:
  5312                           
  5313                           ; BSR set to: 0
  5314   008912  90D8               	bcf	status,0,c
  5315   008914  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
  5316   008916  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
  5317   008918  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
  5318   00891A  3360               	rrcf	___fltol@f1& (0+255),f,b
  5319   00891C                     
  5320                           ; BSR set to: 0
  5321   00891C  3F69               	incfsz	___fltol@exp1& (0+255),f,b
  5322   00891E  EF89  F044         	goto	l4901
  5323   008922  EFAB  F044         	goto	l4915
  5324   008926                     l4905:
  5325                           
  5326                           ; BSR set to: 0
  5327   008926  0E1F               	movlw	31
  5328   008928  6569               	cpfsgt	___fltol@exp1& (0+255),b
  5329   00892A  EF99  F044         	goto	u6061
  5330   00892E  EF9B  F044         	goto	u6060
  5331   008932                     u6061:
  5332   008932  EFA3  F044         	goto	l4913
  5333   008936                     u6060:
  5334   008936  EF4C  F044         	goto	l4881
  5335   00893A                     l4911:
  5336                           
  5337                           ; BSR set to: 0
  5338   00893A  90D8               	bcf	status,0,c
  5339   00893C  3760               	rlcf	___fltol@f1& (0+255),f,b
  5340   00893E  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
  5341   008940  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
  5342   008942  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
  5343   008944  0769               	decf	___fltol@exp1& (0+255),f,b
  5344   008946                     l4913:
  5345                           
  5346                           ; BSR set to: 0
  5347   008946  5169               	movf	___fltol@exp1& (0+255),w,b
  5348   008948  A4D8               	btfss	status,2,c
  5349   00894A  EFA9  F044         	goto	u6071
  5350   00894E  EFAB  F044         	goto	u6070
  5351   008952                     u6071:
  5352   008952  EF9D  F044         	goto	l4911
  5353   008956                     u6070:
  5354   008956                     l4915:
  5355                           
  5356                           ; BSR set to: 0
  5357   008956  5168               	movf	___fltol@sign1& (0+255),w,b
  5358   008958  B4D8               	btfsc	status,2,c
  5359   00895A  EFB1  F044         	goto	u6081
  5360   00895E  EFB3  F044         	goto	u6080
  5361   008962                     u6081:
  5362   008962  EFBB  F044         	goto	l4919
  5363   008966                     u6080:
  5364   008966                     
  5365                           ; BSR set to: 0
  5366   008966  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
  5367   008968  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
  5368   00896A  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
  5369   00896C  6D60               	negf	___fltol@f1& (0+255),b
  5370   00896E  0E00               	movlw	0
  5371   008970  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
  5372   008972  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
  5373   008974  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
  5374   008976                     l4919:
  5375                           
  5376                           ; BSR set to: 0
  5377   008976  C060  F060         	movff	___fltol@f1,?___fltol
  5378   00897A  C061  F061         	movff	___fltol@f1+1,?___fltol+1
  5379   00897E  C062  F062         	movff	___fltol@f1+2,?___fltol+2
  5380   008982  C063  F063         	movff	___fltol@f1+3,?___fltol+3
  5381   008986                     l474:
  5382                           
  5383                           ; BSR set to: 0
  5384   008986  0012               	return		;funcret
  5385   008988                     __end_of___fltol:
  5386                           	callstack 0
  5387                           
  5388 ;; *************** function ___flsub *****************
  5389 ;; Defined at:
  5390 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  b               4   39[BANK0 ] long 
  5393 ;;  a               4   43[BANK0 ] long 
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4   39[BANK0 ] long 
  5398 ;; Registers used:
  5399 ;;		wreg, status,2, status,0, cstack
  5400 ;; Tracked objects:
  5401 ;;		On entry : 0/0
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5405 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;Total ram usage:        8 bytes
  5410 ;; Hardware stack levels used: 1
  5411 ;; Hardware stack levels required when called: 3
  5412 ;; This function calls:
  5413 ;;		___fladd
  5414 ;; This function is called by:
  5415 ;;		_efgtoa
  5416 ;; This function uses a non-reentrant model
  5417 ;;
  5418                           
  5419                           	psect	text12
  5420   00931C                     __ptext12:
  5421                           	callstack 0
  5422   00931C                     ___flsub:
  5423                           	callstack 23
  5424   00931C  0E00               	movlw	0
  5425   00931E  0100               	movlb	0	; () banked
  5426   009320  1B8B               	xorwf	___flsub@a& (0+255),f,b
  5427   009322  0E00               	movlw	0
  5428   009324  1B8C               	xorwf	(___flsub@a+1)& (0+255),f,b
  5429   009326  0E00               	movlw	0
  5430   009328  1B8D               	xorwf	(___flsub@a+2)& (0+255),f,b
  5431   00932A  0E80               	movlw	128
  5432   00932C  1B8E               	xorwf	(___flsub@a+3)& (0+255),f,b
  5433   00932E                     
  5434                           ; BSR set to: 0
  5435   00932E  C087  F060         	movff	___flsub@b,___fladd@b
  5436   009332  C088  F061         	movff	___flsub@b+1,___fladd@b+1
  5437   009336  C089  F062         	movff	___flsub@b+2,___fladd@b+2
  5438   00933A  C08A  F063         	movff	___flsub@b+3,___fladd@b+3
  5439   00933E  C08B  F064         	movff	___flsub@a,___fladd@a
  5440   009342  C08C  F065         	movff	___flsub@a+1,___fladd@a+1
  5441   009346  C08D  F066         	movff	___flsub@a+2,___fladd@a+2
  5442   00934A  C08E  F067         	movff	___flsub@a+3,___fladd@a+3
  5443   00934E  EC50  F035         	call	___fladd	;wreg free
  5444   009352  C060  F087         	movff	?___fladd,?___flsub
  5445   009356  C061  F088         	movff	?___fladd+1,?___flsub+1
  5446   00935A  C062  F089         	movff	?___fladd+2,?___flsub+2
  5447   00935E  C063  F08A         	movff	?___fladd+3,?___flsub+3
  5448   009362  0012               	return		;funcret
  5449   009364                     __end_of___flsub:
  5450                           	callstack 0
  5451                           
  5452 ;; *************** function ___fladd *****************
  5453 ;; Defined at:
  5454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;  b               4    0[BANK0 ] long 
  5457 ;;  a               4    4[BANK0 ] long 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  grs             1   15[BANK0 ] unsigned char 
  5460 ;;  bexp            1   14[BANK0 ] unsigned char 
  5461 ;;  aexp            1   13[BANK0 ] unsigned char 
  5462 ;;  signs           1   12[BANK0 ] unsigned char 
  5463 ;; Return value:  Size  Location     Type
  5464 ;;                  4    0[BANK0 ] unsigned char 
  5465 ;; Registers used:
  5466 ;;		wreg, status,2, status,0
  5467 ;; Tracked objects:
  5468 ;;		On entry : 0/0
  5469 ;;		On exit  : 0/0
  5470 ;;		Unchanged: 0/0
  5471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5472 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5473 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5474 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5475 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5476 ;;Total ram usage:       16 bytes
  5477 ;; Hardware stack levels used: 1
  5478 ;; Hardware stack levels required when called: 2
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		___flsub
  5483 ;;		_efgtoa
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text13
  5488   006AA0                     __ptext13:
  5489                           	callstack 0
  5490   006AA0                     ___fladd:
  5491                           	callstack 23
  5492   006AA0  0100               	movlb	0	; () banked
  5493   006AA2  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5494   006AA4  0B80               	andlw	128
  5495   006AA6  6F6C               	movwf	___fladd@signs& (0+255),b
  5496   006AA8  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5497   006AAA  2563               	addwf	(___fladd@b+3)& (0+255),w,b
  5498   006AAC  6F6E               	movwf	___fladd@bexp& (0+255),b
  5499   006AAE                     
  5500                           ; BSR set to: 0
  5501   006AAE  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  5502   006AB0  EF5C  F035         	goto	u4991
  5503   006AB4  EF5E  F035         	goto	u4990
  5504   006AB8                     u4991:
  5505   006AB8  EF5F  F035         	goto	l4287
  5506   006ABC                     u4990:
  5507   006ABC                     
  5508                           ; BSR set to: 0
  5509   006ABC  816E               	bsf	___fladd@bexp& (0+255),0,b
  5510   006ABE                     l4287:
  5511                           
  5512                           ; BSR set to: 0
  5513   006ABE  516E               	movf	___fladd@bexp& (0+255),w,b
  5514   006AC0  B4D8               	btfsc	status,2,c
  5515   006AC2  EF65  F035         	goto	u5001
  5516   006AC6  EF67  F035         	goto	u5000
  5517   006ACA                     u5001:
  5518   006ACA  EF7B  F035         	goto	l4297
  5519   006ACE                     u5000:
  5520   006ACE                     
  5521                           ; BSR set to: 0
  5522   006ACE  296E               	incf	___fladd@bexp& (0+255),w,b
  5523   006AD0  A4D8               	btfss	status,2,c
  5524   006AD2  EF6D  F035         	goto	u5011
  5525   006AD6  EF6F  F035         	goto	u5010
  5526   006ADA                     u5011:
  5527   006ADA  EF77  F035         	goto	l4293
  5528   006ADE                     u5010:
  5529   006ADE                     
  5530                           ; BSR set to: 0
  5531   006ADE  0E00               	movlw	0
  5532   006AE0  6F60               	movwf	___fladd@b& (0+255),b
  5533   006AE2  0E00               	movlw	0
  5534   006AE4  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5535   006AE6  0E00               	movlw	0
  5536   006AE8  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5537   006AEA  0E00               	movlw	0
  5538   006AEC  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5539   006AEE                     l4293:
  5540                           
  5541                           ; BSR set to: 0
  5542   006AEE  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  5543   006AF0                     
  5544                           ; BSR set to: 0
  5545   006AF0  6B63               	clrf	(___fladd@b+3)& (0+255),b
  5546   006AF2  EF83  F035         	goto	l4299
  5547   006AF6                     l4297:
  5548                           
  5549                           ; BSR set to: 0
  5550   006AF6  0E00               	movlw	0
  5551   006AF8  6F60               	movwf	___fladd@b& (0+255),b
  5552   006AFA  0E00               	movlw	0
  5553   006AFC  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5554   006AFE  0E00               	movlw	0
  5555   006B00  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5556   006B02  0E00               	movlw	0
  5557   006B04  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5558   006B06                     l4299:
  5559                           
  5560                           ; BSR set to: 0
  5561   006B06  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5562   006B08  0B80               	andlw	128
  5563   006B0A  6F6D               	movwf	___fladd@aexp& (0+255),b
  5564   006B0C                     
  5565                           ; BSR set to: 0
  5566   006B0C  516C               	movf	___fladd@signs& (0+255),w,b
  5567   006B0E  196D               	xorwf	___fladd@aexp& (0+255),w,b
  5568   006B10  B4D8               	btfsc	status,2,c
  5569   006B12  EF8D  F035         	goto	u5021
  5570   006B16  EF8F  F035         	goto	u5020
  5571   006B1A                     u5021:
  5572   006B1A  EF90  F035         	goto	l4305
  5573   006B1E                     u5020:
  5574   006B1E                     
  5575                           ; BSR set to: 0
  5576   006B1E  8D6C               	bsf	___fladd@signs& (0+255),6,b
  5577   006B20                     l4305:
  5578                           
  5579                           ; BSR set to: 0
  5580   006B20  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5581   006B22  2567               	addwf	(___fladd@a+3)& (0+255),w,b
  5582   006B24  6F6D               	movwf	___fladd@aexp& (0+255),b
  5583   006B26                     
  5584                           ; BSR set to: 0
  5585   006B26  AF66               	btfss	(___fladd@a+2)& (0+255),7,b
  5586   006B28  EF98  F035         	goto	u5031
  5587   006B2C  EF9A  F035         	goto	u5030
  5588   006B30                     u5031:
  5589   006B30  EF9B  F035         	goto	l4311
  5590   006B34                     u5030:
  5591   006B34                     
  5592                           ; BSR set to: 0
  5593   006B34  816D               	bsf	___fladd@aexp& (0+255),0,b
  5594   006B36                     l4311:
  5595                           
  5596                           ; BSR set to: 0
  5597   006B36  516D               	movf	___fladd@aexp& (0+255),w,b
  5598   006B38  B4D8               	btfsc	status,2,c
  5599   006B3A  EFA1  F035         	goto	u5041
  5600   006B3E  EFA3  F035         	goto	u5040
  5601   006B42                     u5041:
  5602   006B42  EFB7  F035         	goto	l4321
  5603   006B46                     u5040:
  5604   006B46                     
  5605                           ; BSR set to: 0
  5606   006B46  296D               	incf	___fladd@aexp& (0+255),w,b
  5607   006B48  A4D8               	btfss	status,2,c
  5608   006B4A  EFA9  F035         	goto	u5051
  5609   006B4E  EFAB  F035         	goto	u5050
  5610   006B52                     u5051:
  5611   006B52  EFB3  F035         	goto	l4317
  5612   006B56                     u5050:
  5613   006B56                     
  5614                           ; BSR set to: 0
  5615   006B56  0E00               	movlw	0
  5616   006B58  6F64               	movwf	___fladd@a& (0+255),b
  5617   006B5A  0E00               	movlw	0
  5618   006B5C  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5619   006B5E  0E00               	movlw	0
  5620   006B60  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5621   006B62  0E00               	movlw	0
  5622   006B64  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5623   006B66                     l4317:
  5624                           
  5625                           ; BSR set to: 0
  5626   006B66  8F66               	bsf	(___fladd@a+2)& (0+255),7,b
  5627   006B68                     
  5628                           ; BSR set to: 0
  5629   006B68  6B67               	clrf	(___fladd@a+3)& (0+255),b
  5630   006B6A  EFBF  F035         	goto	l4323
  5631   006B6E                     l4321:
  5632                           
  5633                           ; BSR set to: 0
  5634   006B6E  0E00               	movlw	0
  5635   006B70  6F64               	movwf	___fladd@a& (0+255),b
  5636   006B72  0E00               	movlw	0
  5637   006B74  6F65               	movwf	(___fladd@a+1)& (0+255),b
  5638   006B76  0E00               	movlw	0
  5639   006B78  6F66               	movwf	(___fladd@a+2)& (0+255),b
  5640   006B7A  0E00               	movlw	0
  5641   006B7C  6F67               	movwf	(___fladd@a+3)& (0+255),b
  5642   006B7E                     l4323:
  5643                           
  5644                           ; BSR set to: 0
  5645   006B7E  516E               	movf	___fladd@bexp& (0+255),w,b
  5646   006B80  5D6D               	subwf	___fladd@aexp& (0+255),w,b
  5647   006B82  B0D8               	btfsc	status,0,c
  5648   006B84  EFC6  F035         	goto	u5061
  5649   006B88  EFC8  F035         	goto	u5060
  5650   006B8C                     u5061:
  5651   006B8C  EFEF  F035         	goto	l4359
  5652   006B90                     u5060:
  5653   006B90                     
  5654                           ; BSR set to: 0
  5655   006B90  AD6C               	btfss	___fladd@signs& (0+255),6,b
  5656   006B92  EFCD  F035         	goto	u5071
  5657   006B96  EFCF  F035         	goto	u5070
  5658   006B9A                     u5071:
  5659   006B9A  EFD1  F035         	goto	l4329
  5660   006B9E                     u5070:
  5661   006B9E                     
  5662                           ; BSR set to: 0
  5663   006B9E  0E80               	movlw	128
  5664   006BA0  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5665   006BA2                     l4329:
  5666                           
  5667                           ; BSR set to: 0
  5668   006BA2  C06E  F06F         	movff	___fladd@bexp,___fladd@grs
  5669   006BA6                     
  5670                           ; BSR set to: 0
  5671   006BA6  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5672   006BAA                     
  5673                           ; BSR set to: 0
  5674   006BAA  C06F  F06D         	movff	___fladd@grs,___fladd@aexp
  5675   006BAE                     
  5676                           ; BSR set to: 0
  5677   006BAE  C060  F06F         	movff	___fladd@b,___fladd@grs
  5678   006BB2                     
  5679                           ; BSR set to: 0
  5680   006BB2  C064  F060         	movff	___fladd@a,___fladd@b
  5681   006BB6                     
  5682                           ; BSR set to: 0
  5683   006BB6  C06F  F064         	movff	___fladd@grs,___fladd@a
  5684   006BBA                     
  5685                           ; BSR set to: 0
  5686   006BBA  C061  F06F         	movff	___fladd@b+1,___fladd@grs
  5687   006BBE                     
  5688                           ; BSR set to: 0
  5689   006BBE  C065  F061         	movff	___fladd@a+1,___fladd@b+1
  5690   006BC2                     
  5691                           ; BSR set to: 0
  5692   006BC2  C06F  F065         	movff	___fladd@grs,___fladd@a+1
  5693   006BC6                     
  5694                           ; BSR set to: 0
  5695   006BC6  C062  F06F         	movff	___fladd@b+2,___fladd@grs
  5696   006BCA                     
  5697                           ; BSR set to: 0
  5698   006BCA  C066  F062         	movff	___fladd@a+2,___fladd@b+2
  5699   006BCE                     
  5700                           ; BSR set to: 0
  5701   006BCE  C06F  F066         	movff	___fladd@grs,___fladd@a+2
  5702   006BD2                     
  5703                           ; BSR set to: 0
  5704   006BD2  C063  F06F         	movff	___fladd@b+3,___fladd@grs
  5705   006BD6                     
  5706                           ; BSR set to: 0
  5707   006BD6  C067  F063         	movff	___fladd@a+3,___fladd@b+3
  5708   006BDA                     
  5709                           ; BSR set to: 0
  5710   006BDA  C06F  F067         	movff	___fladd@grs,___fladd@a+3
  5711   006BDE                     l4359:
  5712                           
  5713                           ; BSR set to: 0
  5714   006BDE  6B6F               	clrf	___fladd@grs& (0+255),b
  5715   006BE0  516E               	movf	___fladd@bexp& (0+255),w,b
  5716   006BE2  C06D  F068         	movff	___fladd@aexp,??___fladd
  5717   006BE6  6B69               	clrf	(??___fladd+1)& (0+255),b
  5718   006BE8  5F68               	subwf	??___fladd& (0+255),f,b
  5719   006BEA  0E00               	movlw	0
  5720   006BEC  5B69               	subwfb	(??___fladd+1)& (0+255),f,b
  5721   006BEE  BF69               	btfsc	(??___fladd+1)& (0+255),7,b
  5722   006BF0  EF03  F036         	goto	u5081
  5723   006BF4  5169               	movf	(??___fladd+1)& (0+255),w,b
  5724   006BF6  E109               	bnz	u5080
  5725   006BF8  0E1A               	movlw	26
  5726   006BFA  5D68               	subwf	??___fladd& (0+255),w,b
  5727   006BFC  A0D8               	btfss	status,0,c
  5728   006BFE  EF03  F036         	goto	u5081
  5729   006C02  EF05  F036         	goto	u5080
  5730   006C06                     u5081:
  5731   006C06  EF3C  F036         	goto	l706
  5732   006C0A                     u5080:
  5733   006C0A                     
  5734                           ; BSR set to: 0
  5735   006C0A  5160               	movf	___fladd@b& (0+255),w,b
  5736   006C0C  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5737   006C0E  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5738   006C10  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5739   006C12  A4D8               	btfss	status,2,c
  5740   006C14  EF0E  F036         	goto	u5091
  5741   006C18  EF11  F036         	goto	u5090
  5742   006C1C                     u5091:
  5743   006C1C  0E01               	movlw	1
  5744   006C1E  EF12  F036         	goto	u5100
  5745   006C22                     u5090:
  5746   006C22  0E00               	movlw	0
  5747   006C24                     u5100:
  5748   006C24  6F6F               	movwf	___fladd@grs& (0+255),b
  5749   006C26                     
  5750                           ; BSR set to: 0
  5751   006C26  0E00               	movlw	0
  5752   006C28  6F60               	movwf	___fladd@b& (0+255),b
  5753   006C2A  0E00               	movlw	0
  5754   006C2C  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5755   006C2E  0E00               	movlw	0
  5756   006C30  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5757   006C32  0E00               	movlw	0
  5758   006C34  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5759   006C36                     
  5760                           ; BSR set to: 0
  5761   006C36  C06D  F06E         	movff	___fladd@aexp,___fladd@bexp
  5762   006C3A  EF45  F036         	goto	l705
  5763   006C3E                     l707:
  5764                           
  5765                           ; BSR set to: 0
  5766   006C3E  A16F               	btfss	___fladd@grs& (0+255),0,b
  5767   006C40  EF24  F036         	goto	u5111
  5768   006C44  EF26  F036         	goto	u5110
  5769   006C48                     u5111:
  5770   006C48  EF2C  F036         	goto	l4369
  5771   006C4C                     u5110:
  5772   006C4C                     
  5773                           ; BSR set to: 0
  5774   006C4C  90D8               	bcf	status,0,c
  5775   006C4E  316F               	rrcf	___fladd@grs& (0+255),w,b
  5776   006C50  0901               	iorlw	1
  5777   006C52  6F6F               	movwf	___fladd@grs& (0+255),b
  5778   006C54  EF2E  F036         	goto	l4371
  5779   006C58                     l4369:
  5780                           
  5781                           ; BSR set to: 0
  5782   006C58  90D8               	bcf	status,0,c
  5783   006C5A  336F               	rrcf	___fladd@grs& (0+255),f,b
  5784   006C5C                     l4371:
  5785                           
  5786                           ; BSR set to: 0
  5787   006C5C  A160               	btfss	___fladd@b& (0+255),0,b
  5788   006C5E  EF33  F036         	goto	u5121
  5789   006C62  EF35  F036         	goto	u5120
  5790   006C66                     u5121:
  5791   006C66  EF36  F036         	goto	l4375
  5792   006C6A                     u5120:
  5793   006C6A                     
  5794                           ; BSR set to: 0
  5795   006C6A  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5796   006C6C                     l4375:
  5797                           
  5798                           ; BSR set to: 0
  5799   006C6C  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5800   006C6E  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5801   006C70  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5802   006C72  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5803   006C74  3360               	rrcf	___fladd@b& (0+255),f,b
  5804   006C76                     
  5805                           ; BSR set to: 0
  5806   006C76  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5807   006C78                     l706:
  5808                           
  5809                           ; BSR set to: 0
  5810   006C78  516D               	movf	___fladd@aexp& (0+255),w,b
  5811   006C7A  5D6E               	subwf	___fladd@bexp& (0+255),w,b
  5812   006C7C  A0D8               	btfss	status,0,c
  5813   006C7E  EF43  F036         	goto	u5131
  5814   006C82  EF45  F036         	goto	u5130
  5815   006C86                     u5131:
  5816   006C86  EF1F  F036         	goto	l707
  5817   006C8A                     u5130:
  5818   006C8A                     l705:
  5819                           
  5820                           ; BSR set to: 0
  5821   006C8A  BD6C               	btfsc	___fladd@signs& (0+255),6,b
  5822   006C8C  EF4A  F036         	goto	u5141
  5823   006C90  EF4C  F036         	goto	u5140
  5824   006C94                     u5141:
  5825   006C94  EF8C  F036         	goto	l4403
  5826   006C98                     u5140:
  5827   006C98                     
  5828                           ; BSR set to: 0
  5829   006C98  516E               	movf	___fladd@bexp& (0+255),w,b
  5830   006C9A  A4D8               	btfss	status,2,c
  5831   006C9C  EF52  F036         	goto	u5151
  5832   006CA0  EF54  F036         	goto	u5150
  5833   006CA4                     u5151:
  5834   006CA4  EF5E  F036         	goto	l4385
  5835   006CA8                     u5150:
  5836   006CA8                     
  5837                           ; BSR set to: 0
  5838   006CA8  0E00               	movlw	0
  5839   006CAA  6F60               	movwf	?___fladd& (0+255),b
  5840   006CAC  0E00               	movlw	0
  5841   006CAE  6F61               	movwf	(?___fladd+1)& (0+255),b
  5842   006CB0  0E00               	movlw	0
  5843   006CB2  6F62               	movwf	(?___fladd+2)& (0+255),b
  5844   006CB4  0E00               	movlw	0
  5845   006CB6  6F63               	movwf	(?___fladd+3)& (0+255),b
  5846   006CB8  EFAB  F037         	goto	l714
  5847   006CBC                     l4385:
  5848                           
  5849                           ; BSR set to: 0
  5850   006CBC  5164               	movf	___fladd@a& (0+255),w,b
  5851   006CBE  2760               	addwf	___fladd@b& (0+255),f,b
  5852   006CC0  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5853   006CC2  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5854   006CC4  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5855   006CC6  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5856   006CC8  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5857   006CCA  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5858   006CCC                     
  5859                           ; BSR set to: 0
  5860   006CCC  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  5861   006CCE  EF6B  F036         	goto	u5161
  5862   006CD2  EF6D  F036         	goto	u5160
  5863   006CD6                     u5161:
  5864   006CD6  EF19  F037         	goto	l719
  5865   006CDA                     u5160:
  5866   006CDA                     
  5867                           ; BSR set to: 0
  5868   006CDA  A16F               	btfss	___fladd@grs& (0+255),0,b
  5869   006CDC  EF72  F036         	goto	u5171
  5870   006CE0  EF74  F036         	goto	u5170
  5871   006CE4                     u5171:
  5872   006CE4  EF7A  F036         	goto	l4393
  5873   006CE8                     u5170:
  5874   006CE8                     
  5875                           ; BSR set to: 0
  5876   006CE8  90D8               	bcf	status,0,c
  5877   006CEA  316F               	rrcf	___fladd@grs& (0+255),w,b
  5878   006CEC  0901               	iorlw	1
  5879   006CEE  6F6F               	movwf	___fladd@grs& (0+255),b
  5880   006CF0  EF7C  F036         	goto	l4395
  5881   006CF4                     l4393:
  5882                           
  5883                           ; BSR set to: 0
  5884   006CF4  90D8               	bcf	status,0,c
  5885   006CF6  336F               	rrcf	___fladd@grs& (0+255),f,b
  5886   006CF8                     l4395:
  5887                           
  5888                           ; BSR set to: 0
  5889   006CF8  A160               	btfss	___fladd@b& (0+255),0,b
  5890   006CFA  EF81  F036         	goto	u5181
  5891   006CFE  EF83  F036         	goto	u5180
  5892   006D02                     u5181:
  5893   006D02  EF84  F036         	goto	l4399
  5894   006D06                     u5180:
  5895   006D06                     
  5896                           ; BSR set to: 0
  5897   006D06  8F6F               	bsf	___fladd@grs& (0+255),7,b
  5898   006D08                     l4399:
  5899                           
  5900                           ; BSR set to: 0
  5901   006D08  3563               	rlcf	(___fladd@b+3)& (0+255),w,b
  5902   006D0A  3363               	rrcf	(___fladd@b+3)& (0+255),f,b
  5903   006D0C  3362               	rrcf	(___fladd@b+2)& (0+255),f,b
  5904   006D0E  3361               	rrcf	(___fladd@b+1)& (0+255),f,b
  5905   006D10  3360               	rrcf	___fladd@b& (0+255),f,b
  5906   006D12                     
  5907                           ; BSR set to: 0
  5908   006D12  2B6E               	incf	___fladd@bexp& (0+255),f,b
  5909   006D14  EF19  F037         	goto	l719
  5910   006D18                     l4403:
  5911                           
  5912                           ; BSR set to: 0
  5913   006D18  5164               	movf	___fladd@a& (0+255),w,b
  5914   006D1A  5D60               	subwf	___fladd@b& (0+255),w,b
  5915   006D1C  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5916   006D1E  5961               	subwfb	(___fladd@b+1)& (0+255),w,b
  5917   006D20  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5918   006D22  5962               	subwfb	(___fladd@b+2)& (0+255),w,b
  5919   006D24  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5920   006D26  0A80               	xorlw	128
  5921   006D28  6F68               	movwf	??___fladd& (0+255),b
  5922   006D2A  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5923   006D2C  0A80               	xorlw	128
  5924   006D2E  5968               	subwfb	??___fladd& (0+255),w,b
  5925   006D30  B0D8               	btfsc	status,0,c
  5926   006D32  EF9D  F036         	goto	u5191
  5927   006D36  EF9F  F036         	goto	u5190
  5928   006D3A                     u5191:
  5929   006D3A  EFCA  F036         	goto	l4413
  5930   006D3E                     u5190:
  5931   006D3E                     
  5932                           ; BSR set to: 0
  5933   006D3E  5160               	movf	___fladd@b& (0+255),w,b
  5934   006D40  5D64               	subwf	___fladd@a& (0+255),w,b
  5935   006D42  6F68               	movwf	??___fladd& (0+255),b
  5936   006D44  5161               	movf	(___fladd@b+1)& (0+255),w,b
  5937   006D46  5965               	subwfb	(___fladd@a+1)& (0+255),w,b
  5938   006D48  6F69               	movwf	(??___fladd+1)& (0+255),b
  5939   006D4A  5162               	movf	(___fladd@b+2)& (0+255),w,b
  5940   006D4C  5966               	subwfb	(___fladd@a+2)& (0+255),w,b
  5941   006D4E  6F6A               	movwf	(??___fladd+2)& (0+255),b
  5942   006D50  5163               	movf	(___fladd@b+3)& (0+255),w,b
  5943   006D52  5967               	subwfb	(___fladd@a+3)& (0+255),w,b
  5944   006D54  6F6B               	movwf	(??___fladd+3)& (0+255),b
  5945   006D56  0EFF               	movlw	255
  5946   006D58  2568               	addwf	??___fladd& (0+255),w,b
  5947   006D5A  6F60               	movwf	___fladd@b& (0+255),b
  5948   006D5C  0EFF               	movlw	255
  5949   006D5E  2169               	addwfc	(??___fladd+1)& (0+255),w,b
  5950   006D60  6F61               	movwf	(___fladd@b+1)& (0+255),b
  5951   006D62  0EFF               	movlw	255
  5952   006D64  216A               	addwfc	(??___fladd+2)& (0+255),w,b
  5953   006D66  6F62               	movwf	(___fladd@b+2)& (0+255),b
  5954   006D68  0EFF               	movlw	255
  5955   006D6A  216B               	addwfc	(??___fladd+3)& (0+255),w,b
  5956   006D6C  6F63               	movwf	(___fladd@b+3)& (0+255),b
  5957   006D6E  0E80               	movlw	128
  5958   006D70  1B6C               	xorwf	___fladd@signs& (0+255),f,b
  5959   006D72                     
  5960                           ; BSR set to: 0
  5961   006D72  6D6F               	negf	___fladd@grs& (0+255),b
  5962   006D74                     
  5963                           ; BSR set to: 0
  5964   006D74  516F               	movf	___fladd@grs& (0+255),w,b
  5965   006D76  A4D8               	btfss	status,2,c
  5966   006D78  EFC0  F036         	goto	u5201
  5967   006D7C  EFC2  F036         	goto	u5200
  5968   006D80                     u5201:
  5969   006D80  EFD2  F036         	goto	l722
  5970   006D84                     u5200:
  5971   006D84                     
  5972                           ; BSR set to: 0
  5973   006D84  0E01               	movlw	1
  5974   006D86  2760               	addwf	___fladd@b& (0+255),f,b
  5975   006D88  0E00               	movlw	0
  5976   006D8A  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  5977   006D8C  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  5978   006D8E  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  5979   006D90  EFD2  F036         	goto	l722
  5980   006D94                     l4413:
  5981                           
  5982                           ; BSR set to: 0
  5983   006D94  5164               	movf	___fladd@a& (0+255),w,b
  5984   006D96  5F60               	subwf	___fladd@b& (0+255),f,b
  5985   006D98  5165               	movf	(___fladd@a+1)& (0+255),w,b
  5986   006D9A  5B61               	subwfb	(___fladd@b+1)& (0+255),f,b
  5987   006D9C  5166               	movf	(___fladd@a+2)& (0+255),w,b
  5988   006D9E  5B62               	subwfb	(___fladd@b+2)& (0+255),f,b
  5989   006DA0  5167               	movf	(___fladd@a+3)& (0+255),w,b
  5990   006DA2  5B63               	subwfb	(___fladd@b+3)& (0+255),f,b
  5991   006DA4                     l722:
  5992                           
  5993                           ; BSR set to: 0
  5994   006DA4  5160               	movf	___fladd@b& (0+255),w,b
  5995   006DA6  1161               	iorwf	(___fladd@b+1)& (0+255),w,b
  5996   006DA8  1162               	iorwf	(___fladd@b+2)& (0+255),w,b
  5997   006DAA  1163               	iorwf	(___fladd@b+3)& (0+255),w,b
  5998   006DAC  A4D8               	btfss	status,2,c
  5999   006DAE  EFDB  F036         	goto	u5211
  6000   006DB2  EFDD  F036         	goto	u5210
  6001   006DB6                     u5211:
  6002   006DB6  EF12  F037         	goto	l4437
  6003   006DBA                     u5210:
  6004   006DBA                     
  6005                           ; BSR set to: 0
  6006   006DBA  516F               	movf	___fladd@grs& (0+255),w,b
  6007   006DBC  A4D8               	btfss	status,2,c
  6008   006DBE  EFE3  F036         	goto	u5221
  6009   006DC2  EFE5  F036         	goto	u5220
  6010   006DC6                     u5221:
  6011   006DC6  EF12  F037         	goto	l4437
  6012   006DCA                     u5220:
  6013   006DCA                     
  6014                           ; BSR set to: 0
  6015   006DCA  0E00               	movlw	0
  6016   006DCC  6F60               	movwf	?___fladd& (0+255),b
  6017   006DCE  0E00               	movlw	0
  6018   006DD0  6F61               	movwf	(?___fladd+1)& (0+255),b
  6019   006DD2  0E00               	movlw	0
  6020   006DD4  6F62               	movwf	(?___fladd+2)& (0+255),b
  6021   006DD6  0E00               	movlw	0
  6022   006DD8  6F63               	movwf	(?___fladd+3)& (0+255),b
  6023   006DDA  EFAB  F037         	goto	l714
  6024   006DDE                     l4421:
  6025                           
  6026                           ; BSR set to: 0
  6027   006DDE  90D8               	bcf	status,0,c
  6028   006DE0  3760               	rlcf	___fladd@b& (0+255),f,b
  6029   006DE2  3761               	rlcf	(___fladd@b+1)& (0+255),f,b
  6030   006DE4  3762               	rlcf	(___fladd@b+2)& (0+255),f,b
  6031   006DE6  3763               	rlcf	(___fladd@b+3)& (0+255),f,b
  6032   006DE8                     
  6033                           ; BSR set to: 0
  6034   006DE8  AF6F               	btfss	___fladd@grs& (0+255),7,b
  6035   006DEA  EFF9  F036         	goto	u5231
  6036   006DEE  EFFB  F036         	goto	u5230
  6037   006DF2                     u5231:
  6038   006DF2  EFFC  F036         	goto	l4427
  6039   006DF6                     u5230:
  6040   006DF6                     
  6041                           ; BSR set to: 0
  6042   006DF6  8160               	bsf	___fladd@b& (0+255),0,b
  6043   006DF8                     l4427:
  6044                           
  6045                           ; BSR set to: 0
  6046   006DF8  A16F               	btfss	___fladd@grs& (0+255),0,b
  6047   006DFA  EF01  F037         	goto	u5241
  6048   006DFE  EF03  F037         	goto	u5240
  6049   006E02                     u5241:
  6050   006E02  EF07  F037         	goto	l4431
  6051   006E06                     u5240:
  6052   006E06                     
  6053                           ; BSR set to: 0
  6054   006E06  80D8               	bsf	status,0,c
  6055   006E08  376F               	rlcf	___fladd@grs& (0+255),f,b
  6056   006E0A  EF09  F037         	goto	l4433
  6057   006E0E                     l4431:
  6058                           
  6059                           ; BSR set to: 0
  6060   006E0E  90D8               	bcf	status,0,c
  6061   006E10  376F               	rlcf	___fladd@grs& (0+255),f,b
  6062   006E12                     l4433:
  6063                           
  6064                           ; BSR set to: 0
  6065   006E12  516E               	movf	___fladd@bexp& (0+255),w,b
  6066   006E14  B4D8               	btfsc	status,2,c
  6067   006E16  EF0F  F037         	goto	u5251
  6068   006E1A  EF11  F037         	goto	u5250
  6069   006E1E                     u5251:
  6070   006E1E  EF12  F037         	goto	l4437
  6071   006E22                     u5250:
  6072   006E22                     
  6073                           ; BSR set to: 0
  6074   006E22  076E               	decf	___fladd@bexp& (0+255),f,b
  6075   006E24                     l4437:
  6076                           
  6077                           ; BSR set to: 0
  6078   006E24  AF62               	btfss	(___fladd@b+2)& (0+255),7,b
  6079   006E26  EF17  F037         	goto	u5261
  6080   006E2A  EF19  F037         	goto	u5260
  6081   006E2E                     u5261:
  6082   006E2E  EFEF  F036         	goto	l4421
  6083   006E32                     u5260:
  6084   006E32                     l719:
  6085                           
  6086                           ; BSR set to: 0
  6087   006E32  6B6D               	clrf	___fladd@aexp& (0+255),b
  6088   006E34  AF6F               	btfss	___fladd@grs& (0+255),7,b
  6089   006E36  EF1F  F037         	goto	u5271
  6090   006E3A  EF21  F037         	goto	u5270
  6091   006E3E                     u5271:
  6092   006E3E  EF39  F037         	goto	l731
  6093   006E42                     u5270:
  6094   006E42                     
  6095                           ; BSR set to: 0
  6096   006E42  C06F  F068         	movff	___fladd@grs,??___fladd
  6097   006E46  0E7F               	movlw	127
  6098   006E48  1768               	andwf	??___fladd& (0+255),f,b
  6099   006E4A  B4D8               	btfsc	status,2,c
  6100   006E4C  EF2A  F037         	goto	u5281
  6101   006E50  EF2C  F037         	goto	u5280
  6102   006E54                     u5281:
  6103   006E54  EF30  F037         	goto	l732
  6104   006E58                     u5280:
  6105   006E58                     l4441:
  6106                           
  6107                           ; BSR set to: 0
  6108   006E58  0E01               	movlw	1
  6109   006E5A  6F6D               	movwf	___fladd@aexp& (0+255),b
  6110   006E5C  EF39  F037         	goto	l731
  6111   006E60                     l732:
  6112                           
  6113                           ; BSR set to: 0
  6114   006E60  A160               	btfss	___fladd@b& (0+255),0,b
  6115   006E62  EF35  F037         	goto	u5291
  6116   006E66  EF37  F037         	goto	u5290
  6117   006E6A                     u5291:
  6118   006E6A  EF39  F037         	goto	l731
  6119   006E6E                     u5290:
  6120   006E6E  EF2C  F037         	goto	l4441
  6121   006E72                     l731:
  6122                           
  6123                           ; BSR set to: 0
  6124   006E72  516D               	movf	___fladd@aexp& (0+255),w,b
  6125   006E74  B4D8               	btfsc	status,2,c
  6126   006E76  EF3F  F037         	goto	u5301
  6127   006E7A  EF41  F037         	goto	u5300
  6128   006E7E                     u5301:
  6129   006E7E  EF6C  F037         	goto	l4453
  6130   006E82                     u5300:
  6131   006E82                     
  6132                           ; BSR set to: 0
  6133   006E82  0E01               	movlw	1
  6134   006E84  2760               	addwf	___fladd@b& (0+255),f,b
  6135   006E86  0E00               	movlw	0
  6136   006E88  2361               	addwfc	(___fladd@b+1)& (0+255),f,b
  6137   006E8A  2362               	addwfc	(___fladd@b+2)& (0+255),f,b
  6138   006E8C  2363               	addwfc	(___fladd@b+3)& (0+255),f,b
  6139   006E8E                     
  6140                           ; BSR set to: 0
  6141   006E8E  A163               	btfss	(___fladd@b+3)& (0+255),0,b
  6142   006E90  EF4C  F037         	goto	u5311
  6143   006E94  EF4E  F037         	goto	u5310
  6144   006E98                     u5311:
  6145   006E98  EF6C  F037         	goto	l4453
  6146   006E9C                     u5310:
  6147   006E9C                     
  6148                           ; BSR set to: 0
  6149   006E9C  C060  F068         	movff	___fladd@b,??___fladd
  6150   006EA0  C061  F069         	movff	___fladd@b+1,??___fladd+1
  6151   006EA4  C062  F06A         	movff	___fladd@b+2,??___fladd+2
  6152   006EA8  C063  F06B         	movff	___fladd@b+3,??___fladd+3
  6153   006EAC  356B               	rlcf	(??___fladd+3)& (0+255),w,b
  6154   006EAE  336B               	rrcf	(??___fladd+3)& (0+255),f,b
  6155   006EB0  336A               	rrcf	(??___fladd+2)& (0+255),f,b
  6156   006EB2  3369               	rrcf	(??___fladd+1)& (0+255),f,b
  6157   006EB4  3368               	rrcf	??___fladd& (0+255),f,b
  6158   006EB6  C068  F060         	movff	??___fladd,___fladd@b
  6159   006EBA  C069  F061         	movff	??___fladd+1,___fladd@b+1
  6160   006EBE  C06A  F062         	movff	??___fladd+2,___fladd@b+2
  6161   006EC2  C06B  F063         	movff	??___fladd+3,___fladd@b+3
  6162   006EC6  296E               	incf	___fladd@bexp& (0+255),w,b
  6163   006EC8  B4D8               	btfsc	status,2,c
  6164   006ECA  EF69  F037         	goto	u5321
  6165   006ECE  EF6B  F037         	goto	u5320
  6166   006ED2                     u5321:
  6167   006ED2  EF6C  F037         	goto	l4453
  6168   006ED6                     u5320:
  6169   006ED6                     
  6170                           ; BSR set to: 0
  6171   006ED6  2B6E               	incf	___fladd@bexp& (0+255),f,b
  6172   006ED8                     l4453:
  6173                           
  6174                           ; BSR set to: 0
  6175   006ED8  296E               	incf	___fladd@bexp& (0+255),w,b
  6176   006EDA  B4D8               	btfsc	status,2,c
  6177   006EDC  EF72  F037         	goto	u5331
  6178   006EE0  EF74  F037         	goto	u5330
  6179   006EE4                     u5331:
  6180   006EE4  EF7C  F037         	goto	l4457
  6181   006EE8                     u5330:
  6182   006EE8                     
  6183                           ; BSR set to: 0
  6184   006EE8  516E               	movf	___fladd@bexp& (0+255),w,b
  6185   006EEA  A4D8               	btfss	status,2,c
  6186   006EEC  EF7A  F037         	goto	u5341
  6187   006EF0  EF7C  F037         	goto	u5340
  6188   006EF4                     u5341:
  6189   006EF4  EF8D  F037         	goto	l738
  6190   006EF8                     u5340:
  6191   006EF8                     l4457:
  6192                           
  6193                           ; BSR set to: 0
  6194   006EF8  0E00               	movlw	0
  6195   006EFA  6F60               	movwf	___fladd@b& (0+255),b
  6196   006EFC  0E00               	movlw	0
  6197   006EFE  6F61               	movwf	(___fladd@b+1)& (0+255),b
  6198   006F00  0E00               	movlw	0
  6199   006F02  6F62               	movwf	(___fladd@b+2)& (0+255),b
  6200   006F04  0E00               	movlw	0
  6201   006F06  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6202   006F08  516E               	movf	___fladd@bexp& (0+255),w,b
  6203   006F0A  A4D8               	btfss	status,2,c
  6204   006F0C  EF8A  F037         	goto	u5351
  6205   006F10  EF8C  F037         	goto	u5350
  6206   006F14                     u5351:
  6207   006F14  EF8D  F037         	goto	l738
  6208   006F18                     u5350:
  6209   006F18                     
  6210                           ; BSR set to: 0
  6211   006F18  6B6C               	clrf	___fladd@signs& (0+255),b
  6212   006F1A                     l738:
  6213                           
  6214                           ; BSR set to: 0
  6215   006F1A  A16E               	btfss	___fladd@bexp& (0+255),0,b
  6216   006F1C  EF92  F037         	goto	u5361
  6217   006F20  EF94  F037         	goto	u5360
  6218   006F24                     u5361:
  6219   006F24  EF97  F037         	goto	l4463
  6220   006F28                     u5360:
  6221   006F28                     
  6222                           ; BSR set to: 0
  6223   006F28  8F62               	bsf	(___fladd@b+2)& (0+255),7,b
  6224   006F2A  EF98  F037         	goto	l4465
  6225   006F2E                     l4463:
  6226                           
  6227                           ; BSR set to: 0
  6228   006F2E  9F62               	bcf	(___fladd@b+2)& (0+255),7,b
  6229   006F30                     l4465:
  6230                           
  6231                           ; BSR set to: 0
  6232   006F30  90D8               	bcf	status,0,c
  6233   006F32  316E               	rrcf	___fladd@bexp& (0+255),w,b
  6234   006F34  6F63               	movwf	(___fladd@b+3)& (0+255),b
  6235   006F36                     
  6236                           ; BSR set to: 0
  6237   006F36  AF6C               	btfss	___fladd@signs& (0+255),7,b
  6238   006F38  EFA0  F037         	goto	u5371
  6239   006F3C  EFA2  F037         	goto	u5370
  6240   006F40                     u5371:
  6241   006F40  EFA3  F037         	goto	l4471
  6242   006F44                     u5370:
  6243   006F44                     
  6244                           ; BSR set to: 0
  6245   006F44  8F63               	bsf	(___fladd@b+3)& (0+255),7,b
  6246   006F46                     l4471:
  6247                           
  6248                           ; BSR set to: 0
  6249   006F46  C060  F060         	movff	___fladd@b,?___fladd
  6250   006F4A  C061  F061         	movff	___fladd@b+1,?___fladd+1
  6251   006F4E  C062  F062         	movff	___fladd@b+2,?___fladd+2
  6252   006F52  C063  F063         	movff	___fladd@b+3,?___fladd+3
  6253   006F56                     l714:
  6254                           
  6255                           ; BSR set to: 0
  6256   006F56  0012               	return		;funcret
  6257   006F58                     __end_of___fladd:
  6258                           	callstack 0
  6259                           
  6260 ;; *************** function ___flneg *****************
  6261 ;; Defined at:
  6262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flneg.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;  f1              4    0[BANK0 ] unsigned char 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  4    0[BANK0 ] unsigned char 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6276 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6279 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6280 ;;Total ram usage:        4 bytes
  6281 ;; Hardware stack levels used: 1
  6282 ;; Hardware stack levels required when called: 2
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_efgtoa
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text14
  6291   009426                     __ptext14:
  6292                           	callstack 0
  6293   009426                     ___flneg:
  6294                           	callstack 24
  6295   009426  0100               	movlb	0	; () banked
  6296   009428  5160               	movf	___flneg@f1& (0+255),w,b
  6297   00942A  1161               	iorwf	(___flneg@f1+1)& (0+255),w,b
  6298   00942C  1162               	iorwf	(___flneg@f1+2)& (0+255),w,b
  6299   00942E  1163               	iorwf	(___flneg@f1+3)& (0+255),w,b
  6300   009430  B4D8               	btfsc	status,2,c
  6301   009432  EF1D  F04A         	goto	u6011
  6302   009436  EF1F  F04A         	goto	u6010
  6303   00943A                     u6011:
  6304   00943A  EF27  F04A         	goto	l4875
  6305   00943E                     u6010:
  6306   00943E                     
  6307                           ; BSR set to: 0
  6308   00943E  0E00               	movlw	0
  6309   009440  1B60               	xorwf	___flneg@f1& (0+255),f,b
  6310   009442  0E00               	movlw	0
  6311   009444  1B61               	xorwf	(___flneg@f1+1)& (0+255),f,b
  6312   009446  0E00               	movlw	0
  6313   009448  1B62               	xorwf	(___flneg@f1+2)& (0+255),f,b
  6314   00944A  0E80               	movlw	128
  6315   00944C  1B63               	xorwf	(___flneg@f1+3)& (0+255),f,b
  6316   00944E                     l4875:
  6317                           
  6318                           ; BSR set to: 0
  6319   00944E  C060  F060         	movff	___flneg@f1,?___flneg
  6320   009452  C061  F061         	movff	___flneg@f1+1,?___flneg+1
  6321   009456  C062  F062         	movff	___flneg@f1+2,?___flneg+2
  6322   00945A  C063  F063         	movff	___flneg@f1+3,?___flneg+3
  6323   00945E                     
  6324                           ; BSR set to: 0
  6325   00945E  0012               	return		;funcret
  6326   009460                     __end_of___flneg:
  6327                           	callstack 0
  6328                           
  6329 ;; *************** function ___flmul *****************
  6330 ;; Defined at:
  6331 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  b               4   14[BANK0 ] unsigned char 
  6334 ;;  a               4   18[BANK0 ] unsigned char 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  prod            4   33[BANK0 ] struct .
  6337 ;;  grs             4   28[BANK0 ] unsigned long 
  6338 ;;  temp            2   37[BANK0 ] struct .
  6339 ;;  bexp            1   32[BANK0 ] unsigned char 
  6340 ;;  aexp            1   27[BANK0 ] unsigned char 
  6341 ;;  sign            1   26[BANK0 ] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  4   14[BANK0 ] unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, prodl, prodh
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6351 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6352 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6353 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6354 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6355 ;;Total ram usage:       25 bytes
  6356 ;; Hardware stack levels used: 1
  6357 ;; Hardware stack levels required when called: 2
  6358 ;; This function calls:
  6359 ;;		Nothing
  6360 ;; This function is called by:
  6361 ;;		_main
  6362 ;;		_efgtoa
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           	psect	text15
  6367   006F58                     __ptext15:
  6368                           	callstack 0
  6369   006F58                     ___flmul:
  6370                           	callstack 24
  6371   006F58  0100               	movlb	0	; () banked
  6372   006F5A  5171               	movf	(___flmul@b+3)& (0+255),w,b
  6373   006F5C  0B80               	andlw	128
  6374   006F5E  6F7A               	movwf	___flmul@sign& (0+255),b
  6375   006F60  5171               	movf	(___flmul@b+3)& (0+255),w,b
  6376   006F62  2571               	addwf	(___flmul@b+3)& (0+255),w,b
  6377   006F64  6F80               	movwf	___flmul@bexp& (0+255),b
  6378   006F66                     
  6379                           ; BSR set to: 0
  6380   006F66  AF70               	btfss	(___flmul@b+2)& (0+255),7,b
  6381   006F68  EFB8  F037         	goto	u5621
  6382   006F6C  EFBA  F037         	goto	u5620
  6383   006F70                     u5621:
  6384   006F70  EFBB  F037         	goto	l4625
  6385   006F74                     u5620:
  6386   006F74                     
  6387                           ; BSR set to: 0
  6388   006F74  8180               	bsf	___flmul@bexp& (0+255),0,b
  6389   006F76                     l4625:
  6390                           
  6391                           ; BSR set to: 0
  6392   006F76  5180               	movf	___flmul@bexp& (0+255),w,b
  6393   006F78  B4D8               	btfsc	status,2,c
  6394   006F7A  EFC1  F037         	goto	u5631
  6395   006F7E  EFC3  F037         	goto	u5630
  6396   006F82                     u5631:
  6397   006F82  EFD6  F037         	goto	l4633
  6398   006F86                     u5630:
  6399   006F86                     
  6400                           ; BSR set to: 0
  6401   006F86  2980               	incf	___flmul@bexp& (0+255),w,b
  6402   006F88  A4D8               	btfss	status,2,c
  6403   006F8A  EFC9  F037         	goto	u5641
  6404   006F8E  EFCB  F037         	goto	u5640
  6405   006F92                     u5641:
  6406   006F92  EFD3  F037         	goto	l4631
  6407   006F96                     u5640:
  6408   006F96                     
  6409                           ; BSR set to: 0
  6410   006F96  0E00               	movlw	0
  6411   006F98  6F6E               	movwf	___flmul@b& (0+255),b
  6412   006F9A  0E00               	movlw	0
  6413   006F9C  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  6414   006F9E  0E00               	movlw	0
  6415   006FA0  6F70               	movwf	(___flmul@b+2)& (0+255),b
  6416   006FA2  0E00               	movlw	0
  6417   006FA4  6F71               	movwf	(___flmul@b+3)& (0+255),b
  6418   006FA6                     l4631:
  6419                           
  6420                           ; BSR set to: 0
  6421   006FA6  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
  6422   006FA8  EFDE  F037         	goto	l4635
  6423   006FAC                     l4633:
  6424                           
  6425                           ; BSR set to: 0
  6426   006FAC  0E00               	movlw	0
  6427   006FAE  6F6E               	movwf	___flmul@b& (0+255),b
  6428   006FB0  0E00               	movlw	0
  6429   006FB2  6F6F               	movwf	(___flmul@b+1)& (0+255),b
  6430   006FB4  0E00               	movlw	0
  6431   006FB6  6F70               	movwf	(___flmul@b+2)& (0+255),b
  6432   006FB8  0E00               	movlw	0
  6433   006FBA  6F71               	movwf	(___flmul@b+3)& (0+255),b
  6434   006FBC                     l4635:
  6435                           
  6436                           ; BSR set to: 0
  6437   006FBC  5175               	movf	(___flmul@a+3)& (0+255),w,b
  6438   006FBE  0B80               	andlw	128
  6439   006FC0  1B7A               	xorwf	___flmul@sign& (0+255),f,b
  6440   006FC2                     
  6441                           ; BSR set to: 0
  6442   006FC2  5175               	movf	(___flmul@a+3)& (0+255),w,b
  6443   006FC4  2575               	addwf	(___flmul@a+3)& (0+255),w,b
  6444   006FC6  6F7B               	movwf	___flmul@aexp& (0+255),b
  6445   006FC8                     
  6446                           ; BSR set to: 0
  6447   006FC8  AF74               	btfss	(___flmul@a+2)& (0+255),7,b
  6448   006FCA  EFE9  F037         	goto	u5651
  6449   006FCE  EFEB  F037         	goto	u5650
  6450   006FD2                     u5651:
  6451   006FD2  EFEC  F037         	goto	l4643
  6452   006FD6                     u5650:
  6453   006FD6                     
  6454                           ; BSR set to: 0
  6455   006FD6  817B               	bsf	___flmul@aexp& (0+255),0,b
  6456   006FD8                     l4643:
  6457                           
  6458                           ; BSR set to: 0
  6459   006FD8  517B               	movf	___flmul@aexp& (0+255),w,b
  6460   006FDA  B4D8               	btfsc	status,2,c
  6461   006FDC  EFF2  F037         	goto	u5661
  6462   006FE0  EFF4  F037         	goto	u5660
  6463   006FE4                     u5661:
  6464   006FE4  EF07  F038         	goto	l4651
  6465   006FE8                     u5660:
  6466   006FE8                     
  6467                           ; BSR set to: 0
  6468   006FE8  297B               	incf	___flmul@aexp& (0+255),w,b
  6469   006FEA  A4D8               	btfss	status,2,c
  6470   006FEC  EFFA  F037         	goto	u5671
  6471   006FF0  EFFC  F037         	goto	u5670
  6472   006FF4                     u5671:
  6473   006FF4  EF04  F038         	goto	l4649
  6474   006FF8                     u5670:
  6475   006FF8                     
  6476                           ; BSR set to: 0
  6477   006FF8  0E00               	movlw	0
  6478   006FFA  6F72               	movwf	___flmul@a& (0+255),b
  6479   006FFC  0E00               	movlw	0
  6480   006FFE  6F73               	movwf	(___flmul@a+1)& (0+255),b
  6481   007000  0E00               	movlw	0
  6482   007002  6F74               	movwf	(___flmul@a+2)& (0+255),b
  6483   007004  0E00               	movlw	0
  6484   007006  6F75               	movwf	(___flmul@a+3)& (0+255),b
  6485   007008                     l4649:
  6486                           
  6487                           ; BSR set to: 0
  6488   007008  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
  6489   00700A  EF0F  F038         	goto	l791
  6490   00700E                     l4651:
  6491                           
  6492                           ; BSR set to: 0
  6493   00700E  0E00               	movlw	0
  6494   007010  6F72               	movwf	___flmul@a& (0+255),b
  6495   007012  0E00               	movlw	0
  6496   007014  6F73               	movwf	(___flmul@a+1)& (0+255),b
  6497   007016  0E00               	movlw	0
  6498   007018  6F74               	movwf	(___flmul@a+2)& (0+255),b
  6499   00701A  0E00               	movlw	0
  6500   00701C  6F75               	movwf	(___flmul@a+3)& (0+255),b
  6501   00701E                     l791:
  6502                           
  6503                           ; BSR set to: 0
  6504   00701E  517B               	movf	___flmul@aexp& (0+255),w,b
  6505   007020  B4D8               	btfsc	status,2,c
  6506   007022  EF15  F038         	goto	u5681
  6507   007026  EF17  F038         	goto	u5680
  6508   00702A                     u5681:
  6509   00702A  EF1F  F038         	goto	l4655
  6510   00702E                     u5680:
  6511   00702E                     
  6512                           ; BSR set to: 0
  6513   00702E  5180               	movf	___flmul@bexp& (0+255),w,b
  6514   007030  A4D8               	btfss	status,2,c
  6515   007032  EF1D  F038         	goto	u5691
  6516   007036  EF1F  F038         	goto	u5690
  6517   00703A                     u5691:
  6518   00703A  EF29  F038         	goto	l4659
  6519   00703E                     u5690:
  6520   00703E                     l4655:
  6521                           
  6522                           ; BSR set to: 0
  6523   00703E  0E00               	movlw	0
  6524   007040  6F6E               	movwf	?___flmul& (0+255),b
  6525   007042  0E00               	movlw	0
  6526   007044  6F6F               	movwf	(?___flmul+1)& (0+255),b
  6527   007046  0E00               	movlw	0
  6528   007048  6F70               	movwf	(?___flmul+2)& (0+255),b
  6529   00704A  0E00               	movlw	0
  6530   00704C  6F71               	movwf	(?___flmul+3)& (0+255),b
  6531   00704E  EFD1  F039         	goto	l795
  6532   007052                     l4659:
  6533                           
  6534                           ; BSR set to: 0
  6535   007052  5174               	movf	(___flmul@a+2)& (0+255),w,b
  6536   007054  036E               	mulwf	___flmul@b& (0+255),b
  6537   007056  006F FFCC  F085    	movff	prodl,___flmul@temp
  6538   00705C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6539   007062                     
  6540                           ; BSR set to: 0
  6541   007062  5185               	movf	___flmul@temp& (0+255),w,b
  6542   007064  6F7C               	movwf	___flmul@grs& (0+255),b
  6543   007066  6B7D               	clrf	(___flmul@grs+1)& (0+255),b
  6544   007068  6B7E               	clrf	(___flmul@grs+2)& (0+255),b
  6545   00706A  6B7F               	clrf	(___flmul@grs+3)& (0+255),b
  6546   00706C                     
  6547                           ; BSR set to: 0
  6548   00706C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6549   00706E  6F81               	movwf	___flmul@prod& (0+255),b
  6550   007070  6B82               	clrf	(___flmul@prod+1)& (0+255),b
  6551   007072  6B83               	clrf	(___flmul@prod+2)& (0+255),b
  6552   007074  6B84               	clrf	(___flmul@prod+3)& (0+255),b
  6553   007076  5173               	movf	(___flmul@a+1)& (0+255),w,b
  6554   007078  036F               	mulwf	(___flmul@b+1)& (0+255),b
  6555   00707A  006F FFCC  F085    	movff	prodl,___flmul@temp
  6556   007080  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6557   007086                     
  6558                           ; BSR set to: 0
  6559   007086  5185               	movf	___flmul@temp& (0+255),w,b
  6560   007088  277C               	addwf	___flmul@grs& (0+255),f,b
  6561   00708A  0E00               	movlw	0
  6562   00708C  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6563   00708E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6564   007090  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6565   007092                     
  6566                           ; BSR set to: 0
  6567   007092  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6568   007094  2781               	addwf	___flmul@prod& (0+255),f,b
  6569   007096  0E00               	movlw	0
  6570   007098  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6571   00709A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6572   00709C  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6573   00709E  5172               	movf	___flmul@a& (0+255),w,b
  6574   0070A0  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6575   0070A2  006F FFCC  F085    	movff	prodl,___flmul@temp
  6576   0070A8  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6577   0070AE                     
  6578                           ; BSR set to: 0
  6579   0070AE  5185               	movf	___flmul@temp& (0+255),w,b
  6580   0070B0  277C               	addwf	___flmul@grs& (0+255),f,b
  6581   0070B2  0E00               	movlw	0
  6582   0070B4  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6583   0070B6  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6584   0070B8  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6585   0070BA                     
  6586                           ; BSR set to: 0
  6587   0070BA  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6588   0070BC  2781               	addwf	___flmul@prod& (0+255),f,b
  6589   0070BE  0E00               	movlw	0
  6590   0070C0  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6591   0070C2  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6592   0070C4  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6593   0070C6                     
  6594                           ; BSR set to: 0
  6595   0070C6  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  6596   0070CA  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  6597   0070CE  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  6598   0070D2  6B7C               	clrf	___flmul@grs& (0+255),b
  6599   0070D4                     
  6600                           ; BSR set to: 0
  6601   0070D4  5172               	movf	___flmul@a& (0+255),w,b
  6602   0070D6  036F               	mulwf	(___flmul@b+1)& (0+255),b
  6603   0070D8  006F FFCC  F085    	movff	prodl,___flmul@temp
  6604   0070DE  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6605   0070E4                     
  6606                           ; BSR set to: 0
  6607   0070E4  5185               	movf	___flmul@temp& (0+255),w,b
  6608   0070E6  277C               	addwf	___flmul@grs& (0+255),f,b
  6609   0070E8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6610   0070EA  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6611   0070EC  0E00               	movlw	0
  6612   0070EE  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6613   0070F0  0E00               	movlw	0
  6614   0070F2  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6615   0070F4                     
  6616                           ; BSR set to: 0
  6617   0070F4  5173               	movf	(___flmul@a+1)& (0+255),w,b
  6618   0070F6  036E               	mulwf	___flmul@b& (0+255),b
  6619   0070F8  006F FFCC  F085    	movff	prodl,___flmul@temp
  6620   0070FE  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6621   007104                     
  6622                           ; BSR set to: 0
  6623   007104  5185               	movf	___flmul@temp& (0+255),w,b
  6624   007106  277C               	addwf	___flmul@grs& (0+255),f,b
  6625   007108  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6626   00710A  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6627   00710C  0E00               	movlw	0
  6628   00710E  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6629   007110  0E00               	movlw	0
  6630   007112  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6631   007114                     
  6632                           ; BSR set to: 0
  6633   007114  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  6634   007118  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  6635   00711C  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  6636   007120  6B7C               	clrf	___flmul@grs& (0+255),b
  6637   007122  5172               	movf	___flmul@a& (0+255),w,b
  6638   007124  036E               	mulwf	___flmul@b& (0+255),b
  6639   007126  006F FFCC  F085    	movff	prodl,___flmul@temp
  6640   00712C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6641   007132                     
  6642                           ; BSR set to: 0
  6643   007132  5185               	movf	___flmul@temp& (0+255),w,b
  6644   007134  277C               	addwf	___flmul@grs& (0+255),f,b
  6645   007136  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6646   007138  237D               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6647   00713A  0E00               	movlw	0
  6648   00713C  237E               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6649   00713E  0E00               	movlw	0
  6650   007140  237F               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6651   007142                     
  6652                           ; BSR set to: 0
  6653   007142  5174               	movf	(___flmul@a+2)& (0+255),w,b
  6654   007144  036F               	mulwf	(___flmul@b+1)& (0+255),b
  6655   007146  006F FFCC  F085    	movff	prodl,___flmul@temp
  6656   00714C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6657   007152  5185               	movf	___flmul@temp& (0+255),w,b
  6658   007154  2781               	addwf	___flmul@prod& (0+255),f,b
  6659   007156  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6660   007158  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6661   00715A  0E00               	movlw	0
  6662   00715C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6663   00715E  0E00               	movlw	0
  6664   007160  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6665   007162                     
  6666                           ; BSR set to: 0
  6667   007162  5173               	movf	(___flmul@a+1)& (0+255),w,b
  6668   007164  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6669   007166  006F FFCC  F085    	movff	prodl,___flmul@temp
  6670   00716C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6671   007172                     
  6672                           ; BSR set to: 0
  6673   007172  5185               	movf	___flmul@temp& (0+255),w,b
  6674   007174  2781               	addwf	___flmul@prod& (0+255),f,b
  6675   007176  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6676   007178  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6677   00717A  0E00               	movlw	0
  6678   00717C  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6679   00717E  0E00               	movlw	0
  6680   007180  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6681   007182  5174               	movf	(___flmul@a+2)& (0+255),w,b
  6682   007184  0370               	mulwf	(___flmul@b+2)& (0+255),b
  6683   007186  006F FFCC  F085    	movff	prodl,___flmul@temp
  6684   00718C  006F FFD0  F086    	movff	prodh,___flmul@temp+1
  6685   007192                     
  6686                           ; BSR set to: 0
  6687   007192  5185               	movf	___flmul@temp& (0+255),w,b
  6688   007194  6F76               	movwf	??___flmul& (0+255),b
  6689   007196  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6690   007198  6F77               	movwf	(??___flmul+1)& (0+255),b
  6691   00719A  6B78               	clrf	(??___flmul+2)& (0+255),b
  6692   00719C  6B79               	clrf	(??___flmul+3)& (0+255),b
  6693   00719E  C078  F079         	movff	??___flmul+2,??___flmul+3
  6694   0071A2  C077  F078         	movff	??___flmul+1,??___flmul+2
  6695   0071A6  C076  F077         	movff	??___flmul,??___flmul+1
  6696   0071AA  6B76               	clrf	??___flmul& (0+255),b
  6697   0071AC  5176               	movf	??___flmul& (0+255),w,b
  6698   0071AE  2781               	addwf	___flmul@prod& (0+255),f,b
  6699   0071B0  5177               	movf	(??___flmul+1)& (0+255),w,b
  6700   0071B2  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6701   0071B4  5178               	movf	(??___flmul+2)& (0+255),w,b
  6702   0071B6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6703   0071B8  5179               	movf	(??___flmul+3)& (0+255),w,b
  6704   0071BA  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6705   0071BC                     
  6706                           ; BSR set to: 0
  6707   0071BC  C07C  F076         	movff	___flmul@grs,??___flmul
  6708   0071C0  C07D  F077         	movff	___flmul@grs+1,??___flmul+1
  6709   0071C4  C07E  F078         	movff	___flmul@grs+2,??___flmul+2
  6710   0071C8  C07F  F079         	movff	___flmul@grs+3,??___flmul+3
  6711   0071CC  0E19               	movlw	25
  6712   0071CE  EFEE  F038         	goto	u5700
  6713   0071D2                     u5705:
  6714   0071D2  90D8               	bcf	status,0,c
  6715   0071D4  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6716   0071D6  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6717   0071D8  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6718   0071DA  3376               	rrcf	??___flmul& (0+255),f,b
  6719   0071DC                     u5700:
  6720   0071DC  2EE8               	decfsz	wreg,f,c
  6721   0071DE  EFE9  F038         	goto	u5705
  6722   0071E2  5176               	movf	??___flmul& (0+255),w,b
  6723   0071E4  2781               	addwf	___flmul@prod& (0+255),f,b
  6724   0071E6  5177               	movf	(??___flmul+1)& (0+255),w,b
  6725   0071E8  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6726   0071EA  5178               	movf	(??___flmul+2)& (0+255),w,b
  6727   0071EC  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6728   0071EE  5179               	movf	(??___flmul+3)& (0+255),w,b
  6729   0071F0  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6730   0071F2                     
  6731                           ; BSR set to: 0
  6732   0071F2  C07E  F07F         	movff	___flmul@grs+2,___flmul@grs+3
  6733   0071F6  C07D  F07E         	movff	___flmul@grs+1,___flmul@grs+2
  6734   0071FA  C07C  F07D         	movff	___flmul@grs,___flmul@grs+1
  6735   0071FE  6B7C               	clrf	___flmul@grs& (0+255),b
  6736   007200                     
  6737                           ; BSR set to: 0
  6738   007200  517B               	movf	___flmul@aexp& (0+255),w,b
  6739   007202  C080  F076         	movff	___flmul@bexp,??___flmul
  6740   007206  6B77               	clrf	(??___flmul+1)& (0+255),b
  6741   007208  2776               	addwf	??___flmul& (0+255),f,b
  6742   00720A  0E00               	movlw	0
  6743   00720C  2377               	addwfc	(??___flmul+1)& (0+255),f,b
  6744   00720E  0E82               	movlw	130
  6745   007210  2576               	addwf	??___flmul& (0+255),w,b
  6746   007212  6F85               	movwf	___flmul@temp& (0+255),b
  6747   007214  0EFF               	movlw	255
  6748   007216  2177               	addwfc	(??___flmul+1)& (0+255),w,b
  6749   007218  6F86               	movwf	(___flmul@temp+1)& (0+255),b
  6750   00721A  EF24  F039         	goto	l4707
  6751   00721E                     l4701:
  6752                           
  6753                           ; BSR set to: 0
  6754   00721E  90D8               	bcf	status,0,c
  6755   007220  3781               	rlcf	___flmul@prod& (0+255),f,b
  6756   007222  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6757   007224  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6758   007226  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6759   007228                     
  6760                           ; BSR set to: 0
  6761   007228  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6762   00722A  EF19  F039         	goto	u5711
  6763   00722E  EF1B  F039         	goto	u5710
  6764   007232                     u5711:
  6765   007232  EF1C  F039         	goto	l798
  6766   007236                     u5710:
  6767   007236                     
  6768                           ; BSR set to: 0
  6769   007236  8181               	bsf	___flmul@prod& (0+255),0,b
  6770   007238                     l798:
  6771                           
  6772                           ; BSR set to: 0
  6773   007238  90D8               	bcf	status,0,c
  6774   00723A  377C               	rlcf	___flmul@grs& (0+255),f,b
  6775   00723C  377D               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6776   00723E  377E               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6777   007240  377F               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6778   007242  0785               	decf	___flmul@temp& (0+255),f,b
  6779   007244  A0D8               	btfss	status,0,c
  6780   007246  0786               	decf	(___flmul@temp+1)& (0+255),f,b
  6781   007248                     l4707:
  6782                           
  6783                           ; BSR set to: 0
  6784   007248  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
  6785   00724A  EF29  F039         	goto	u5721
  6786   00724E  EF2B  F039         	goto	u5720
  6787   007252                     u5721:
  6788   007252  EF0F  F039         	goto	l4701
  6789   007256                     u5720:
  6790   007256                     
  6791                           ; BSR set to: 0
  6792   007256  6B7B               	clrf	___flmul@aexp& (0+255),b
  6793   007258  AF7F               	btfss	(___flmul@grs+3)& (0+255),7,b
  6794   00725A  EF31  F039         	goto	u5731
  6795   00725E  EF33  F039         	goto	u5730
  6796   007262                     u5731:
  6797   007262  EF57  F039         	goto	l800
  6798   007266                     u5730:
  6799   007266                     
  6800                           ; BSR set to: 0
  6801   007266  0EFF               	movlw	255
  6802   007268  157C               	andwf	___flmul@grs& (0+255),w,b
  6803   00726A  6F76               	movwf	??___flmul& (0+255),b
  6804   00726C  0EFF               	movlw	255
  6805   00726E  157D               	andwf	(___flmul@grs+1)& (0+255),w,b
  6806   007270  6F77               	movwf	(??___flmul+1)& (0+255),b
  6807   007272  0EFF               	movlw	255
  6808   007274  157E               	andwf	(___flmul@grs+2)& (0+255),w,b
  6809   007276  6F78               	movwf	(??___flmul+2)& (0+255),b
  6810   007278  0E7F               	movlw	127
  6811   00727A  157F               	andwf	(___flmul@grs+3)& (0+255),w,b
  6812   00727C  6F79               	movwf	(??___flmul+3)& (0+255),b
  6813   00727E  5176               	movf	??___flmul& (0+255),w,b
  6814   007280  1177               	iorwf	(??___flmul+1)& (0+255),w,b
  6815   007282  1178               	iorwf	(??___flmul+2)& (0+255),w,b
  6816   007284  1179               	iorwf	(??___flmul+3)& (0+255),w,b
  6817   007286  B4D8               	btfsc	status,2,c
  6818   007288  EF48  F039         	goto	u5741
  6819   00728C  EF4A  F039         	goto	u5740
  6820   007290                     u5741:
  6821   007290  EF4E  F039         	goto	l801
  6822   007294                     u5740:
  6823   007294                     l4711:
  6824                           
  6825                           ; BSR set to: 0
  6826   007294  0E01               	movlw	1
  6827   007296  6F7B               	movwf	___flmul@aexp& (0+255),b
  6828   007298  EF57  F039         	goto	l800
  6829   00729C                     l801:
  6830                           
  6831                           ; BSR set to: 0
  6832   00729C  A181               	btfss	___flmul@prod& (0+255),0,b
  6833   00729E  EF53  F039         	goto	u5751
  6834   0072A2  EF55  F039         	goto	u5750
  6835   0072A6                     u5751:
  6836   0072A6  EF57  F039         	goto	l800
  6837   0072AA                     u5750:
  6838   0072AA  EF4A  F039         	goto	l4711
  6839   0072AE                     l800:
  6840                           
  6841                           ; BSR set to: 0
  6842   0072AE  517B               	movf	___flmul@aexp& (0+255),w,b
  6843   0072B0  B4D8               	btfsc	status,2,c
  6844   0072B2  EF5D  F039         	goto	u5761
  6845   0072B6  EF5F  F039         	goto	u5760
  6846   0072BA                     u5761:
  6847   0072BA  EF83  F039         	goto	l4723
  6848   0072BE                     u5760:
  6849   0072BE                     
  6850                           ; BSR set to: 0
  6851   0072BE  0E01               	movlw	1
  6852   0072C0  2781               	addwf	___flmul@prod& (0+255),f,b
  6853   0072C2  0E00               	movlw	0
  6854   0072C4  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6855   0072C6  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6856   0072C8  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6857   0072CA                     
  6858                           ; BSR set to: 0
  6859   0072CA  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
  6860   0072CC  EF6A  F039         	goto	u5771
  6861   0072D0  EF6C  F039         	goto	u5770
  6862   0072D4                     u5771:
  6863   0072D4  EF83  F039         	goto	l4723
  6864   0072D8                     u5770:
  6865   0072D8                     
  6866                           ; BSR set to: 0
  6867   0072D8  C081  F076         	movff	___flmul@prod,??___flmul
  6868   0072DC  C082  F077         	movff	___flmul@prod+1,??___flmul+1
  6869   0072E0  C083  F078         	movff	___flmul@prod+2,??___flmul+2
  6870   0072E4  C084  F079         	movff	___flmul@prod+3,??___flmul+3
  6871   0072E8  3579               	rlcf	(??___flmul+3)& (0+255),w,b
  6872   0072EA  3379               	rrcf	(??___flmul+3)& (0+255),f,b
  6873   0072EC  3378               	rrcf	(??___flmul+2)& (0+255),f,b
  6874   0072EE  3377               	rrcf	(??___flmul+1)& (0+255),f,b
  6875   0072F0  3376               	rrcf	??___flmul& (0+255),f,b
  6876   0072F2  C076  F081         	movff	??___flmul,___flmul@prod
  6877   0072F6  C077  F082         	movff	??___flmul+1,___flmul@prod+1
  6878   0072FA  C078  F083         	movff	??___flmul+2,___flmul@prod+2
  6879   0072FE  C079  F084         	movff	??___flmul+3,___flmul@prod+3
  6880   007302                     
  6881                           ; BSR set to: 0
  6882   007302  4B85               	infsnz	___flmul@temp& (0+255),f,b
  6883   007304  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
  6884   007306                     l4723:
  6885                           
  6886                           ; BSR set to: 0
  6887   007306  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6888   007308  EF8E  F039         	goto	u5781
  6889   00730C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6890   00730E  E108               	bnz	u5780
  6891   007310  2985               	incf	___flmul@temp& (0+255),w,b
  6892   007312  A0D8               	btfss	status,0,c
  6893   007314  EF8E  F039         	goto	u5781
  6894   007318  EF90  F039         	goto	u5780
  6895   00731C                     u5781:
  6896   00731C  EF9A  F039         	goto	l4727
  6897   007320                     u5780:
  6898   007320                     
  6899                           ; BSR set to: 0
  6900   007320  0E00               	movlw	0
  6901   007322  6F81               	movwf	___flmul@prod& (0+255),b
  6902   007324  0E00               	movlw	0
  6903   007326  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6904   007328  0E80               	movlw	128
  6905   00732A  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6906   00732C  0E7F               	movlw	127
  6907   00732E  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6908   007330  EFC7  F039         	goto	l4741
  6909   007334                     l4727:
  6910                           
  6911                           ; BSR set to: 0
  6912   007334  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6913   007336  EFA7  F039         	goto	u5790
  6914   00733A  5186               	movf	(___flmul@temp+1)& (0+255),w,b
  6915   00733C  E106               	bnz	u5791
  6916   00733E  0585               	decf	___flmul@temp& (0+255),w,b
  6917   007340  B0D8               	btfsc	status,0,c
  6918   007342  EFA5  F039         	goto	u5791
  6919   007346  EFA7  F039         	goto	u5790
  6920   00734A                     u5791:
  6921   00734A  EFB2  F039         	goto	l808
  6922   00734E                     u5790:
  6923   00734E                     
  6924                           ; BSR set to: 0
  6925   00734E  0E00               	movlw	0
  6926   007350  6F81               	movwf	___flmul@prod& (0+255),b
  6927   007352  0E00               	movlw	0
  6928   007354  6F82               	movwf	(___flmul@prod+1)& (0+255),b
  6929   007356  0E00               	movlw	0
  6930   007358  6F83               	movwf	(___flmul@prod+2)& (0+255),b
  6931   00735A  0E00               	movlw	0
  6932   00735C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6933   00735E                     
  6934                           ; BSR set to: 0
  6935   00735E  6B7A               	clrf	___flmul@sign& (0+255),b
  6936   007360  EFC7  F039         	goto	l4741
  6937   007364                     l808:
  6938                           
  6939                           ; BSR set to: 0
  6940   007364  C085  F080         	movff	___flmul@temp,___flmul@bexp
  6941   007368                     
  6942                           ; BSR set to: 0
  6943   007368  0EFF               	movlw	255
  6944   00736A  1781               	andwf	___flmul@prod& (0+255),f,b
  6945   00736C  0EFF               	movlw	255
  6946   00736E  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
  6947   007370  0E7F               	movlw	127
  6948   007372  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
  6949   007374  0E00               	movlw	0
  6950   007376  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
  6951   007378                     
  6952                           ; BSR set to: 0
  6953   007378  A180               	btfss	___flmul@bexp& (0+255),0,b
  6954   00737A  EFC1  F039         	goto	u5801
  6955   00737E  EFC3  F039         	goto	u5800
  6956   007382                     u5801:
  6957   007382  EFC4  F039         	goto	l4739
  6958   007386                     u5800:
  6959   007386                     
  6960                           ; BSR set to: 0
  6961   007386  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
  6962   007388                     l4739:
  6963                           
  6964                           ; BSR set to: 0
  6965   007388  90D8               	bcf	status,0,c
  6966   00738A  3180               	rrcf	___flmul@bexp& (0+255),w,b
  6967   00738C  6F84               	movwf	(___flmul@prod+3)& (0+255),b
  6968   00738E                     l4741:
  6969                           
  6970                           ; BSR set to: 0
  6971   00738E  517A               	movf	___flmul@sign& (0+255),w,b
  6972   007390  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6973   007392                     
  6974                           ; BSR set to: 0
  6975   007392  C081  F06E         	movff	___flmul@prod,?___flmul
  6976   007396  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
  6977   00739A  C083  F070         	movff	___flmul@prod+2,?___flmul+2
  6978   00739E  C084  F071         	movff	___flmul@prod+3,?___flmul+3
  6979   0073A2                     l795:
  6980                           
  6981                           ; BSR set to: 0
  6982   0073A2  0012               	return		;funcret
  6983   0073A4                     __end_of___flmul:
  6984                           	callstack 0
  6985                           
  6986 ;; *************** function ___flge *****************
  6987 ;; Defined at:
  6988 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\flge.c"
  6989 ;; Parameters:    Size  Location     Type
  6990 ;;  ff1             4   39[BANK0 ] unsigned char 
  6991 ;;  ff2             4   43[BANK0 ] unsigned char 
  6992 ;; Auto vars:     Size  Location     Type
  6993 ;;		None
  6994 ;; Return value:  Size  Location     Type
  6995 ;;		None               void
  6996 ;; Registers used:
  6997 ;;		wreg, status,2, status,0
  6998 ;; Tracked objects:
  6999 ;;		On entry : 0/0
  7000 ;;		On exit  : 0/0
  7001 ;;		Unchanged: 0/0
  7002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7003 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7005 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7006 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7007 ;;Total ram usage:       12 bytes
  7008 ;; Hardware stack levels used: 1
  7009 ;; Hardware stack levels required when called: 2
  7010 ;; This function calls:
  7011 ;;		Nothing
  7012 ;; This function is called by:
  7013 ;;		_efgtoa
  7014 ;; This function uses a non-reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text16
  7018   008988                     __ptext16:
  7019                           	callstack 0
  7020   008988                     ___flge:
  7021                           	callstack 24
  7022   008988  0E00               	movlw	0
  7023   00898A  0100               	movlb	0	; () banked
  7024   00898C  1587               	andwf	___flge@ff1& (0+255),w,b
  7025   00898E  6F8F               	movwf	??___flge& (0+255),b
  7026   008990  0E00               	movlw	0
  7027   008992  1588               	andwf	(___flge@ff1+1)& (0+255),w,b
  7028   008994  6F90               	movwf	(??___flge+1)& (0+255),b
  7029   008996  0E80               	movlw	128
  7030   008998  1589               	andwf	(___flge@ff1+2)& (0+255),w,b
  7031   00899A  6F91               	movwf	(??___flge+2)& (0+255),b
  7032   00899C  0E7F               	movlw	127
  7033   00899E  158A               	andwf	(___flge@ff1+3)& (0+255),w,b
  7034   0089A0  6F92               	movwf	(??___flge+3)& (0+255),b
  7035   0089A2  518F               	movf	??___flge& (0+255),w,b
  7036   0089A4  1190               	iorwf	(??___flge+1)& (0+255),w,b
  7037   0089A6  1191               	iorwf	(??___flge+2)& (0+255),w,b
  7038   0089A8  1192               	iorwf	(??___flge+3)& (0+255),w,b
  7039   0089AA  A4D8               	btfss	status,2,c
  7040   0089AC  EFDA  F044         	goto	u5961
  7041   0089B0  EFDC  F044         	goto	u5960
  7042   0089B4                     u5961:
  7043   0089B4  EFE4  F044         	goto	l4853
  7044   0089B8                     u5960:
  7045   0089B8                     
  7046                           ; BSR set to: 0
  7047   0089B8  0E00               	movlw	0
  7048   0089BA  6F87               	movwf	___flge@ff1& (0+255),b
  7049   0089BC  0E00               	movlw	0
  7050   0089BE  6F88               	movwf	(___flge@ff1+1)& (0+255),b
  7051   0089C0  0E00               	movlw	0
  7052   0089C2  6F89               	movwf	(___flge@ff1+2)& (0+255),b
  7053   0089C4  0E00               	movlw	0
  7054   0089C6  6F8A               	movwf	(___flge@ff1+3)& (0+255),b
  7055   0089C8                     l4853:
  7056                           
  7057                           ; BSR set to: 0
  7058   0089C8  0E00               	movlw	0
  7059   0089CA  158B               	andwf	___flge@ff2& (0+255),w,b
  7060   0089CC  6F8F               	movwf	??___flge& (0+255),b
  7061   0089CE  0E00               	movlw	0
  7062   0089D0  158C               	andwf	(___flge@ff2+1)& (0+255),w,b
  7063   0089D2  6F90               	movwf	(??___flge+1)& (0+255),b
  7064   0089D4  0E80               	movlw	128
  7065   0089D6  158D               	andwf	(___flge@ff2+2)& (0+255),w,b
  7066   0089D8  6F91               	movwf	(??___flge+2)& (0+255),b
  7067   0089DA  0E7F               	movlw	127
  7068   0089DC  158E               	andwf	(___flge@ff2+3)& (0+255),w,b
  7069   0089DE  6F92               	movwf	(??___flge+3)& (0+255),b
  7070   0089E0  518F               	movf	??___flge& (0+255),w,b
  7071   0089E2  1190               	iorwf	(??___flge+1)& (0+255),w,b
  7072   0089E4  1191               	iorwf	(??___flge+2)& (0+255),w,b
  7073   0089E6  1192               	iorwf	(??___flge+3)& (0+255),w,b
  7074   0089E8  A4D8               	btfss	status,2,c
  7075   0089EA  EFF9  F044         	goto	u5971
  7076   0089EE  EFFB  F044         	goto	u5970
  7077   0089F2                     u5971:
  7078   0089F2  EF03  F045         	goto	l4857
  7079   0089F6                     u5970:
  7080   0089F6                     
  7081                           ; BSR set to: 0
  7082   0089F6  0E00               	movlw	0
  7083   0089F8  6F8B               	movwf	___flge@ff2& (0+255),b
  7084   0089FA  0E00               	movlw	0
  7085   0089FC  6F8C               	movwf	(___flge@ff2+1)& (0+255),b
  7086   0089FE  0E00               	movlw	0
  7087   008A00  6F8D               	movwf	(___flge@ff2+2)& (0+255),b
  7088   008A02  0E00               	movlw	0
  7089   008A04  6F8E               	movwf	(___flge@ff2+3)& (0+255),b
  7090   008A06                     l4857:
  7091                           
  7092                           ; BSR set to: 0
  7093   008A06  AF8A               	btfss	(___flge@ff1+3)& (0+255),7,b
  7094   008A08  EF08  F045         	goto	u5981
  7095   008A0C  EF0A  F045         	goto	u5980
  7096   008A10                     u5981:
  7097   008A10  EF13  F045         	goto	l4861
  7098   008A14                     u5980:
  7099   008A14                     
  7100                           ; BSR set to: 0
  7101   008A14  6D87               	negf	___flge@ff1& (0+255),b
  7102   008A16  1F88               	comf	(___flge@ff1+1)& (0+255),f,b
  7103   008A18  B0D8               	btfsc	status,0,c
  7104   008A1A  2B88               	incf	(___flge@ff1+1)& (0+255),f,b
  7105   008A1C  1F89               	comf	(___flge@ff1+2)& (0+255),f,b
  7106   008A1E  B0D8               	btfsc	status,0,c
  7107   008A20  2B89               	incf	(___flge@ff1+2)& (0+255),f,b
  7108   008A22  0E80               	movlw	128
  7109   008A24  578A               	subfwb	(___flge@ff1+3)& (0+255),f,b
  7110   008A26                     l4861:
  7111                           
  7112                           ; BSR set to: 0
  7113   008A26  AF8E               	btfss	(___flge@ff2+3)& (0+255),7,b
  7114   008A28  EF18  F045         	goto	u5991
  7115   008A2C  EF1A  F045         	goto	u5990
  7116   008A30                     u5991:
  7117   008A30  EF23  F045         	goto	l442
  7118   008A34                     u5990:
  7119   008A34                     
  7120                           ; BSR set to: 0
  7121   008A34  6D8B               	negf	___flge@ff2& (0+255),b
  7122   008A36  1F8C               	comf	(___flge@ff2+1)& (0+255),f,b
  7123   008A38  B0D8               	btfsc	status,0,c
  7124   008A3A  2B8C               	incf	(___flge@ff2+1)& (0+255),f,b
  7125   008A3C  1F8D               	comf	(___flge@ff2+2)& (0+255),f,b
  7126   008A3E  B0D8               	btfsc	status,0,c
  7127   008A40  2B8D               	incf	(___flge@ff2+2)& (0+255),f,b
  7128   008A42  0E80               	movlw	128
  7129   008A44  578E               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7130   008A46                     l442:
  7131                           
  7132                           ; BSR set to: 0
  7133   008A46  0E00               	movlw	0
  7134   008A48  1B87               	xorwf	___flge@ff1& (0+255),f,b
  7135   008A4A  0E00               	movlw	0
  7136   008A4C  1B88               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7137   008A4E  0E00               	movlw	0
  7138   008A50  1B89               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7139   008A52  0E80               	movlw	128
  7140   008A54  1B8A               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7141   008A56  0E00               	movlw	0
  7142   008A58  1B8B               	xorwf	___flge@ff2& (0+255),f,b
  7143   008A5A  0E00               	movlw	0
  7144   008A5C  1B8C               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7145   008A5E  0E00               	movlw	0
  7146   008A60  1B8D               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7147   008A62  0E80               	movlw	128
  7148   008A64  1B8E               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7149   008A66  518B               	movf	___flge@ff2& (0+255),w,b
  7150   008A68  5D87               	subwf	___flge@ff1& (0+255),w,b
  7151   008A6A  518C               	movf	(___flge@ff2+1)& (0+255),w,b
  7152   008A6C  5988               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7153   008A6E  518D               	movf	(___flge@ff2+2)& (0+255),w,b
  7154   008A70  5989               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7155   008A72  518E               	movf	(___flge@ff2+3)& (0+255),w,b
  7156   008A74  598A               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7157   008A76  B0D8               	btfsc	status,0,c
  7158   008A78  EF40  F045         	goto	u6001
  7159   008A7C  EF42  F045         	goto	u6000
  7160   008A80                     u6001:
  7161   008A80  EF45  F045         	goto	l4867
  7162   008A84                     u6000:
  7163   008A84                     
  7164                           ; BSR set to: 0
  7165   008A84  90D8               	bcf	status,0,c
  7166   008A86  EF46  F045         	goto	l447
  7167   008A8A                     l4867:
  7168                           
  7169                           ; BSR set to: 0
  7170   008A8A  80D8               	bsf	status,0,c
  7171   008A8C                     l447:
  7172                           
  7173                           ; BSR set to: 0
  7174   008A8C  0012               	return		;funcret
  7175   008A8E                     __end_of___flge:
  7176                           	callstack 0
  7177                           
  7178 ;; *************** function ___fleq *****************
  7179 ;; Defined at:
  7180 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\fleq.c"
  7181 ;; Parameters:    Size  Location     Type
  7182 ;;  ff1             4    0[BANK0 ] unsigned char 
  7183 ;;  ff2             4    4[BANK0 ] unsigned char 
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;		None               void
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7195 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7197 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7198 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7199 ;;Total ram usage:       12 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 2
  7202 ;; This function calls:
  7203 ;;		Nothing
  7204 ;; This function is called by:
  7205 ;;		_efgtoa
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text17
  7210   008F7E                     __ptext17:
  7211                           	callstack 0
  7212   008F7E                     ___fleq:
  7213                           	callstack 24
  7214   008F7E  0E00               	movlw	0
  7215   008F80  0100               	movlb	0	; () banked
  7216   008F82  1560               	andwf	___fleq@ff1& (0+255),w,b
  7217   008F84  6F68               	movwf	??___fleq& (0+255),b
  7218   008F86  0E00               	movlw	0
  7219   008F88  1561               	andwf	(___fleq@ff1+1)& (0+255),w,b
  7220   008F8A  6F69               	movwf	(??___fleq+1)& (0+255),b
  7221   008F8C  0E80               	movlw	128
  7222   008F8E  1562               	andwf	(___fleq@ff1+2)& (0+255),w,b
  7223   008F90  6F6A               	movwf	(??___fleq+2)& (0+255),b
  7224   008F92  0E7F               	movlw	127
  7225   008F94  1563               	andwf	(___fleq@ff1+3)& (0+255),w,b
  7226   008F96  6F6B               	movwf	(??___fleq+3)& (0+255),b
  7227   008F98  5168               	movf	??___fleq& (0+255),w,b
  7228   008F9A  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  7229   008F9C  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  7230   008F9E  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  7231   008FA0  A4D8               	btfss	status,2,c
  7232   008FA2  EFD5  F047         	goto	u5931
  7233   008FA6  EFD7  F047         	goto	u5930
  7234   008FAA                     u5931:
  7235   008FAA  EFDF  F047         	goto	l4837
  7236   008FAE                     u5930:
  7237   008FAE                     
  7238                           ; BSR set to: 0
  7239   008FAE  0E00               	movlw	0
  7240   008FB0  6F60               	movwf	___fleq@ff1& (0+255),b
  7241   008FB2  0E00               	movlw	0
  7242   008FB4  6F61               	movwf	(___fleq@ff1+1)& (0+255),b
  7243   008FB6  0E00               	movlw	0
  7244   008FB8  6F62               	movwf	(___fleq@ff1+2)& (0+255),b
  7245   008FBA  0E00               	movlw	0
  7246   008FBC  6F63               	movwf	(___fleq@ff1+3)& (0+255),b
  7247   008FBE                     l4837:
  7248                           
  7249                           ; BSR set to: 0
  7250   008FBE  0E00               	movlw	0
  7251   008FC0  1564               	andwf	___fleq@ff2& (0+255),w,b
  7252   008FC2  6F68               	movwf	??___fleq& (0+255),b
  7253   008FC4  0E00               	movlw	0
  7254   008FC6  1565               	andwf	(___fleq@ff2+1)& (0+255),w,b
  7255   008FC8  6F69               	movwf	(??___fleq+1)& (0+255),b
  7256   008FCA  0E80               	movlw	128
  7257   008FCC  1566               	andwf	(___fleq@ff2+2)& (0+255),w,b
  7258   008FCE  6F6A               	movwf	(??___fleq+2)& (0+255),b
  7259   008FD0  0E7F               	movlw	127
  7260   008FD2  1567               	andwf	(___fleq@ff2+3)& (0+255),w,b
  7261   008FD4  6F6B               	movwf	(??___fleq+3)& (0+255),b
  7262   008FD6  5168               	movf	??___fleq& (0+255),w,b
  7263   008FD8  1169               	iorwf	(??___fleq+1)& (0+255),w,b
  7264   008FDA  116A               	iorwf	(??___fleq+2)& (0+255),w,b
  7265   008FDC  116B               	iorwf	(??___fleq+3)& (0+255),w,b
  7266   008FDE  A4D8               	btfss	status,2,c
  7267   008FE0  EFF4  F047         	goto	u5941
  7268   008FE4  EFF6  F047         	goto	u5940
  7269   008FE8                     u5941:
  7270   008FE8  EFFE  F047         	goto	l4841
  7271   008FEC                     u5940:
  7272   008FEC                     
  7273                           ; BSR set to: 0
  7274   008FEC  0E00               	movlw	0
  7275   008FEE  6F64               	movwf	___fleq@ff2& (0+255),b
  7276   008FF0  0E00               	movlw	0
  7277   008FF2  6F65               	movwf	(___fleq@ff2+1)& (0+255),b
  7278   008FF4  0E00               	movlw	0
  7279   008FF6  6F66               	movwf	(___fleq@ff2+2)& (0+255),b
  7280   008FF8  0E00               	movlw	0
  7281   008FFA  6F67               	movwf	(___fleq@ff2+3)& (0+255),b
  7282   008FFC                     l4841:
  7283                           
  7284                           ; BSR set to: 0
  7285   008FFC  5164               	movf	___fleq@ff2& (0+255),w,b
  7286   008FFE  1960               	xorwf	___fleq@ff1& (0+255),w,b
  7287   009000  E10F               	bnz	u5950
  7288   009002  5165               	movf	(___fleq@ff2+1)& (0+255),w,b
  7289   009004  1961               	xorwf	(___fleq@ff1+1)& (0+255),w,b
  7290   009006  E10C               	bnz	u5950
  7291   009008  5166               	movf	(___fleq@ff2+2)& (0+255),w,b
  7292   00900A  1962               	xorwf	(___fleq@ff1+2)& (0+255),w,b
  7293   00900C  E109               	bnz	u5950
  7294   00900E  5167               	movf	(___fleq@ff2+3)& (0+255),w,b
  7295   009010  1963               	xorwf	(___fleq@ff1+3)& (0+255),w,b
  7296   009012  B4D8               	btfsc	status,2,c
  7297   009014  EF0E  F048         	goto	u5951
  7298   009018  EF10  F048         	goto	u5950
  7299   00901C                     u5951:
  7300   00901C  EF13  F048         	goto	l4845
  7301   009020                     u5950:
  7302   009020                     
  7303                           ; BSR set to: 0
  7304   009020  90D8               	bcf	status,0,c
  7305   009022  EF14  F048         	goto	l436
  7306   009026                     l4845:
  7307                           
  7308                           ; BSR set to: 0
  7309   009026  80D8               	bsf	status,0,c
  7310   009028                     l436:
  7311                           
  7312                           ; BSR set to: 0
  7313   009028  0012               	return		;funcret
  7314   00902A                     __end_of___fleq:
  7315                           	callstack 0
  7316                           
  7317 ;; *************** function ___fldiv *****************
  7318 ;; Defined at:
  7319 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;  b               4    0[BANK0 ] unsigned char 
  7322 ;;  a               4    4[BANK0 ] unsigned char 
  7323 ;; Auto vars:     Size  Location     Type
  7324 ;;  grs             4   19[BANK0 ] unsigned long 
  7325 ;;  rem             4   12[BANK0 ] unsigned long 
  7326 ;;  new_exp         2   17[BANK0 ] short 
  7327 ;;  aexp            1   24[BANK0 ] unsigned char 
  7328 ;;  bexp            1   23[BANK0 ] unsigned char 
  7329 ;;  sign            1   16[BANK0 ] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  4    0[BANK0 ] unsigned char 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7339 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7340 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7342 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7343 ;;Total ram usage:       25 bytes
  7344 ;; Hardware stack levels used: 1
  7345 ;; Hardware stack levels required when called: 2
  7346 ;; This function calls:
  7347 ;;		Nothing
  7348 ;; This function is called by:
  7349 ;;		_efgtoa
  7350 ;; This function uses a non-reentrant model
  7351 ;;
  7352                           
  7353                           	psect	text18
  7354   0077EE                     __ptext18:
  7355                           	callstack 0
  7356   0077EE                     ___fldiv:
  7357                           	callstack 24
  7358   0077EE  0100               	movlb	0	; () banked
  7359   0077F0  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7360   0077F2  0B80               	andlw	128
  7361   0077F4  6F70               	movwf	___fldiv@sign& (0+255),b
  7362   0077F6  5163               	movf	(___fldiv@b+3)& (0+255),w,b
  7363   0077F8  2563               	addwf	(___fldiv@b+3)& (0+255),w,b
  7364   0077FA  6F77               	movwf	___fldiv@bexp& (0+255),b
  7365   0077FC                     
  7366                           ; BSR set to: 0
  7367   0077FC  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7368   0077FE  EF03  F03C         	goto	u5391
  7369   007802  EF05  F03C         	goto	u5390
  7370   007806                     u5391:
  7371   007806  EF06  F03C         	goto	l4489
  7372   00780A                     u5390:
  7373   00780A                     
  7374                           ; BSR set to: 0
  7375   00780A  8177               	bsf	___fldiv@bexp& (0+255),0,b
  7376   00780C                     l4489:
  7377                           
  7378                           ; BSR set to: 0
  7379   00780C  5177               	movf	___fldiv@bexp& (0+255),w,b
  7380   00780E  B4D8               	btfsc	status,2,c
  7381   007810  EF0C  F03C         	goto	u5401
  7382   007814  EF0E  F03C         	goto	u5400
  7383   007818                     u5401:
  7384   007818  EF22  F03C         	goto	l4499
  7385   00781C                     u5400:
  7386   00781C                     
  7387                           ; BSR set to: 0
  7388   00781C  2977               	incf	___fldiv@bexp& (0+255),w,b
  7389   00781E  A4D8               	btfss	status,2,c
  7390   007820  EF14  F03C         	goto	u5411
  7391   007824  EF16  F03C         	goto	u5410
  7392   007828                     u5411:
  7393   007828  EF1E  F03C         	goto	l4495
  7394   00782C                     u5410:
  7395   00782C                     
  7396                           ; BSR set to: 0
  7397   00782C  0E00               	movlw	0
  7398   00782E  6F60               	movwf	___fldiv@b& (0+255),b
  7399   007830  0E00               	movlw	0
  7400   007832  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7401   007834  0E00               	movlw	0
  7402   007836  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7403   007838  0E00               	movlw	0
  7404   00783A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7405   00783C                     l4495:
  7406                           
  7407                           ; BSR set to: 0
  7408   00783C  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7409   00783E                     
  7410                           ; BSR set to: 0
  7411   00783E  6B63               	clrf	(___fldiv@b+3)& (0+255),b
  7412   007840  EF2A  F03C         	goto	l4501
  7413   007844                     l4499:
  7414                           
  7415                           ; BSR set to: 0
  7416   007844  0E00               	movlw	0
  7417   007846  6F60               	movwf	___fldiv@b& (0+255),b
  7418   007848  0E00               	movlw	0
  7419   00784A  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7420   00784C  0E00               	movlw	0
  7421   00784E  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7422   007850  0E00               	movlw	0
  7423   007852  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7424   007854                     l4501:
  7425                           
  7426                           ; BSR set to: 0
  7427   007854  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7428   007856  0B80               	andlw	128
  7429   007858  1B70               	xorwf	___fldiv@sign& (0+255),f,b
  7430   00785A                     
  7431                           ; BSR set to: 0
  7432   00785A  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7433   00785C  2567               	addwf	(___fldiv@a+3)& (0+255),w,b
  7434   00785E  6F78               	movwf	___fldiv@aexp& (0+255),b
  7435   007860                     
  7436                           ; BSR set to: 0
  7437   007860  AF66               	btfss	(___fldiv@a+2)& (0+255),7,b
  7438   007862  EF35  F03C         	goto	u5421
  7439   007866  EF37  F03C         	goto	u5420
  7440   00786A                     u5421:
  7441   00786A  EF38  F03C         	goto	l4509
  7442   00786E                     u5420:
  7443   00786E                     
  7444                           ; BSR set to: 0
  7445   00786E  8178               	bsf	___fldiv@aexp& (0+255),0,b
  7446   007870                     l4509:
  7447                           
  7448                           ; BSR set to: 0
  7449   007870  5178               	movf	___fldiv@aexp& (0+255),w,b
  7450   007872  B4D8               	btfsc	status,2,c
  7451   007874  EF3E  F03C         	goto	u5431
  7452   007878  EF40  F03C         	goto	u5430
  7453   00787C                     u5431:
  7454   00787C  EF54  F03C         	goto	l4519
  7455   007880                     u5430:
  7456   007880                     
  7457                           ; BSR set to: 0
  7458   007880  2978               	incf	___fldiv@aexp& (0+255),w,b
  7459   007882  A4D8               	btfss	status,2,c
  7460   007884  EF46  F03C         	goto	u5441
  7461   007888  EF48  F03C         	goto	u5440
  7462   00788C                     u5441:
  7463   00788C  EF50  F03C         	goto	l4515
  7464   007890                     u5440:
  7465   007890                     
  7466                           ; BSR set to: 0
  7467   007890  0E00               	movlw	0
  7468   007892  6F64               	movwf	___fldiv@a& (0+255),b
  7469   007894  0E00               	movlw	0
  7470   007896  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7471   007898  0E00               	movlw	0
  7472   00789A  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7473   00789C  0E00               	movlw	0
  7474   00789E  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7475   0078A0                     l4515:
  7476                           
  7477                           ; BSR set to: 0
  7478   0078A0  8F66               	bsf	(___fldiv@a+2)& (0+255),7,b
  7479   0078A2                     
  7480                           ; BSR set to: 0
  7481   0078A2  6B67               	clrf	(___fldiv@a+3)& (0+255),b
  7482   0078A4  EF5C  F03C         	goto	l4521
  7483   0078A8                     l4519:
  7484                           
  7485                           ; BSR set to: 0
  7486   0078A8  0E00               	movlw	0
  7487   0078AA  6F64               	movwf	___fldiv@a& (0+255),b
  7488   0078AC  0E00               	movlw	0
  7489   0078AE  6F65               	movwf	(___fldiv@a+1)& (0+255),b
  7490   0078B0  0E00               	movlw	0
  7491   0078B2  6F66               	movwf	(___fldiv@a+2)& (0+255),b
  7492   0078B4  0E00               	movlw	0
  7493   0078B6  6F67               	movwf	(___fldiv@a+3)& (0+255),b
  7494   0078B8                     l4521:
  7495                           
  7496                           ; BSR set to: 0
  7497   0078B8  5164               	movf	___fldiv@a& (0+255),w,b
  7498   0078BA  1165               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7499   0078BC  1166               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7500   0078BE  1167               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7501   0078C0  A4D8               	btfss	status,2,c
  7502   0078C2  EF65  F03C         	goto	u5451
  7503   0078C6  EF67  F03C         	goto	u5450
  7504   0078CA                     u5451:
  7505   0078CA  EF7F  F03C         	goto	l4533
  7506   0078CE                     u5450:
  7507   0078CE                     
  7508                           ; BSR set to: 0
  7509   0078CE  0E00               	movlw	0
  7510   0078D0  6F60               	movwf	___fldiv@b& (0+255),b
  7511   0078D2  0E00               	movlw	0
  7512   0078D4  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7513   0078D6  0E00               	movlw	0
  7514   0078D8  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7515   0078DA  0E00               	movlw	0
  7516   0078DC  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7517   0078DE                     
  7518                           ; BSR set to: 0
  7519   0078DE  0E80               	movlw	128
  7520   0078E0  1362               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7521   0078E2  0E7F               	movlw	127
  7522   0078E4  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7523   0078E6                     l4527:
  7524                           
  7525                           ; BSR set to: 0
  7526   0078E6  5170               	movf	___fldiv@sign& (0+255),w,b
  7527   0078E8  1363               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7528   0078EA                     
  7529                           ; BSR set to: 0
  7530   0078EA  C060  F060         	movff	___fldiv@b,?___fldiv
  7531   0078EE  C061  F061         	movff	___fldiv@b+1,?___fldiv+1
  7532   0078F2  C062  F062         	movff	___fldiv@b+2,?___fldiv+2
  7533   0078F6  C063  F063         	movff	___fldiv@b+3,?___fldiv+3
  7534   0078FA  EFBF  F03D         	goto	l759
  7535   0078FE                     l4533:
  7536                           
  7537                           ; BSR set to: 0
  7538   0078FE  5177               	movf	___fldiv@bexp& (0+255),w,b
  7539   007900  A4D8               	btfss	status,2,c
  7540   007902  EF85  F03C         	goto	u5461
  7541   007906  EF87  F03C         	goto	u5460
  7542   00790A                     u5461:
  7543   00790A  EF91  F03C         	goto	l4541
  7544   00790E                     u5460:
  7545   00790E                     
  7546                           ; BSR set to: 0
  7547   00790E  0E00               	movlw	0
  7548   007910  6F60               	movwf	?___fldiv& (0+255),b
  7549   007912  0E00               	movlw	0
  7550   007914  6F61               	movwf	(?___fldiv+1)& (0+255),b
  7551   007916  0E00               	movlw	0
  7552   007918  6F62               	movwf	(?___fldiv+2)& (0+255),b
  7553   00791A  0E00               	movlw	0
  7554   00791C  6F63               	movwf	(?___fldiv+3)& (0+255),b
  7555   00791E  EFBF  F03D         	goto	l759
  7556   007922                     l4541:
  7557                           
  7558                           ; BSR set to: 0
  7559   007922  5178               	movf	___fldiv@aexp& (0+255),w,b
  7560   007924  C077  F068         	movff	___fldiv@bexp,??___fldiv
  7561   007928  6B69               	clrf	(??___fldiv+1)& (0+255),b
  7562   00792A  5F68               	subwf	??___fldiv& (0+255),f,b
  7563   00792C  0E00               	movlw	0
  7564   00792E  5B69               	subwfb	(??___fldiv+1)& (0+255),f,b
  7565   007930  0E7F               	movlw	127
  7566   007932  2568               	addwf	??___fldiv& (0+255),w,b
  7567   007934  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7568   007936  0E00               	movlw	0
  7569   007938  2169               	addwfc	(??___fldiv+1)& (0+255),w,b
  7570   00793A  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7571   00793C                     
  7572                           ; BSR set to: 0
  7573   00793C  C060  F06C         	movff	___fldiv@b,___fldiv@rem
  7574   007940  C061  F06D         	movff	___fldiv@b+1,___fldiv@rem+1
  7575   007944  C062  F06E         	movff	___fldiv@b+2,___fldiv@rem+2
  7576   007948  C063  F06F         	movff	___fldiv@b+3,___fldiv@rem+3
  7577   00794C                     
  7578                           ; BSR set to: 0
  7579   00794C  0E00               	movlw	0
  7580   00794E  6F60               	movwf	___fldiv@b& (0+255),b
  7581   007950  0E00               	movlw	0
  7582   007952  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7583   007954  0E00               	movlw	0
  7584   007956  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7585   007958  0E00               	movlw	0
  7586   00795A  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7587   00795C                     
  7588                           ; BSR set to: 0
  7589   00795C  0E00               	movlw	0
  7590   00795E  6F73               	movwf	___fldiv@grs& (0+255),b
  7591   007960  0E00               	movlw	0
  7592   007962  6F74               	movwf	(___fldiv@grs+1)& (0+255),b
  7593   007964  0E00               	movlw	0
  7594   007966  6F75               	movwf	(___fldiv@grs+2)& (0+255),b
  7595   007968  0E00               	movlw	0
  7596   00796A  6F76               	movwf	(___fldiv@grs+3)& (0+255),b
  7597   00796C                     
  7598                           ; BSR set to: 0
  7599   00796C  6B78               	clrf	___fldiv@aexp& (0+255),b
  7600   00796E  EFF1  F03C         	goto	l761
  7601   007972                     l4551:
  7602                           
  7603                           ; BSR set to: 0
  7604   007972  5178               	movf	___fldiv@aexp& (0+255),w,b
  7605   007974  B4D8               	btfsc	status,2,c
  7606   007976  EFBF  F03C         	goto	u5471
  7607   00797A  EFC1  F03C         	goto	u5470
  7608   00797E                     u5471:
  7609   00797E  EFD8  F03C         	goto	l4559
  7610   007982                     u5470:
  7611   007982                     
  7612                           ; BSR set to: 0
  7613   007982  90D8               	bcf	status,0,c
  7614   007984  376C               	rlcf	___fldiv@rem& (0+255),f,b
  7615   007986  376D               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7616   007988  376E               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7617   00798A  376F               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7618   00798C  90D8               	bcf	status,0,c
  7619   00798E  3760               	rlcf	___fldiv@b& (0+255),f,b
  7620   007990  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7621   007992  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7622   007994  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7623   007996                     
  7624                           ; BSR set to: 0
  7625   007996  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7626   007998  EFD0  F03C         	goto	u5481
  7627   00799C  EFD2  F03C         	goto	u5480
  7628   0079A0                     u5481:
  7629   0079A0  EFD3  F03C         	goto	l764
  7630   0079A4                     u5480:
  7631   0079A4                     
  7632                           ; BSR set to: 0
  7633   0079A4  8160               	bsf	___fldiv@b& (0+255),0,b
  7634   0079A6                     l764:
  7635                           
  7636                           ; BSR set to: 0
  7637   0079A6  90D8               	bcf	status,0,c
  7638   0079A8  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7639   0079AA  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7640   0079AC  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7641   0079AE  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7642   0079B0                     l4559:
  7643                           
  7644                           ; BSR set to: 0
  7645   0079B0  5164               	movf	___fldiv@a& (0+255),w,b
  7646   0079B2  5D6C               	subwf	___fldiv@rem& (0+255),w,b
  7647   0079B4  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7648   0079B6  596D               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7649   0079B8  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7650   0079BA  596E               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7651   0079BC  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7652   0079BE  596F               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7653   0079C0  A0D8               	btfss	status,0,c
  7654   0079C2  EFE5  F03C         	goto	u5491
  7655   0079C6  EFE7  F03C         	goto	u5490
  7656   0079CA                     u5491:
  7657   0079CA  EFF0  F03C         	goto	l4565
  7658   0079CE                     u5490:
  7659   0079CE                     
  7660                           ; BSR set to: 0
  7661   0079CE  8D76               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7662   0079D0                     
  7663                           ; BSR set to: 0
  7664   0079D0  5164               	movf	___fldiv@a& (0+255),w,b
  7665   0079D2  5F6C               	subwf	___fldiv@rem& (0+255),f,b
  7666   0079D4  5165               	movf	(___fldiv@a+1)& (0+255),w,b
  7667   0079D6  5B6D               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7668   0079D8  5166               	movf	(___fldiv@a+2)& (0+255),w,b
  7669   0079DA  5B6E               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7670   0079DC  5167               	movf	(___fldiv@a+3)& (0+255),w,b
  7671   0079DE  5B6F               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7672   0079E0                     l4565:
  7673                           
  7674                           ; BSR set to: 0
  7675   0079E0  2B78               	incf	___fldiv@aexp& (0+255),f,b
  7676   0079E2                     l761:
  7677                           
  7678                           ; BSR set to: 0
  7679   0079E2  0E19               	movlw	25
  7680   0079E4  6578               	cpfsgt	___fldiv@aexp& (0+255),b
  7681   0079E6  EFF7  F03C         	goto	u5501
  7682   0079EA  EFF9  F03C         	goto	u5500
  7683   0079EE                     u5501:
  7684   0079EE  EFB9  F03C         	goto	l4551
  7685   0079F2                     u5500:
  7686   0079F2                     
  7687                           ; BSR set to: 0
  7688   0079F2  516C               	movf	___fldiv@rem& (0+255),w,b
  7689   0079F4  116D               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7690   0079F6  116E               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7691   0079F8  116F               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7692   0079FA  B4D8               	btfsc	status,2,c
  7693   0079FC  EF02  F03D         	goto	u5511
  7694   007A00  EF04  F03D         	goto	u5510
  7695   007A04                     u5511:
  7696   007A04  EF1C  F03D         	goto	l4577
  7697   007A08                     u5510:
  7698   007A08                     
  7699                           ; BSR set to: 0
  7700   007A08  8173               	bsf	___fldiv@grs& (0+255),0,b
  7701   007A0A  EF1C  F03D         	goto	l4577
  7702   007A0E                     l4571:
  7703                           
  7704                           ; BSR set to: 0
  7705   007A0E  90D8               	bcf	status,0,c
  7706   007A10  3760               	rlcf	___fldiv@b& (0+255),f,b
  7707   007A12  3761               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7708   007A14  3762               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7709   007A16  3763               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7710   007A18                     
  7711                           ; BSR set to: 0
  7712   007A18  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7713   007A1A  EF11  F03D         	goto	u5521
  7714   007A1E  EF13  F03D         	goto	u5520
  7715   007A22                     u5521:
  7716   007A22  EF14  F03D         	goto	l770
  7717   007A26                     u5520:
  7718   007A26                     
  7719                           ; BSR set to: 0
  7720   007A26  8160               	bsf	___fldiv@b& (0+255),0,b
  7721   007A28                     l770:
  7722                           
  7723                           ; BSR set to: 0
  7724   007A28  90D8               	bcf	status,0,c
  7725   007A2A  3773               	rlcf	___fldiv@grs& (0+255),f,b
  7726   007A2C  3774               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7727   007A2E  3775               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7728   007A30  3776               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7729   007A32  0771               	decf	___fldiv@new_exp& (0+255),f,b
  7730   007A34  A0D8               	btfss	status,0,c
  7731   007A36  0772               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7732   007A38                     l4577:
  7733                           
  7734                           ; BSR set to: 0
  7735   007A38  AF62               	btfss	(___fldiv@b+2)& (0+255),7,b
  7736   007A3A  EF21  F03D         	goto	u5531
  7737   007A3E  EF23  F03D         	goto	u5530
  7738   007A42                     u5531:
  7739   007A42  EF07  F03D         	goto	l4571
  7740   007A46                     u5530:
  7741   007A46                     
  7742                           ; BSR set to: 0
  7743   007A46  6B78               	clrf	___fldiv@aexp& (0+255),b
  7744   007A48  AF76               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7745   007A4A  EF29  F03D         	goto	u5541
  7746   007A4E  EF2B  F03D         	goto	u5540
  7747   007A52                     u5541:
  7748   007A52  EF4F  F03D         	goto	l772
  7749   007A56                     u5540:
  7750   007A56                     
  7751                           ; BSR set to: 0
  7752   007A56  0EFF               	movlw	255
  7753   007A58  1573               	andwf	___fldiv@grs& (0+255),w,b
  7754   007A5A  6F68               	movwf	??___fldiv& (0+255),b
  7755   007A5C  0EFF               	movlw	255
  7756   007A5E  1574               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7757   007A60  6F69               	movwf	(??___fldiv+1)& (0+255),b
  7758   007A62  0EFF               	movlw	255
  7759   007A64  1575               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7760   007A66  6F6A               	movwf	(??___fldiv+2)& (0+255),b
  7761   007A68  0E7F               	movlw	127
  7762   007A6A  1576               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7763   007A6C  6F6B               	movwf	(??___fldiv+3)& (0+255),b
  7764   007A6E  5168               	movf	??___fldiv& (0+255),w,b
  7765   007A70  1169               	iorwf	(??___fldiv+1)& (0+255),w,b
  7766   007A72  116A               	iorwf	(??___fldiv+2)& (0+255),w,b
  7767   007A74  116B               	iorwf	(??___fldiv+3)& (0+255),w,b
  7768   007A76  B4D8               	btfsc	status,2,c
  7769   007A78  EF40  F03D         	goto	u5551
  7770   007A7C  EF42  F03D         	goto	u5550
  7771   007A80                     u5551:
  7772   007A80  EF46  F03D         	goto	l773
  7773   007A84                     u5550:
  7774   007A84                     l4581:
  7775                           
  7776                           ; BSR set to: 0
  7777   007A84  0E01               	movlw	1
  7778   007A86  6F78               	movwf	___fldiv@aexp& (0+255),b
  7779   007A88  EF4F  F03D         	goto	l772
  7780   007A8C                     l773:
  7781                           
  7782                           ; BSR set to: 0
  7783   007A8C  A160               	btfss	___fldiv@b& (0+255),0,b
  7784   007A8E  EF4B  F03D         	goto	u5561
  7785   007A92  EF4D  F03D         	goto	u5560
  7786   007A96                     u5561:
  7787   007A96  EF4F  F03D         	goto	l772
  7788   007A9A                     u5560:
  7789   007A9A  EF42  F03D         	goto	l4581
  7790   007A9E                     l772:
  7791                           
  7792                           ; BSR set to: 0
  7793   007A9E  5178               	movf	___fldiv@aexp& (0+255),w,b
  7794   007AA0  B4D8               	btfsc	status,2,c
  7795   007AA2  EF55  F03D         	goto	u5571
  7796   007AA6  EF57  F03D         	goto	u5570
  7797   007AAA                     u5571:
  7798   007AAA  EF7B  F03D         	goto	l4593
  7799   007AAE                     u5570:
  7800   007AAE                     
  7801                           ; BSR set to: 0
  7802   007AAE  0E01               	movlw	1
  7803   007AB0  2760               	addwf	___fldiv@b& (0+255),f,b
  7804   007AB2  0E00               	movlw	0
  7805   007AB4  2361               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7806   007AB6  2362               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7807   007AB8  2363               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7808   007ABA                     
  7809                           ; BSR set to: 0
  7810   007ABA  A163               	btfss	(___fldiv@b+3)& (0+255),0,b
  7811   007ABC  EF62  F03D         	goto	u5581
  7812   007AC0  EF64  F03D         	goto	u5580
  7813   007AC4                     u5581:
  7814   007AC4  EF7B  F03D         	goto	l4593
  7815   007AC8                     u5580:
  7816   007AC8                     
  7817                           ; BSR set to: 0
  7818   007AC8  C060  F068         	movff	___fldiv@b,??___fldiv
  7819   007ACC  C061  F069         	movff	___fldiv@b+1,??___fldiv+1
  7820   007AD0  C062  F06A         	movff	___fldiv@b+2,??___fldiv+2
  7821   007AD4  C063  F06B         	movff	___fldiv@b+3,??___fldiv+3
  7822   007AD8  356B               	rlcf	(??___fldiv+3)& (0+255),w,b
  7823   007ADA  336B               	rrcf	(??___fldiv+3)& (0+255),f,b
  7824   007ADC  336A               	rrcf	(??___fldiv+2)& (0+255),f,b
  7825   007ADE  3369               	rrcf	(??___fldiv+1)& (0+255),f,b
  7826   007AE0  3368               	rrcf	??___fldiv& (0+255),f,b
  7827   007AE2  C068  F060         	movff	??___fldiv,___fldiv@b
  7828   007AE6  C069  F061         	movff	??___fldiv+1,___fldiv@b+1
  7829   007AEA  C06A  F062         	movff	??___fldiv+2,___fldiv@b+2
  7830   007AEE  C06B  F063         	movff	??___fldiv+3,___fldiv@b+3
  7831   007AF2                     
  7832                           ; BSR set to: 0
  7833   007AF2  4B71               	infsnz	___fldiv@new_exp& (0+255),f,b
  7834   007AF4  2B72               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7835   007AF6                     l4593:
  7836                           
  7837                           ; BSR set to: 0
  7838   007AF6  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7839   007AF8  EF86  F03D         	goto	u5591
  7840   007AFC  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7841   007AFE  E108               	bnz	u5590
  7842   007B00  2971               	incf	___fldiv@new_exp& (0+255),w,b
  7843   007B02  A0D8               	btfss	status,0,c
  7844   007B04  EF86  F03D         	goto	u5591
  7845   007B08  EF88  F03D         	goto	u5590
  7846   007B0C                     u5591:
  7847   007B0C  EF93  F03D         	goto	l4597
  7848   007B10                     u5590:
  7849   007B10                     
  7850                           ; BSR set to: 0
  7851   007B10  0E00               	movlw	0
  7852   007B12  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7853   007B14  6971               	setf	___fldiv@new_exp& (0+255),b
  7854   007B16  0E00               	movlw	0
  7855   007B18  6F60               	movwf	___fldiv@b& (0+255),b
  7856   007B1A  0E00               	movlw	0
  7857   007B1C  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7858   007B1E  0E00               	movlw	0
  7859   007B20  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7860   007B22  0E00               	movlw	0
  7861   007B24  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7862   007B26                     l4597:
  7863                           
  7864                           ; BSR set to: 0
  7865   007B26  BF72               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7866   007B28  EFA0  F03D         	goto	u5600
  7867   007B2C  5172               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7868   007B2E  E106               	bnz	u5601
  7869   007B30  0571               	decf	___fldiv@new_exp& (0+255),w,b
  7870   007B32  B0D8               	btfsc	status,0,c
  7871   007B34  EF9E  F03D         	goto	u5601
  7872   007B38  EFA0  F03D         	goto	u5600
  7873   007B3C                     u5601:
  7874   007B3C  EFAD  F03D         	goto	l4603
  7875   007B40                     u5600:
  7876   007B40                     
  7877                           ; BSR set to: 0
  7878   007B40  0E00               	movlw	0
  7879   007B42  6F72               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7880   007B44  0E00               	movlw	0
  7881   007B46  6F71               	movwf	___fldiv@new_exp& (0+255),b
  7882   007B48  0E00               	movlw	0
  7883   007B4A  6F60               	movwf	___fldiv@b& (0+255),b
  7884   007B4C  0E00               	movlw	0
  7885   007B4E  6F61               	movwf	(___fldiv@b+1)& (0+255),b
  7886   007B50  0E00               	movlw	0
  7887   007B52  6F62               	movwf	(___fldiv@b+2)& (0+255),b
  7888   007B54  0E00               	movlw	0
  7889   007B56  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7890   007B58                     
  7891                           ; BSR set to: 0
  7892   007B58  6B70               	clrf	___fldiv@sign& (0+255),b
  7893   007B5A                     l4603:
  7894                           
  7895                           ; BSR set to: 0
  7896   007B5A  C071  F077         	movff	___fldiv@new_exp,___fldiv@bexp
  7897   007B5E                     
  7898                           ; BSR set to: 0
  7899   007B5E  A177               	btfss	___fldiv@bexp& (0+255),0,b
  7900   007B60  EFB4  F03D         	goto	u5611
  7901   007B64  EFB6  F03D         	goto	u5610
  7902   007B68                     u5611:
  7903   007B68  EFB9  F03D         	goto	l4609
  7904   007B6C                     u5610:
  7905   007B6C                     
  7906                           ; BSR set to: 0
  7907   007B6C  8F62               	bsf	(___fldiv@b+2)& (0+255),7,b
  7908   007B6E  EFBA  F03D         	goto	l4611
  7909   007B72                     l4609:
  7910                           
  7911                           ; BSR set to: 0
  7912   007B72  9F62               	bcf	(___fldiv@b+2)& (0+255),7,b
  7913   007B74                     l4611:
  7914                           
  7915                           ; BSR set to: 0
  7916   007B74  90D8               	bcf	status,0,c
  7917   007B76  3177               	rrcf	___fldiv@bexp& (0+255),w,b
  7918   007B78  6F63               	movwf	(___fldiv@b+3)& (0+255),b
  7919   007B7A  EF73  F03C         	goto	l4527
  7920   007B7E                     l759:
  7921                           
  7922                           ; BSR set to: 0
  7923   007B7E  0012               	return		;funcret
  7924   007B80                     __end_of___fldiv:
  7925                           	callstack 0
  7926                           
  7927 ;; *************** function _dtoa *****************
  7928 ;; Defined at:
  7929 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;  fp              1   22[BANK0 ] PTR struct _IO_FILE
  7932 ;;		 -> sprintf@f(11), 
  7933 ;;  d               2   23[BANK0 ] int 
  7934 ;; Auto vars:     Size  Location     Type
  7935 ;;  i               2   32[BANK0 ] int 
  7936 ;;  p               2   29[BANK0 ] int 
  7937 ;;  w               2   27[BANK0 ] int 
  7938 ;;  s               1   31[BANK0 ] unsigned char 
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  1    wreg      void 
  7941 ;; Registers used:
  7942 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7948 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7949 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7952 ;;Total ram usage:       12 bytes
  7953 ;; Hardware stack levels used: 1
  7954 ;; Hardware stack levels required when called: 6
  7955 ;; This function calls:
  7956 ;;		___awdiv
  7957 ;;		___awmod
  7958 ;;		_abs
  7959 ;;		_pad
  7960 ;; This function is called by:
  7961 ;;		_vfpfcnvrt
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text19
  7966   008702                     __ptext19:
  7967                           	callstack 0
  7968   008702                     _dtoa:
  7969                           	callstack 21
  7970   008702                     
  7971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  7972   008702  0100               	movlb	0	; () banked
  7973   008704  BF78               	btfsc	(dtoa@d+1)& (0+255),7,b
  7974   008706  EF87  F043         	goto	u6361
  7975   00870A  EF8A  F043         	goto	u6360
  7976   00870E                     u6361:
  7977   00870E  0E01               	movlw	1
  7978   008710  EF8B  F043         	goto	u6370
  7979   008714                     u6360:
  7980   008714  0E00               	movlw	0
  7981   008716                     u6370:
  7982   008716  6F7F               	movwf	dtoa@s& (0+255),b
  7983                           
  7984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  7985   008718  BFF2               	btfsc	(_prec+1)& (0+255),7,b
  7986   00871A  EF93  F043         	goto	u6380
  7987   00871E  EF91  F043         	goto	u6381
  7988   008722                     u6381:
  7989   008722  EF99  F043         	goto	l894
  7990   008726                     u6380:
  7991   008726                     
  7992                           ; BSR set to: 0
  7993   008726  0E00               	movlw	0
  7994   008728  6F7E               	movwf	(dtoa@p+1)& (0+255),b
  7995   00872A  0E01               	movlw	1
  7996   00872C  6F7D               	movwf	dtoa@p& (0+255),b
  7997   00872E  EF9D  F043         	goto	l896
  7998   008732                     l894:
  7999                           
  8000                           ; BSR set to: 0
  8001   008732  C0F1  F07D         	movff	_prec,dtoa@p
  8002   008736  C0F2  F07E         	movff	_prec+1,dtoa@p+1
  8003   00873A                     l896:
  8004                           
  8005                           ; BSR set to: 0
  8006                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  8007   00873A  C0EF  F07B         	movff	_width,dtoa@w
  8008   00873E  C0F0  F07C         	movff	_width+1,dtoa@w+1
  8009   008742                     
  8010                           ; BSR set to: 0
  8011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  8012   008742  517F               	movf	dtoa@s& (0+255),w,b
  8013   008744  B4D8               	btfsc	status,2,c
  8014   008746  EFA7  F043         	goto	u6391
  8015   00874A  EFA9  F043         	goto	u6390
  8016   00874E                     u6391:
  8017   00874E  EFC0  F043         	goto	l897
  8018   008752                     u6390:
  8019   008752                     
  8020                           ; BSR set to: 0
  8021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  8022   008752  077B               	decf	dtoa@w& (0+255),f,b
  8023   008754  A0D8               	btfss	status,0,c
  8024   008756  077C               	decf	(dtoa@w+1)& (0+255),f,b
  8025   008758                     
  8026                           ; BSR set to: 0
  8027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  8028   008758  517F               	movf	dtoa@s& (0+255),w,b
  8029   00875A  A4D8               	btfss	status,2,c
  8030   00875C  EFB2  F043         	goto	u6401
  8031   008760  EFB4  F043         	goto	u6400
  8032   008764                     u6401:
  8033   008764  EFBA  F043         	goto	l5045
  8034   008768                     u6400:
  8035   008768                     
  8036                           ; BSR set to: 0
  8037   008768  0E00               	movlw	0
  8038   00876A  6F7A               	movwf	(_dtoa$1270+1)& (0+255),b
  8039   00876C  0E2B               	movlw	43
  8040   00876E  6F79               	movwf	_dtoa$1270& (0+255),b
  8041   008770  EFBE  F043         	goto	l5047
  8042   008774                     l5045:
  8043                           
  8044                           ; BSR set to: 0
  8045   008774  0E00               	movlw	0
  8046   008776  6F7A               	movwf	(_dtoa$1270+1)& (0+255),b
  8047   008778  0E2D               	movlw	45
  8048   00877A  6F79               	movwf	_dtoa$1270& (0+255),b
  8049   00877C                     l5047:
  8050                           
  8051                           ; BSR set to: 0
  8052   00877C  C079  F07F         	movff	_dtoa$1270,dtoa@s
  8053   008780                     l897:
  8054                           
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  8057   008780  0E00               	movlw	0
  8058   008782  6F81               	movwf	(dtoa@i+1)& (0+255),b
  8059   008784  0E4F               	movlw	79
  8060   008786  6F80               	movwf	dtoa@i& (0+255),b
  8061   008788                     
  8062                           ; BSR set to: 0
  8063                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  8064   008788  0101               	movlb	1	; () banked
  8065   00878A  6B4F               	clrf	(_dbuf+79)& (0+255),b
  8066                           
  8067                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  8068   00878C  EFF9  F043         	goto	l5061
  8069   008790                     l5051:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  8073   008790  0780               	decf	dtoa@i& (0+255),f,b
  8074   008792  A0D8               	btfss	status,0,c
  8075   008794  0781               	decf	(dtoa@i+1)& (0+255),f,b
  8076   008796                     
  8077                           ; BSR set to: 0
  8078                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  8079   008796  0E00               	movlw	low _dbuf
  8080   008798  2580               	addwf	dtoa@i& (0+255),w,b
  8081   00879A  6ED9               	movwf	fsr2l,c
  8082   00879C  0E01               	movlw	high _dbuf
  8083   00879E  2181               	addwfc	(dtoa@i+1)& (0+255),w,b
  8084   0087A0  6EDA               	movwf	fsr2h,c
  8085   0087A2  C077  F060         	movff	dtoa@d,___awmod@dividend
  8086   0087A6  C078  F061         	movff	dtoa@d+1,___awmod@dividend+1
  8087   0087AA  0E00               	movlw	0
  8088   0087AC  6F63               	movwf	(___awmod@divisor+1)& (0+255),b
  8089   0087AE  0E0A               	movlw	10
  8090   0087B0  6F62               	movwf	___awmod@divisor& (0+255),b
  8091   0087B2  EC67  F047         	call	___awmod	;wreg free
  8092   0087B6  C060  F066         	movff	?___awmod,abs@a
  8093   0087BA  C061  F067         	movff	?___awmod+1,abs@a+1
  8094   0087BE  EC4B  F04A         	call	_abs	;wreg free
  8095   0087C2  0100               	movlb	0	; () banked
  8096   0087C4  5166               	movf	?_abs& (0+255),w,b
  8097   0087C6  0F30               	addlw	48
  8098   0087C8  6EDF               	movwf	indf2,c
  8099   0087CA                     
  8100                           ; BSR set to: 0
  8101                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 567:         --p;
  8102   0087CA  077D               	decf	dtoa@p& (0+255),f,b
  8103   0087CC  A0D8               	btfss	status,0,c
  8104   0087CE  077E               	decf	(dtoa@p+1)& (0+255),f,b
  8105   0087D0                     
  8106                           ; BSR set to: 0
  8107                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  8108   0087D0  077B               	decf	dtoa@w& (0+255),f,b
  8109   0087D2  A0D8               	btfss	status,0,c
  8110   0087D4  077C               	decf	(dtoa@w+1)& (0+255),f,b
  8111   0087D6                     
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  8114   0087D6  C077  F060         	movff	dtoa@d,___awdiv@dividend
  8115   0087DA  C078  F061         	movff	dtoa@d+1,___awdiv@dividend+1
  8116   0087DE  0E00               	movlw	0
  8117   0087E0  6F63               	movwf	(___awdiv@divisor+1)& (0+255),b
  8118   0087E2  0E0A               	movlw	10
  8119   0087E4  6F62               	movwf	___awdiv@divisor& (0+255),b
  8120   0087E6  ECA8  F046         	call	___awdiv	;wreg free
  8121   0087EA  C060  F077         	movff	?___awdiv,dtoa@d
  8122   0087EE  C061  F078         	movff	?___awdiv+1,dtoa@d+1
  8123   0087F2                     l5061:
  8124                           
  8125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  8126   0087F2  0100               	movlb	0	; () banked
  8127   0087F4  BF81               	btfsc	(dtoa@i+1)& (0+255),7,b
  8128   0087F6  EF05  F044         	goto	u6411
  8129   0087FA  5181               	movf	(dtoa@i+1)& (0+255),w,b
  8130   0087FC  E108               	bnz	u6410
  8131   0087FE  0580               	decf	dtoa@i& (0+255),w,b
  8132   008800  A0D8               	btfss	status,0,c
  8133   008802  EF05  F044         	goto	u6411
  8134   008806  EF07  F044         	goto	u6410
  8135   00880A                     u6411:
  8136   00880A  EF1D  F044         	goto	l5067
  8137   00880E                     u6410:
  8138   00880E                     
  8139                           ; BSR set to: 0
  8140   00880E  5177               	movf	dtoa@d& (0+255),w,b
  8141   008810  1178               	iorwf	(dtoa@d+1)& (0+255),w,b
  8142   008812  A4D8               	btfss	status,2,c
  8143   008814  EF0E  F044         	goto	u6421
  8144   008818  EF10  F044         	goto	u6420
  8145   00881C                     u6421:
  8146   00881C  EFC8  F043         	goto	l5051
  8147   008820                     u6420:
  8148   008820                     
  8149                           ; BSR set to: 0
  8150   008820  BF7E               	btfsc	(dtoa@p+1)& (0+255),7,b
  8151   008822  EF1D  F044         	goto	u6430
  8152   008826  517E               	movf	(dtoa@p+1)& (0+255),w,b
  8153   008828  E106               	bnz	u6431
  8154   00882A  057D               	decf	dtoa@p& (0+255),w,b
  8155   00882C  B0D8               	btfsc	status,0,c
  8156   00882E  EF1B  F044         	goto	u6431
  8157   008832  EF1D  F044         	goto	u6430
  8158   008836                     u6431:
  8159   008836  EFC8  F043         	goto	l5051
  8160   00883A                     u6430:
  8161   00883A                     l5067:
  8162                           
  8163                           ; BSR set to: 0
  8164                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  8165   00883A  517F               	movf	dtoa@s& (0+255),w,b
  8166   00883C  B4D8               	btfsc	status,2,c
  8167   00883E  EF23  F044         	goto	u6441
  8168   008842  EF25  F044         	goto	u6440
  8169   008846                     u6441:
  8170   008846  EF31  F044         	goto	l5073
  8171   00884A                     u6440:
  8172   00884A                     
  8173                           ; BSR set to: 0
  8174                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  8175   00884A  0780               	decf	dtoa@i& (0+255),f,b
  8176   00884C  A0D8               	btfss	status,0,c
  8177   00884E  0781               	decf	(dtoa@i+1)& (0+255),f,b
  8178   008850                     
  8179                           ; BSR set to: 0
  8180                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  8181   008850  0E00               	movlw	low _dbuf
  8182   008852  2580               	addwf	dtoa@i& (0+255),w,b
  8183   008854  6ED9               	movwf	fsr2l,c
  8184   008856  0E01               	movlw	high _dbuf
  8185   008858  2181               	addwfc	(dtoa@i+1)& (0+255),w,b
  8186   00885A  6EDA               	movwf	fsr2h,c
  8187   00885C  0060  F1FF  FFDF   	movff	dtoa@s,indf2
  8188   008862                     l5073:
  8189                           
  8190                           ; BSR set to: 0
  8191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  8192   008862  C076  F06E         	movff	dtoa@fp,pad@fp
  8193   008866  0E00               	movlw	low _dbuf
  8194   008868  2580               	addwf	dtoa@i& (0+255),w,b
  8195   00886A  6F6F               	movwf	pad@buf& (0+255),b
  8196   00886C  0E01               	movlw	high _dbuf
  8197   00886E  2181               	addwfc	(dtoa@i+1)& (0+255),w,b
  8198   008870  6F70               	movwf	(pad@buf+1)& (0+255),b
  8199   008872  C07B  F071         	movff	dtoa@w,pad@p
  8200   008876  C07C  F072         	movff	dtoa@w+1,pad@p+1
  8201   00887A  EC15  F048         	call	_pad	;wreg free
  8202   00887E  0012               	return		;funcret
  8203   008880                     __end_of_dtoa:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _pad *****************
  8207 ;; Defined at:
  8208 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  fp              1   14[BANK0 ] PTR struct _IO_FILE
  8211 ;;		 -> sprintf@f(11), 
  8212 ;;  buf             2   15[BANK0 ] PTR unsigned char 
  8213 ;;		 -> dbuf(80), 
  8214 ;;  p               2   17[BANK0 ] int 
  8215 ;; Auto vars:     Size  Location     Type
  8216 ;;  i               2   20[BANK0 ] int 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  1    wreg      void 
  8219 ;; Registers used:
  8220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8226 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8227 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8228 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8229 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8230 ;;Total ram usage:        8 bytes
  8231 ;; Hardware stack levels used: 1
  8232 ;; Hardware stack levels required when called: 5
  8233 ;; This function calls:
  8234 ;;		_fputc
  8235 ;;		_fputs
  8236 ;; This function is called by:
  8237 ;;		_dtoa
  8238 ;;		_efgtoa
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text20
  8243   00902A                     __ptext20:
  8244                           	callstack 0
  8245   00902A                     _pad:
  8246                           	callstack 21
  8247   00902A                     
  8248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  8249   00902A  0100               	movlb	0	; () banked
  8250   00902C  A1F5               	btfss	_flags& (0+255),0,b
  8251   00902E  EF1B  F048         	goto	u6091
  8252   009032  EF1D  F048         	goto	u6090
  8253   009036                     u6091:
  8254   009036  EF25  F048         	goto	l4927
  8255   00903A                     u6090:
  8256   00903A                     
  8257                           ; BSR set to: 0
  8258                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  8259   00903A  C06F  F068         	movff	pad@buf,fputs@s
  8260   00903E  C070  F069         	movff	pad@buf+1,fputs@s+1
  8261   009042  C06E  F06A         	movff	pad@fp,fputs@fp
  8262   009046  ECB2  F049         	call	_fputs	;wreg free
  8263   00904A                     l4927:
  8264                           
  8265                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  8266   00904A  0100               	movlb	0	; () banked
  8267   00904C  BF72               	btfsc	(pad@p+1)& (0+255),7,b
  8268   00904E  EF2D  F048         	goto	u6100
  8269   009052  EF2B  F048         	goto	u6101
  8270   009056                     u6101:
  8271   009056  EF31  F048         	goto	l885
  8272   00905A                     u6100:
  8273   00905A                     
  8274                           ; BSR set to: 0
  8275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  8276   00905A  0E00               	movlw	0
  8277   00905C  6F72               	movwf	(pad@p+1)& (0+255),b
  8278   00905E  0E00               	movlw	0
  8279   009060  6F71               	movwf	pad@p& (0+255),b
  8280   009062                     l885:
  8281                           
  8282                           ; BSR set to: 0
  8283                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  8284   009062  0E00               	movlw	0
  8285   009064  6F75               	movwf	(pad@i+1)& (0+255),b
  8286   009066  0E00               	movlw	0
  8287   009068  6F74               	movwf	pad@i& (0+255),b
  8288                           
  8289                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8290   00906A  EF42  F048         	goto	l4935
  8291   00906E                     l4931:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  8295   00906E  0E00               	movlw	0
  8296   009070  6F61               	movwf	(fputc@c+1)& (0+255),b
  8297   009072  0E20               	movlw	32
  8298   009074  6F60               	movwf	fputc@c& (0+255),b
  8299   009076  C06E  F062         	movff	pad@fp,fputc@fp
  8300   00907A  EC45  F046         	call	_fputc	;wreg free
  8301   00907E                     
  8302                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  8303   00907E  0100               	movlb	0	; () banked
  8304   009080  4B74               	infsnz	pad@i& (0+255),f,b
  8305   009082  2B75               	incf	(pad@i+1)& (0+255),f,b
  8306   009084                     l4935:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  8310   009084  5171               	movf	pad@p& (0+255),w,b
  8311   009086  5D74               	subwf	pad@i& (0+255),w,b
  8312   009088  5175               	movf	(pad@i+1)& (0+255),w,b
  8313   00908A  0A80               	xorlw	128
  8314   00908C  6F73               	movwf	??_pad& (0+255),b
  8315   00908E  5172               	movf	(pad@p+1)& (0+255),w,b
  8316   009090  0A80               	xorlw	128
  8317   009092  5973               	subwfb	??_pad& (0+255),w,b
  8318   009094  A0D8               	btfss	status,0,c
  8319   009096  EF4F  F048         	goto	u6111
  8320   00909A  EF51  F048         	goto	u6110
  8321   00909E                     u6111:
  8322   00909E  EF37  F048         	goto	l4931
  8323   0090A2                     u6110:
  8324   0090A2                     
  8325                           ; BSR set to: 0
  8326                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  8327   0090A2  B1F5               	btfsc	_flags& (0+255),0,b
  8328   0090A4  EF56  F048         	goto	u6121
  8329   0090A8  EF58  F048         	goto	u6120
  8330   0090AC                     u6121:
  8331   0090AC  EF60  F048         	goto	l890
  8332   0090B0                     u6120:
  8333   0090B0                     
  8334                           ; BSR set to: 0
  8335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  8336   0090B0  C06F  F068         	movff	pad@buf,fputs@s
  8337   0090B4  C070  F069         	movff	pad@buf+1,fputs@s+1
  8338   0090B8  C06E  F06A         	movff	pad@fp,fputs@fp
  8339   0090BC  ECB2  F049         	call	_fputs	;wreg free
  8340   0090C0                     l890:
  8341   0090C0  0012               	return		;funcret
  8342   0090C2                     __end_of_pad:
  8343                           	callstack 0
  8344                           
  8345 ;; *************** function _fputs *****************
  8346 ;; Defined at:
  8347 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  8348 ;; Parameters:    Size  Location     Type
  8349 ;;  s               2    8[BANK0 ] PTR const unsigned char 
  8350 ;;		 -> dbuf(80), 
  8351 ;;  fp              1   10[BANK0 ] PTR struct _IO_FILE
  8352 ;;		 -> sprintf@f(11), 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;  i               2   12[BANK0 ] int 
  8355 ;;  c               1   11[BANK0 ] unsigned char 
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  2    8[BANK0 ] int 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8365 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8366 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8368 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8369 ;;Total ram usage:        6 bytes
  8370 ;; Hardware stack levels used: 1
  8371 ;; Hardware stack levels required when called: 4
  8372 ;; This function calls:
  8373 ;;		_fputc
  8374 ;; This function is called by:
  8375 ;;		_pad
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text21
  8380   009364                     __ptext21:
  8381                           	callstack 0
  8382   009364                     _fputs:
  8383                           	callstack 21
  8384   009364  0E00               	movlw	0
  8385   009366  0100               	movlb	0	; () banked
  8386   009368  6F6D               	movwf	(fputs@i+1)& (0+255),b
  8387   00936A  0E00               	movlw	0
  8388   00936C  6F6C               	movwf	fputs@i& (0+255),b
  8389   00936E  EFC3  F049         	goto	l4481
  8390   009372                     l4477:
  8391                           
  8392                           ; BSR set to: 0
  8393   009372  C06B  F060         	movff	fputs@c,fputc@c
  8394   009376  6B61               	clrf	(fputc@c+1)& (0+255),b
  8395   009378  C06A  F062         	movff	fputs@fp,fputc@fp
  8396   00937C  EC45  F046         	call	_fputc	;wreg free
  8397   009380  0100               	movlb	0	; () banked
  8398   009382  4B6C               	infsnz	fputs@i& (0+255),f,b
  8399   009384  2B6D               	incf	(fputs@i+1)& (0+255),f,b
  8400   009386                     l4481:
  8401                           
  8402                           ; BSR set to: 0
  8403   009386  516C               	movf	fputs@i& (0+255),w,b
  8404   009388  2568               	addwf	fputs@s& (0+255),w,b
  8405   00938A  6ED9               	movwf	fsr2l,c
  8406   00938C  516D               	movf	(fputs@i+1)& (0+255),w,b
  8407   00938E  2169               	addwfc	(fputs@s+1)& (0+255),w,b
  8408   009390  6EDA               	movwf	fsr2h,c
  8409   009392  50DF               	movf	indf2,w,c
  8410   009394  6F6B               	movwf	fputs@c& (0+255),b
  8411   009396  516B               	movf	fputs@c& (0+255),w,b
  8412   009398  A4D8               	btfss	status,2,c
  8413   00939A  EFD1  F049         	goto	u5381
  8414   00939E  EFD3  F049         	goto	u5380
  8415   0093A2                     u5381:
  8416   0093A2  EFB9  F049         	goto	l4477
  8417   0093A6                     u5380:
  8418   0093A6                     
  8419                           ; BSR set to: 0
  8420   0093A6  0012               	return		;funcret
  8421   0093A8                     __end_of_fputs:
  8422                           	callstack 0
  8423                           
  8424 ;; *************** function _fputc *****************
  8425 ;; Defined at:
  8426 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;  c               2    0[BANK0 ] int 
  8429 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  8430 ;;		 -> sprintf@f(11), 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2    0[BANK0 ] int 
  8435 ;; Registers used:
  8436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8444 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8445 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8446 ;;Total ram usage:        8 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 3
  8449 ;; This function calls:
  8450 ;;		_putch
  8451 ;; This function is called by:
  8452 ;;		_pad
  8453 ;;		_vfpfcnvrt
  8454 ;;		_fputs
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           	psect	text22
  8459   008C8A                     __ptext22:
  8460                           	callstack 0
  8461   008C8A                     _fputc:
  8462                           	callstack 24
  8463   008C8A  0100               	movlb	0	; () banked
  8464   008C8C  5162               	movf	fputc@fp& (0+255),w,b
  8465   008C8E  B4D8               	btfsc	status,2,c
  8466   008C90  EF4C  F046         	goto	u4951
  8467   008C94  EF4E  F046         	goto	u4950
  8468   008C98                     u4951:
  8469   008C98  EF56  F046         	goto	l4271
  8470   008C9C                     u4950:
  8471   008C9C                     
  8472                           ; BSR set to: 0
  8473   008C9C  5162               	movf	fputc@fp& (0+255),w,b
  8474   008C9E  A4D8               	btfss	status,2,c
  8475   008CA0  EF54  F046         	goto	u4961
  8476   008CA4  EF56  F046         	goto	u4960
  8477   008CA8                     u4961:
  8478   008CA8  EF5B  F046         	goto	l4273
  8479   008CAC                     u4960:
  8480   008CAC                     l4271:
  8481                           
  8482                           ; BSR set to: 0
  8483   008CAC  5160               	movf	fputc@c& (0+255),w,b
  8484   008CAE  ECB7  F04A         	call	_putch
  8485   008CB2  EFA7  F046         	goto	l1062
  8486   008CB6                     l4273:
  8487                           
  8488                           ; BSR set to: 0
  8489   008CB6  5162               	movf	fputc@fp& (0+255),w,b
  8490   008CB8  6ED9               	movwf	fsr2l,c
  8491   008CBA  6ADA               	clrf	fsr2h,c
  8492   008CBC  0E09               	movlw	9
  8493   008CBE  26D9               	addwf	fsr2l,f,c
  8494   008CC0  50DE               	movf	postinc2,w,c
  8495   008CC2  10DE               	iorwf	postinc2,w,c
  8496   008CC4  B4D8               	btfsc	status,2,c
  8497   008CC6  EF67  F046         	goto	u4971
  8498   008CCA  EF69  F046         	goto	u4970
  8499   008CCE                     u4971:
  8500   008CCE  EF82  F046         	goto	l4277
  8501   008CD2                     u4970:
  8502   008CD2                     
  8503                           ; BSR set to: 0
  8504   008CD2  5162               	movf	fputc@fp& (0+255),w,b
  8505   008CD4  6ED9               	movwf	fsr2l,c
  8506   008CD6  6ADA               	clrf	fsr2h,c
  8507   008CD8  0E09               	movlw	9
  8508   008CDA  26D9               	addwf	fsr2l,f,c
  8509   008CDC  5162               	movf	fputc@fp& (0+255),w,b
  8510   008CDE  6EE1               	movwf	fsr1l,c
  8511   008CE0  6AE2               	clrf	fsr1h,c
  8512   008CE2  0E02               	movlw	2
  8513   008CE4  26E1               	addwf	fsr1l,f,c
  8514   008CE6  50DE               	movf	postinc2,w,c
  8515   008CE8  5CE6               	subwf	postinc1,w,c
  8516   008CEA  50E6               	movf	postinc1,w,c
  8517   008CEC  0A80               	xorlw	128
  8518   008CEE  6F67               	movwf	(??_fputc+4)& (0+255),b
  8519   008CF0  50DE               	movf	postinc2,w,c
  8520   008CF2  0A80               	xorlw	128
  8521   008CF4  5967               	subwfb	(??_fputc+4)& (0+255),w,b
  8522   008CF6  B0D8               	btfsc	status,0,c
  8523   008CF8  EF80  F046         	goto	u4981
  8524   008CFC  EF82  F046         	goto	u4980
  8525   008D00                     u4981:
  8526   008D00  EFA7  F046         	goto	l1062
  8527   008D04                     u4980:
  8528   008D04                     l4277:
  8529                           
  8530                           ; BSR set to: 0
  8531   008D04  5162               	movf	fputc@fp& (0+255),w,b
  8532   008D06  6ED9               	movwf	fsr2l,c
  8533   008D08  6ADA               	clrf	fsr2h,c
  8534   008D0A  0E02               	movlw	2
  8535   008D0C  26D9               	addwf	fsr2l,f,c
  8536   008D0E  006F FF78  F063    	movff	postinc2,??_fputc
  8537   008D14  006F FF74  F064    	movff	postdec2,??_fputc+1
  8538   008D1A  5162               	movf	fputc@fp& (0+255),w,b
  8539   008D1C  6ED9               	movwf	fsr2l,c
  8540   008D1E  6ADA               	clrf	fsr2h,c
  8541   008D20  006F FF78  F065    	movff	postinc2,??_fputc+2
  8542   008D26  006F FF74  F066    	movff	postdec2,??_fputc+3
  8543   008D2C  5163               	movf	??_fputc& (0+255),w,b
  8544   008D2E  2565               	addwf	(??_fputc+2)& (0+255),w,b
  8545   008D30  6ED9               	movwf	fsr2l,c
  8546   008D32  5164               	movf	(??_fputc+1)& (0+255),w,b
  8547   008D34  2166               	addwfc	(??_fputc+3)& (0+255),w,b
  8548   008D36  6EDA               	movwf	fsr2h,c
  8549   008D38  0060  F183  FFDF   	movff	fputc@c,indf2
  8550   008D3E  5162               	movf	fputc@fp& (0+255),w,b
  8551   008D40  6ED9               	movwf	fsr2l,c
  8552   008D42  6ADA               	clrf	fsr2h,c
  8553   008D44  0E02               	movlw	2
  8554   008D46  26D9               	addwf	fsr2l,f,c
  8555   008D48  2ADE               	incf	postinc2,f,c
  8556   008D4A  0E00               	movlw	0
  8557   008D4C  22DD               	addwfc	postdec2,f,c
  8558   008D4E                     l1062:
  8559   008D4E  0012               	return		;funcret
  8560   008D50                     __end_of_fputc:
  8561                           	callstack 0
  8562                           
  8563 ;; *************** function _putch *****************
  8564 ;; Defined at:
  8565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  8566 ;; Parameters:    Size  Location     Type
  8567 ;;  c               1    wreg     unsigned char 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;  c               1    0[COMRAM] unsigned char 
  8570 ;; Return value:  Size  Location     Type
  8571 ;;                  1    wreg      void 
  8572 ;; Registers used:
  8573 ;;		wreg
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8583 ;;Total ram usage:        0 bytes
  8584 ;; Hardware stack levels used: 1
  8585 ;; Hardware stack levels required when called: 2
  8586 ;; This function calls:
  8587 ;;		Nothing
  8588 ;; This function is called by:
  8589 ;;		_fputc
  8590 ;; This function uses a non-reentrant model
  8591 ;;
  8592                           
  8593                           	psect	text23
  8594   00956E                     __ptext23:
  8595                           	callstack 0
  8596   00956E                     _putch:
  8597                           	callstack 24
  8598   00956E  0012               	return		;funcret
  8599   009570                     __end_of_putch:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _abs *****************
  8603 ;; Defined at:
  8604 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;  a               2    6[BANK0 ] int 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  2    6[BANK0 ] int 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8620 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8621 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8622 ;;Total ram usage:        4 bytes
  8623 ;; Hardware stack levels used: 1
  8624 ;; Hardware stack levels required when called: 2
  8625 ;; This function calls:
  8626 ;;		Nothing
  8627 ;; This function is called by:
  8628 ;;		_dtoa
  8629 ;; This function uses a non-reentrant model
  8630 ;;
  8631                           
  8632                           	psect	text24
  8633   009496                     __ptext24:
  8634                           	callstack 0
  8635   009496                     _abs:
  8636                           	callstack 24
  8637   009496  0100               	movlb	0	; () banked
  8638   009498  BF67               	btfsc	(abs@a+1)& (0+255),7,b
  8639   00949A  EF51  F04A         	goto	u6131
  8640   00949E  EF53  F04A         	goto	u6130
  8641   0094A2                     u6131:
  8642   0094A2  EF59  F04A         	goto	l1021
  8643   0094A6                     u6130:
  8644   0094A6                     
  8645                           ; BSR set to: 0
  8646   0094A6  C066  F066         	movff	abs@a,?_abs
  8647   0094AA  C067  F067         	movff	abs@a+1,?_abs+1
  8648   0094AE  EF65  F04A         	goto	l1024
  8649   0094B2                     l1021:
  8650                           
  8651                           ; BSR set to: 0
  8652   0094B2  C066  F068         	movff	abs@a,??_abs
  8653   0094B6  C067  F069         	movff	abs@a+1,??_abs+1
  8654   0094BA  1F68               	comf	??_abs& (0+255),f,b
  8655   0094BC  1F69               	comf	(??_abs+1)& (0+255),f,b
  8656   0094BE  4B68               	infsnz	??_abs& (0+255),f,b
  8657   0094C0  2B69               	incf	(??_abs+1)& (0+255),f,b
  8658   0094C2  C068  F066         	movff	??_abs,?_abs
  8659   0094C6  C069  F067         	movff	??_abs+1,?_abs+1
  8660   0094CA                     l1024:
  8661                           
  8662                           ; BSR set to: 0
  8663   0094CA  0012               	return		;funcret
  8664   0094CC                     __end_of_abs:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function ___awmod *****************
  8668 ;; Defined at:
  8669 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  dividend        2    0[BANK0 ] int 
  8672 ;;  divisor         2    2[BANK0 ] int 
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;  sign            1    5[BANK0 ] unsigned char 
  8675 ;;  counter         1    4[BANK0 ] unsigned char 
  8676 ;; Return value:  Size  Location     Type
  8677 ;;                  2    0[BANK0 ] int 
  8678 ;; Registers used:
  8679 ;;		wreg, status,2, status,0
  8680 ;; Tracked objects:
  8681 ;;		On entry : 0/0
  8682 ;;		On exit  : 0/0
  8683 ;;		Unchanged: 0/0
  8684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8685 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8686 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8688 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8689 ;;Total ram usage:        6 bytes
  8690 ;; Hardware stack levels used: 1
  8691 ;; Hardware stack levels required when called: 2
  8692 ;; This function calls:
  8693 ;;		Nothing
  8694 ;; This function is called by:
  8695 ;;		_dtoa
  8696 ;; This function uses a non-reentrant model
  8697 ;;
  8698                           
  8699                           	psect	text25
  8700   008ECE                     __ptext25:
  8701                           	callstack 0
  8702   008ECE                     ___awmod:
  8703                           	callstack 24
  8704   008ECE  0100               	movlb	0	; () banked
  8705   008ED0  6B65               	clrf	___awmod@sign& (0+255),b
  8706   008ED2                     
  8707                           ; BSR set to: 0
  8708   008ED2  BF61               	btfsc	(___awmod@dividend+1)& (0+255),7,b
  8709   008ED4  EF70  F047         	goto	u5870
  8710   008ED8  EF6E  F047         	goto	u5871
  8711   008EDC                     u5871:
  8712   008EDC  EF76  F047         	goto	l4805
  8713   008EE0                     u5870:
  8714   008EE0                     
  8715                           ; BSR set to: 0
  8716   008EE0  6D60               	negf	___awmod@dividend& (0+255),b
  8717   008EE2  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  8718   008EE4  B0D8               	btfsc	status,0,c
  8719   008EE6  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  8720   008EE8                     
  8721                           ; BSR set to: 0
  8722   008EE8  0E01               	movlw	1
  8723   008EEA  6F65               	movwf	___awmod@sign& (0+255),b
  8724   008EEC                     l4805:
  8725                           
  8726                           ; BSR set to: 0
  8727   008EEC  BF63               	btfsc	(___awmod@divisor+1)& (0+255),7,b
  8728   008EEE  EF7D  F047         	goto	u5880
  8729   008EF2  EF7B  F047         	goto	u5881
  8730   008EF6                     u5881:
  8731   008EF6  EF81  F047         	goto	l4809
  8732   008EFA                     u5880:
  8733   008EFA                     
  8734                           ; BSR set to: 0
  8735   008EFA  6D62               	negf	___awmod@divisor& (0+255),b
  8736   008EFC  1F63               	comf	(___awmod@divisor+1)& (0+255),f,b
  8737   008EFE  B0D8               	btfsc	status,0,c
  8738   008F00  2B63               	incf	(___awmod@divisor+1)& (0+255),f,b
  8739   008F02                     l4809:
  8740                           
  8741                           ; BSR set to: 0
  8742   008F02  5162               	movf	___awmod@divisor& (0+255),w,b
  8743   008F04  1163               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8744   008F06  B4D8               	btfsc	status,2,c
  8745   008F08  EF88  F047         	goto	u5891
  8746   008F0C  EF8A  F047         	goto	u5890
  8747   008F10                     u5891:
  8748   008F10  EFAE  F047         	goto	l4825
  8749   008F14                     u5890:
  8750   008F14                     
  8751                           ; BSR set to: 0
  8752   008F14  0E01               	movlw	1
  8753   008F16  6F64               	movwf	___awmod@counter& (0+255),b
  8754   008F18  EF92  F047         	goto	l4815
  8755   008F1C                     l4813:
  8756                           
  8757                           ; BSR set to: 0
  8758   008F1C  90D8               	bcf	status,0,c
  8759   008F1E  3762               	rlcf	___awmod@divisor& (0+255),f,b
  8760   008F20  3763               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8761   008F22  2B64               	incf	___awmod@counter& (0+255),f,b
  8762   008F24                     l4815:
  8763                           
  8764                           ; BSR set to: 0
  8765   008F24  AF63               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8766   008F26  EF97  F047         	goto	u5901
  8767   008F2A  EF99  F047         	goto	u5900
  8768   008F2E                     u5901:
  8769   008F2E  EF8E  F047         	goto	l4813
  8770   008F32                     u5900:
  8771   008F32                     l4817:
  8772                           
  8773                           ; BSR set to: 0
  8774   008F32  5162               	movf	___awmod@divisor& (0+255),w,b
  8775   008F34  5D60               	subwf	___awmod@dividend& (0+255),w,b
  8776   008F36  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8777   008F38  5961               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8778   008F3A  A0D8               	btfss	status,0,c
  8779   008F3C  EFA2  F047         	goto	u5911
  8780   008F40  EFA4  F047         	goto	u5910
  8781   008F44                     u5911:
  8782   008F44  EFA8  F047         	goto	l4821
  8783   008F48                     u5910:
  8784   008F48                     
  8785                           ; BSR set to: 0
  8786   008F48  5162               	movf	___awmod@divisor& (0+255),w,b
  8787   008F4A  5F60               	subwf	___awmod@dividend& (0+255),f,b
  8788   008F4C  5163               	movf	(___awmod@divisor+1)& (0+255),w,b
  8789   008F4E  5B61               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8790   008F50                     l4821:
  8791                           
  8792                           ; BSR set to: 0
  8793   008F50  90D8               	bcf	status,0,c
  8794   008F52  3363               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8795   008F54  3362               	rrcf	___awmod@divisor& (0+255),f,b
  8796   008F56                     
  8797                           ; BSR set to: 0
  8798   008F56  2F64               	decfsz	___awmod@counter& (0+255),f,b
  8799   008F58  EF99  F047         	goto	l4817
  8800   008F5C                     l4825:
  8801                           
  8802                           ; BSR set to: 0
  8803   008F5C  5165               	movf	___awmod@sign& (0+255),w,b
  8804   008F5E  B4D8               	btfsc	status,2,c
  8805   008F60  EFB4  F047         	goto	u5921
  8806   008F64  EFB6  F047         	goto	u5920
  8807   008F68                     u5921:
  8808   008F68  EFBA  F047         	goto	l4829
  8809   008F6C                     u5920:
  8810   008F6C                     
  8811                           ; BSR set to: 0
  8812   008F6C  6D60               	negf	___awmod@dividend& (0+255),b
  8813   008F6E  1F61               	comf	(___awmod@dividend+1)& (0+255),f,b
  8814   008F70  B0D8               	btfsc	status,0,c
  8815   008F72  2B61               	incf	(___awmod@dividend+1)& (0+255),f,b
  8816   008F74                     l4829:
  8817                           
  8818                           ; BSR set to: 0
  8819   008F74  C060  F060         	movff	___awmod@dividend,?___awmod
  8820   008F78  C061  F061         	movff	___awmod@dividend+1,?___awmod+1
  8821   008F7C                     
  8822                           ; BSR set to: 0
  8823   008F7C  0012               	return		;funcret
  8824   008F7E                     __end_of___awmod:
  8825                           	callstack 0
  8826                           
  8827 ;; *************** function ___awdiv *****************
  8828 ;; Defined at:
  8829 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  dividend        2    0[BANK0 ] int 
  8832 ;;  divisor         2    2[BANK0 ] int 
  8833 ;; Auto vars:     Size  Location     Type
  8834 ;;  quotient        2    6[BANK0 ] int 
  8835 ;;  sign            1    5[BANK0 ] unsigned char 
  8836 ;;  counter         1    4[BANK0 ] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  2    0[BANK0 ] int 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8847 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8849 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8850 ;;Total ram usage:        8 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 2
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_dtoa
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text26
  8861   008D50                     __ptext26:
  8862                           	callstack 0
  8863   008D50                     ___awdiv:
  8864                           	callstack 24
  8865   008D50  0100               	movlb	0	; () banked
  8866   008D52  6B65               	clrf	___awdiv@sign& (0+255),b
  8867   008D54                     
  8868                           ; BSR set to: 0
  8869   008D54  BF63               	btfsc	(___awdiv@divisor+1)& (0+255),7,b
  8870   008D56  EFB1  F046         	goto	u5810
  8871   008D5A  EFAF  F046         	goto	u5811
  8872   008D5E                     u5811:
  8873   008D5E  EFB7  F046         	goto	l4761
  8874   008D62                     u5810:
  8875   008D62                     
  8876                           ; BSR set to: 0
  8877   008D62  6D62               	negf	___awdiv@divisor& (0+255),b
  8878   008D64  1F63               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8879   008D66  B0D8               	btfsc	status,0,c
  8880   008D68  2B63               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8881   008D6A                     
  8882                           ; BSR set to: 0
  8883   008D6A  0E01               	movlw	1
  8884   008D6C  6F65               	movwf	___awdiv@sign& (0+255),b
  8885   008D6E                     l4761:
  8886                           
  8887                           ; BSR set to: 0
  8888   008D6E  BF61               	btfsc	(___awdiv@dividend+1)& (0+255),7,b
  8889   008D70  EFBE  F046         	goto	u5820
  8890   008D74  EFBC  F046         	goto	u5821
  8891   008D78                     u5821:
  8892   008D78  EFC4  F046         	goto	l4767
  8893   008D7C                     u5820:
  8894   008D7C                     
  8895                           ; BSR set to: 0
  8896   008D7C  6D60               	negf	___awdiv@dividend& (0+255),b
  8897   008D7E  1F61               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8898   008D80  B0D8               	btfsc	status,0,c
  8899   008D82  2B61               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8900   008D84                     
  8901                           ; BSR set to: 0
  8902   008D84  0E01               	movlw	1
  8903   008D86  1B65               	xorwf	___awdiv@sign& (0+255),f,b
  8904   008D88                     l4767:
  8905                           
  8906                           ; BSR set to: 0
  8907   008D88  0E00               	movlw	0
  8908   008D8A  6F67               	movwf	(___awdiv@quotient+1)& (0+255),b
  8909   008D8C  0E00               	movlw	0
  8910   008D8E  6F66               	movwf	___awdiv@quotient& (0+255),b
  8911   008D90                     
  8912                           ; BSR set to: 0
  8913   008D90  5162               	movf	___awdiv@divisor& (0+255),w,b
  8914   008D92  1163               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8915   008D94  B4D8               	btfsc	status,2,c
  8916   008D96  EFCF  F046         	goto	u5831
  8917   008D9A  EFD1  F046         	goto	u5830
  8918   008D9E                     u5831:
  8919   008D9E  EFF9  F046         	goto	l4789
  8920   008DA2                     u5830:
  8921   008DA2                     
  8922                           ; BSR set to: 0
  8923   008DA2  0E01               	movlw	1
  8924   008DA4  6F64               	movwf	___awdiv@counter& (0+255),b
  8925   008DA6  EFD9  F046         	goto	l4775
  8926   008DAA                     l4773:
  8927                           
  8928                           ; BSR set to: 0
  8929   008DAA  90D8               	bcf	status,0,c
  8930   008DAC  3762               	rlcf	___awdiv@divisor& (0+255),f,b
  8931   008DAE  3763               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8932   008DB0  2B64               	incf	___awdiv@counter& (0+255),f,b
  8933   008DB2                     l4775:
  8934                           
  8935                           ; BSR set to: 0
  8936   008DB2  AF63               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8937   008DB4  EFDE  F046         	goto	u5841
  8938   008DB8  EFE0  F046         	goto	u5840
  8939   008DBC                     u5841:
  8940   008DBC  EFD5  F046         	goto	l4773
  8941   008DC0                     u5840:
  8942   008DC0                     l4777:
  8943                           
  8944                           ; BSR set to: 0
  8945   008DC0  90D8               	bcf	status,0,c
  8946   008DC2  3766               	rlcf	___awdiv@quotient& (0+255),f,b
  8947   008DC4  3767               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8948   008DC6                     
  8949                           ; BSR set to: 0
  8950   008DC6  5162               	movf	___awdiv@divisor& (0+255),w,b
  8951   008DC8  5D60               	subwf	___awdiv@dividend& (0+255),w,b
  8952   008DCA  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8953   008DCC  5961               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8954   008DCE  A0D8               	btfss	status,0,c
  8955   008DD0  EFEC  F046         	goto	u5851
  8956   008DD4  EFEE  F046         	goto	u5850
  8957   008DD8                     u5851:
  8958   008DD8  EFF3  F046         	goto	l4785
  8959   008DDC                     u5850:
  8960   008DDC                     
  8961                           ; BSR set to: 0
  8962   008DDC  5162               	movf	___awdiv@divisor& (0+255),w,b
  8963   008DDE  5F60               	subwf	___awdiv@dividend& (0+255),f,b
  8964   008DE0  5163               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8965   008DE2  5B61               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8966   008DE4                     
  8967                           ; BSR set to: 0
  8968   008DE4  8166               	bsf	___awdiv@quotient& (0+255),0,b
  8969   008DE6                     l4785:
  8970                           
  8971                           ; BSR set to: 0
  8972   008DE6  90D8               	bcf	status,0,c
  8973   008DE8  3363               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8974   008DEA  3362               	rrcf	___awdiv@divisor& (0+255),f,b
  8975   008DEC                     
  8976                           ; BSR set to: 0
  8977   008DEC  2F64               	decfsz	___awdiv@counter& (0+255),f,b
  8978   008DEE  EFE0  F046         	goto	l4777
  8979   008DF2                     l4789:
  8980                           
  8981                           ; BSR set to: 0
  8982   008DF2  5165               	movf	___awdiv@sign& (0+255),w,b
  8983   008DF4  B4D8               	btfsc	status,2,c
  8984   008DF6  EFFF  F046         	goto	u5861
  8985   008DFA  EF01  F047         	goto	u5860
  8986   008DFE                     u5861:
  8987   008DFE  EF05  F047         	goto	l4793
  8988   008E02                     u5860:
  8989   008E02                     
  8990                           ; BSR set to: 0
  8991   008E02  6D66               	negf	___awdiv@quotient& (0+255),b
  8992   008E04  1F67               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8993   008E06  B0D8               	btfsc	status,0,c
  8994   008E08  2B67               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8995   008E0A                     l4793:
  8996                           
  8997                           ; BSR set to: 0
  8998   008E0A  C066  F060         	movff	___awdiv@quotient,?___awdiv
  8999   008E0E  C067  F061         	movff	___awdiv@quotient+1,?___awdiv+1
  9000   008E12                     
  9001                           ; BSR set to: 0
  9002   008E12  0012               	return		;funcret
  9003   008E14                     __end_of___awdiv:
  9004                           	callstack 0
  9005                           
  9006 ;; *************** function ___xxtofl *****************
  9007 ;; Defined at:
  9008 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  sign            1    wreg     unsigned char 
  9011 ;;  val             4    0[BANK0 ] long 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  sign            1    8[BANK0 ] unsigned char 
  9014 ;;  arg             4   10[BANK0 ] unsigned long 
  9015 ;;  exp             1    9[BANK0 ] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  4    0[BANK0 ] unsigned char 
  9018 ;; Registers used:
  9019 ;;		wreg, status,2, status,0
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9025 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9026 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9027 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9028 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9029 ;;Total ram usage:       14 bytes
  9030 ;; Hardware stack levels used: 1
  9031 ;; Hardware stack levels required when called: 2
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_main
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           	psect	text27
  9040   008396                     __ptext27:
  9041                           	callstack 0
  9042   008396                     ___xxtofl:
  9043                           	callstack 28
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;incstack = 0
  9047                           ;___xxtofl@sign stored from wreg
  9048   008396  0100               	movlb	0	; () banked
  9049   008398  6F68               	movwf	___xxtofl@sign& (0+255),b
  9050   00839A  0100               	movlb	0	; () banked
  9051   00839C  5168               	movf	___xxtofl@sign& (0+255),w,b
  9052   00839E  B4D8               	btfsc	status,2,c
  9053   0083A0  EFD4  F041         	goto	u6911
  9054   0083A4  EFD6  F041         	goto	u6910
  9055   0083A8                     u6911:
  9056   0083A8  EFF8  F041         	goto	l832
  9057   0083AC                     u6910:
  9058   0083AC                     
  9059                           ; BSR set to: 0
  9060   0083AC  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9061   0083AE  EFDD  F041         	goto	u6920
  9062   0083B2  EFDB  F041         	goto	u6921
  9063   0083B6                     u6921:
  9064   0083B6  EFF8  F041         	goto	l832
  9065   0083BA                     u6920:
  9066   0083BA                     
  9067                           ; BSR set to: 0
  9068   0083BA  C060  F064         	movff	___xxtofl@val,??___xxtofl
  9069   0083BE  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
  9070   0083C2  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
  9071   0083C6  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
  9072   0083CA  1F64               	comf	??___xxtofl& (0+255),f,b
  9073   0083CC  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
  9074   0083CE  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
  9075   0083D0  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
  9076   0083D2  2B64               	incf	??___xxtofl& (0+255),f,b
  9077   0083D4  0E00               	movlw	0
  9078   0083D6  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9079   0083D8  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9080   0083DA  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9081   0083DC  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
  9082   0083E0  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
  9083   0083E4  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
  9084   0083E8  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
  9085   0083EC  EF00  F042         	goto	l5527
  9086   0083F0                     l832:
  9087                           
  9088                           ; BSR set to: 0
  9089   0083F0  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
  9090   0083F4  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9091   0083F8  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9092   0083FC  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9093   008400                     l5527:
  9094                           
  9095                           ; BSR set to: 0
  9096   008400  5160               	movf	___xxtofl@val& (0+255),w,b
  9097   008402  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9098   008404  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9099   008406  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9100   008408  A4D8               	btfss	status,2,c
  9101   00840A  EF09  F042         	goto	u6931
  9102   00840E  EF0B  F042         	goto	u6930
  9103   008412                     u6931:
  9104   008412  EF15  F042         	goto	l5533
  9105   008416                     u6930:
  9106   008416                     
  9107                           ; BSR set to: 0
  9108   008416  0E00               	movlw	0
  9109   008418  6F60               	movwf	?___xxtofl& (0+255),b
  9110   00841A  0E00               	movlw	0
  9111   00841C  6F61               	movwf	(?___xxtofl+1)& (0+255),b
  9112   00841E  0E00               	movlw	0
  9113   008420  6F62               	movwf	(?___xxtofl+2)& (0+255),b
  9114   008422  0E00               	movlw	0
  9115   008424  6F63               	movwf	(?___xxtofl+3)& (0+255),b
  9116   008426  EFA6  F042         	goto	l835
  9117   00842A                     l5533:
  9118                           
  9119                           ; BSR set to: 0
  9120   00842A  0E96               	movlw	150
  9121   00842C  6F69               	movwf	___xxtofl@exp& (0+255),b
  9122   00842E  EF1F  F042         	goto	l5537
  9123   008432                     l5535:
  9124                           
  9125                           ; BSR set to: 0
  9126   008432  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9127   008434  90D8               	bcf	status,0,c
  9128   008436  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9129   008438  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9130   00843A  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9131   00843C  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9132   00843E                     l5537:
  9133                           
  9134                           ; BSR set to: 0
  9135   00843E  0E00               	movlw	0
  9136   008440  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9137   008442  6F64               	movwf	??___xxtofl& (0+255),b
  9138   008444  0E00               	movlw	0
  9139   008446  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9140   008448  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9141   00844A  0E00               	movlw	0
  9142   00844C  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9143   00844E  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9144   008450  0EFE               	movlw	254
  9145   008452  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9146   008454  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9147   008456  5164               	movf	??___xxtofl& (0+255),w,b
  9148   008458  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9149   00845A  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9150   00845C  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9151   00845E  A4D8               	btfss	status,2,c
  9152   008460  EF34  F042         	goto	u6941
  9153   008464  EF36  F042         	goto	u6940
  9154   008468                     u6941:
  9155   008468  EF19  F042         	goto	l5535
  9156   00846C                     u6940:
  9157   00846C  EF44  F042         	goto	l839
  9158   008470                     l5539:
  9159                           
  9160                           ; BSR set to: 0
  9161   008470  2B69               	incf	___xxtofl@exp& (0+255),f,b
  9162   008472                     
  9163                           ; BSR set to: 0
  9164   008472  0E01               	movlw	1
  9165   008474  276A               	addwf	___xxtofl@arg& (0+255),f,b
  9166   008476  0E00               	movlw	0
  9167   008478  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9168   00847A  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9169   00847C  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9170   00847E                     
  9171                           ; BSR set to: 0
  9172   00847E  90D8               	bcf	status,0,c
  9173   008480  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9174   008482  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9175   008484  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9176   008486  336A               	rrcf	___xxtofl@arg& (0+255),f,b
  9177   008488                     l839:
  9178                           
  9179                           ; BSR set to: 0
  9180   008488  0E00               	movlw	0
  9181   00848A  156A               	andwf	___xxtofl@arg& (0+255),w,b
  9182   00848C  6F64               	movwf	??___xxtofl& (0+255),b
  9183   00848E  0E00               	movlw	0
  9184   008490  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9185   008492  6F65               	movwf	(??___xxtofl+1)& (0+255),b
  9186   008494  0E00               	movlw	0
  9187   008496  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9188   008498  6F66               	movwf	(??___xxtofl+2)& (0+255),b
  9189   00849A  0EFF               	movlw	255
  9190   00849C  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9191   00849E  6F67               	movwf	(??___xxtofl+3)& (0+255),b
  9192   0084A0  5164               	movf	??___xxtofl& (0+255),w,b
  9193   0084A2  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9194   0084A4  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9195   0084A6  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9196   0084A8  A4D8               	btfss	status,2,c
  9197   0084AA  EF59  F042         	goto	u6951
  9198   0084AE  EF5B  F042         	goto	u6950
  9199   0084B2                     u6951:
  9200   0084B2  EF38  F042         	goto	l5539
  9201   0084B6                     u6950:
  9202   0084B6  EF63  F042         	goto	l5547
  9203   0084BA                     l5545:
  9204                           
  9205                           ; BSR set to: 0
  9206   0084BA  0769               	decf	___xxtofl@exp& (0+255),f,b
  9207   0084BC  90D8               	bcf	status,0,c
  9208   0084BE  376A               	rlcf	___xxtofl@arg& (0+255),f,b
  9209   0084C0  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9210   0084C2  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9211   0084C4  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9212   0084C6                     l5547:
  9213                           
  9214                           ; BSR set to: 0
  9215   0084C6  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9216   0084C8  EF68  F042         	goto	u6961
  9217   0084CC  EF6A  F042         	goto	u6960
  9218   0084D0                     u6961:
  9219   0084D0  EF72  F042         	goto	l846
  9220   0084D4                     u6960:
  9221   0084D4                     
  9222                           ; BSR set to: 0
  9223   0084D4  0E02               	movlw	2
  9224   0084D6  6169               	cpfslt	___xxtofl@exp& (0+255),b
  9225   0084D8  EF70  F042         	goto	u6971
  9226   0084DC  EF72  F042         	goto	u6970
  9227   0084E0                     u6971:
  9228   0084E0  EF5D  F042         	goto	l5545
  9229   0084E4                     u6970:
  9230   0084E4                     l846:
  9231                           
  9232                           ; BSR set to: 0
  9233   0084E4  B169               	btfsc	___xxtofl@exp& (0+255),0,b
  9234   0084E6  EF77  F042         	goto	u6981
  9235   0084EA  EF79  F042         	goto	u6980
  9236   0084EE                     u6981:
  9237   0084EE  EF7A  F042         	goto	l5553
  9238   0084F2                     u6980:
  9239   0084F2                     
  9240                           ; BSR set to: 0
  9241   0084F2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
  9242   0084F4                     l5553:
  9243                           
  9244                           ; BSR set to: 0
  9245   0084F4  90D8               	bcf	status,0,c
  9246   0084F6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
  9247   0084F8                     
  9248                           ; BSR set to: 0
  9249   0084F8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
  9250   0084FC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9251   0084FE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9252   008500  6B67               	clrf	(??___xxtofl+3)& (0+255),b
  9253   008502  C064  F067         	movff	??___xxtofl,??___xxtofl+3
  9254   008506  6B66               	clrf	(??___xxtofl+2)& (0+255),b
  9255   008508  6B65               	clrf	(??___xxtofl+1)& (0+255),b
  9256   00850A  6B64               	clrf	??___xxtofl& (0+255),b
  9257   00850C  5164               	movf	??___xxtofl& (0+255),w,b
  9258   00850E  136A               	iorwf	___xxtofl@arg& (0+255),f,b
  9259   008510  5165               	movf	(??___xxtofl+1)& (0+255),w,b
  9260   008512  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9261   008514  5166               	movf	(??___xxtofl+2)& (0+255),w,b
  9262   008516  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9263   008518  5167               	movf	(??___xxtofl+3)& (0+255),w,b
  9264   00851A  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9265   00851C                     
  9266                           ; BSR set to: 0
  9267   00851C  5168               	movf	___xxtofl@sign& (0+255),w,b
  9268   00851E  B4D8               	btfsc	status,2,c
  9269   008520  EF94  F042         	goto	u6991
  9270   008524  EF96  F042         	goto	u6990
  9271   008528                     u6991:
  9272   008528  EF9E  F042         	goto	l5563
  9273   00852C                     u6990:
  9274   00852C                     
  9275                           ; BSR set to: 0
  9276   00852C  BF63               	btfsc	(___xxtofl@val+3)& (0+255),7,b
  9277   00852E  EF9D  F042         	goto	u7000
  9278   008532  EF9B  F042         	goto	u7001
  9279   008536                     u7001:
  9280   008536  EF9E  F042         	goto	l5563
  9281   00853A                     u7000:
  9282   00853A                     
  9283                           ; BSR set to: 0
  9284   00853A  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9285   00853C                     l5563:
  9286                           
  9287                           ; BSR set to: 0
  9288   00853C  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
  9289   008540  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
  9290   008544  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
  9291   008548  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
  9292   00854C                     l835:
  9293                           
  9294                           ; BSR set to: 0
  9295   00854C  0012               	return		;funcret
  9296   00854E                     __end_of___xxtofl:
  9297                           	callstack 0
  9298                           
  9299 ;; *************** function _LCD_String_xy *****************
  9300 ;; Defined at:
  9301 ;;		line 241 in file "main.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  row             1    wreg     unsigned char 
  9304 ;;  pos             1    9[BANK0 ] unsigned char 
  9305 ;;  msg             2   10[BANK0 ] PTR const unsigned char 
  9306 ;;		 -> STR_6(8), STR_5(13), main@countdownMsg(17), STR_3(15), 
  9307 ;;		 -> data(10), STR_1(13), 
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;  row             1   14[BANK0 ] unsigned char 
  9310 ;;  location        1   15[BANK0 ] unsigned char 
  9311 ;; Return value:  Size  Location     Type
  9312 ;;                  1    wreg      void 
  9313 ;; Registers used:
  9314 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9315 ;; Tracked objects:
  9316 ;;		On entry : 0/0
  9317 ;;		On exit  : 0/0
  9318 ;;		Unchanged: 0/0
  9319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9320 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9322 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9323 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9324 ;;Total ram usage:        9 bytes
  9325 ;; Hardware stack levels used: 1
  9326 ;; Hardware stack levels required when called: 5
  9327 ;; This function calls:
  9328 ;;		_LCD_Command
  9329 ;;		_LCD_String
  9330 ;; This function is called by:
  9331 ;;		_main
  9332 ;; This function uses a non-reentrant model
  9333 ;;
  9334                           
  9335                           	psect	text28
  9336   0091EA                     __ptext28:
  9337                           	callstack 0
  9338   0091EA                     _LCD_String_xy:
  9339                           	callstack 25
  9340                           
  9341                           ; BSR set to: 0
  9342                           ;incstack = 0
  9343                           ;LCD_String_xy@row stored from wreg
  9344   0091EA  0100               	movlb	0	; () banked
  9345   0091EC  6F6E               	movwf	LCD_String_xy@row& (0+255),b
  9346   0091EE                     
  9347                           ;main.c: 242:     char location = (row <= 1) ? (0x80 | (pos & 0x0F)) : (0xC0 | (pos & 0x
      +                          0F));
  9348   0091EE  0E01               	movlw	1
  9349   0091F0  0100               	movlb	0	; () banked
  9350   0091F2  656E               	cpfsgt	LCD_String_xy@row& (0+255),b
  9351   0091F4  EFFE  F048         	goto	u6901
  9352   0091F8  EF00  F049         	goto	u6900
  9353   0091FC                     u6901:
  9354   0091FC  EF0B  F049         	goto	l5501
  9355   009200                     u6900:
  9356   009200                     
  9357                           ; BSR set to: 0
  9358   009200  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  9359   009202  0B0F               	andlw	15
  9360   009204  6F6C               	movwf	??_LCD_String_xy& (0+255),b
  9361   009206  6B6D               	clrf	(??_LCD_String_xy+1)& (0+255),b
  9362   009208  0EC0               	movlw	192
  9363   00920A  116C               	iorwf	??_LCD_String_xy& (0+255),w,b
  9364   00920C  6F70               	movwf	_LCD_String_xy$605& (0+255),b
  9365   00920E  516D               	movf	(??_LCD_String_xy+1)& (0+255),w,b
  9366   009210  6F71               	movwf	(_LCD_String_xy$605+1)& (0+255),b
  9367   009212  EF14  F049         	goto	l5503
  9368   009216                     l5501:
  9369                           
  9370                           ; BSR set to: 0
  9371   009216  5169               	movf	LCD_String_xy@pos& (0+255),w,b
  9372   009218  0B0F               	andlw	15
  9373   00921A  6F6C               	movwf	??_LCD_String_xy& (0+255),b
  9374   00921C  6B6D               	clrf	(??_LCD_String_xy+1)& (0+255),b
  9375   00921E  0E80               	movlw	128
  9376   009220  116C               	iorwf	??_LCD_String_xy& (0+255),w,b
  9377   009222  6F70               	movwf	_LCD_String_xy$605& (0+255),b
  9378   009224  516D               	movf	(??_LCD_String_xy+1)& (0+255),w,b
  9379   009226  6F71               	movwf	(_LCD_String_xy$605+1)& (0+255),b
  9380   009228                     l5503:
  9381                           
  9382                           ; BSR set to: 0
  9383   009228  C070  F06F         	movff	_LCD_String_xy$605,LCD_String_xy@location
  9384   00922C                     
  9385                           ; BSR set to: 0
  9386                           ;main.c: 243:     LCD_Command(location);
  9387   00922C  516F               	movf	LCD_String_xy@location& (0+255),w,b
  9388   00922E  EC90  F04A         	call	_LCD_Command
  9389   009232                     
  9390                           ;main.c: 244:     LCD_String(msg);
  9391   009232  C06A  F067         	movff	LCD_String_xy@msg,LCD_String@msg
  9392   009236  C06B  F068         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  9393   00923A  EC61  F048         	call	_LCD_String	;wreg free
  9394   00923E  0012               	return		;funcret
  9395   009240                     __end_of_LCD_String_xy:
  9396                           	callstack 0
  9397                           
  9398 ;; *************** function _LCD_String *****************
  9399 ;; Defined at:
  9400 ;;		line 234 in file "main.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  msg             2    7[BANK0 ] PTR const unsigned char 
  9403 ;;		 -> STR_6(8), STR_5(13), main@countdownMsg(17), STR_3(15), 
  9404 ;;		 -> data(10), STR_1(13), 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      void 
  9409 ;; Registers used:
  9410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9420 ;;Total ram usage:        2 bytes
  9421 ;; Hardware stack levels used: 1
  9422 ;; Hardware stack levels required when called: 4
  9423 ;; This function calls:
  9424 ;;		_LCD_Char
  9425 ;; This function is called by:
  9426 ;;		_main
  9427 ;;		_LCD_String_xy
  9428 ;; This function uses a non-reentrant model
  9429 ;;
  9430                           
  9431                           	psect	text29
  9432   0090C2                     __ptext29:
  9433                           	callstack 0
  9434   0090C2                     _LCD_String:
  9435                           	callstack 25
  9436   0090C2                     
  9437                           ;main.c: 235:     while (*msg != 0) {
  9438   0090C2  EF7D  F048         	goto	l5431
  9439   0090C6                     l5427:
  9440                           
  9441                           ;main.c: 236:         LCD_Char(*msg);
  9442   0090C6  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  9443   0090CC  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  9444   0090D2  0E00               	movlw	low (__smallconst shr (0+16))
  9445   0090D4  6EF8               	movwf	tblptru,c
  9446   0090D6  0E1F               	movlw	(high __ramtop+-1)
  9447   0090D8  64F7               	cpfsgt	tblptrh,c
  9448   0090DA  D003               	bra	u6867
  9449   0090DC  0008               	tblrd		*
  9450   0090DE  50F5               	movf	tablat,w,c
  9451   0090E0  D007               	bra	u6860
  9452   0090E2                     u6867:
  9453   0090E2  006F FFDB FFE1     	movff	tblptrl,fsr1l
  9454   0090E8  006F FFDF FFE2     	movff	tblptrh,fsr1h
  9455   0090EE  50E7               	movf	indf1,w,c
  9456   0090F0                     u6860:
  9457   0090F0  EC7C  F04A         	call	_LCD_Char
  9458   0090F4                     
  9459                           ;main.c: 237:         msg++;
  9460   0090F4  0100               	movlb	0	; () banked
  9461   0090F6  4B67               	infsnz	LCD_String@msg& (0+255),f,b
  9462   0090F8  2B68               	incf	(LCD_String@msg+1)& (0+255),f,b
  9463   0090FA                     l5431:
  9464                           
  9465                           ;main.c: 235:     while (*msg != 0) {
  9466   0090FA  0060  F19F  FFF6   	movff	LCD_String@msg,tblptrl
  9467   009100  0060  F1A3  FFF7   	movff	LCD_String@msg+1,tblptrh
  9468   009106  0E00               	movlw	low (__smallconst shr (0+16))
  9469   009108  6EF8               	movwf	tblptru,c
  9470   00910A  0E1F               	movlw	(high __ramtop+-1)
  9471   00910C  64F7               	cpfsgt	tblptrh,c
  9472   00910E  D003               	bra	u6877
  9473   009110  0008               	tblrd		*
  9474   009112  50F5               	movf	tablat,w,c
  9475   009114  D007               	bra	u6870
  9476   009116                     u6877:
  9477   009116  006F FFDB FFE1     	movff	tblptrl,fsr1l
  9478   00911C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  9479   009122  50E7               	movf	indf1,w,c
  9480   009124                     u6870:
  9481   009124  0900               	iorlw	0
  9482   009126  A4D8               	btfss	status,2,c
  9483   009128  EF98  F048         	goto	u6881
  9484   00912C  EF9A  F048         	goto	u6880
  9485   009130                     u6881:
  9486   009130  EF63  F048         	goto	l5427
  9487   009134                     u6880:
  9488   009134  0012               	return		;funcret
  9489   009136                     __end_of_LCD_String:
  9490                           	callstack 0
  9491                           
  9492 ;; *************** function _LCD_Char *****************
  9493 ;; Defined at:
  9494 ;;		line 225 in file "main.c"
  9495 ;; Parameters:    Size  Location     Type
  9496 ;;  dat             1    wreg     unsigned char 
  9497 ;; Auto vars:     Size  Location     Type
  9498 ;;  dat             1    6[BANK0 ] unsigned char 
  9499 ;; Return value:  Size  Location     Type
  9500 ;;                  1    wreg      void 
  9501 ;; Registers used:
  9502 ;;		wreg, status,2, status,0, cstack
  9503 ;; Tracked objects:
  9504 ;;		On entry : 0/0
  9505 ;;		On exit  : 0/0
  9506 ;;		Unchanged: 0/0
  9507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9509 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9512 ;;Total ram usage:        1 bytes
  9513 ;; Hardware stack levels used: 1
  9514 ;; Hardware stack levels required when called: 3
  9515 ;; This function calls:
  9516 ;;		_MSdelay
  9517 ;; This function is called by:
  9518 ;;		_LCD_String
  9519 ;; This function uses a non-reentrant model
  9520 ;;
  9521                           
  9522                           	psect	text30
  9523   0094F8                     __ptext30:
  9524                           	callstack 0
  9525   0094F8                     _LCD_Char:
  9526                           	callstack 25
  9527                           
  9528                           ;incstack = 0
  9529                           ;LCD_Char@dat stored from wreg
  9530   0094F8  0100               	movlb	0	; () banked
  9531   0094FA  6F66               	movwf	LCD_Char@dat& (0+255),b
  9532   0094FC                     
  9533                           ;main.c: 226:     LATB = dat;
  9534   0094FC  0060  F19B  FFBB   	movff	LCD_Char@dat,16315	;volatile
  9535   009502                     
  9536                           ;main.c: 227:     LATD0 = 1;
  9537   009502  80BD               	bsf	16317,0,c	;volatile
  9538   009504                     
  9539                           ;main.c: 228:     LATD1 = 1;
  9540   009504  82BD               	bsf	16317,1,c	;volatile
  9541   009506                     
  9542                           ;main.c: 229:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9543   009506  0E10               	movlw	16
  9544   009508                     u7127:
  9545   009508  2EE8               	decfsz	wreg,f,c
  9546   00950A  D7FE               	bra	u7127
  9547   00950C  D000               	nop2	
  9548   00950E                     
  9549                           ;main.c: 230:     LATD1 = 0;
  9550   00950E  92BD               	bcf	16317,1,c	;volatile
  9551   009510                     
  9552                           ;main.c: 231:     MSdelay(1);
  9553   009510  0E00               	movlw	0
  9554   009512  0100               	movlb	0	; () banked
  9555   009514  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  9556   009516  0E01               	movlw	1
  9557   009518  6F60               	movwf	MSdelay@val& (0+255),b
  9558   00951A  EC20  F049         	call	_MSdelay	;wreg free
  9559   00951E  0012               	return		;funcret
  9560   009520                     __end_of_LCD_Char:
  9561                           	callstack 0
  9562                           
  9563 ;; *************** function _LCD_Init *****************
  9564 ;; Defined at:
  9565 ;;		line 202 in file "main.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;		None
  9568 ;; Auto vars:     Size  Location     Type
  9569 ;;		None
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  1    wreg      void 
  9572 ;; Registers used:
  9573 ;;		wreg, status,2, status,0, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 0/0
  9576 ;;		On exit  : 0/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9583 ;;Total ram usage:        0 bytes
  9584 ;; Hardware stack levels used: 1
  9585 ;; Hardware stack levels required when called: 4
  9586 ;; This function calls:
  9587 ;;		_LCD_Command
  9588 ;;		_MSdelay
  9589 ;; This function is called by:
  9590 ;;		_main
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594                           	psect	text31
  9595   0094CC                     __ptext31:
  9596                           	callstack 0
  9597   0094CC                     _LCD_Init:
  9598                           	callstack 26
  9599   0094CC                     
  9600                           ;main.c: 203:     MSdelay(30);
  9601   0094CC  0E00               	movlw	0
  9602   0094CE  0100               	movlb	0	; () banked
  9603   0094D0  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  9604   0094D2  0E1E               	movlw	30
  9605   0094D4  6F60               	movwf	MSdelay@val& (0+255),b
  9606   0094D6  EC20  F049         	call	_MSdelay	;wreg free
  9607   0094DA                     
  9608                           ;main.c: 204:     TRISB = 0x00;
  9609   0094DA  6AC3               	clrf	195,c	;volatile
  9610   0094DC                     
  9611                           ;main.c: 205:     TRISD = 0x00;
  9612   0094DC  6AC5               	clrf	197,c	;volatile
  9613                           
  9614                           ;main.c: 206:     LCD_Command(0x01);
  9615   0094DE  0E01               	movlw	1
  9616   0094E0  EC90  F04A         	call	_LCD_Command
  9617                           
  9618                           ;main.c: 207:     LCD_Command(0x38);
  9619   0094E4  0E38               	movlw	56
  9620   0094E6  EC90  F04A         	call	_LCD_Command
  9621                           
  9622                           ;main.c: 208:     LCD_Command(0x0C);
  9623   0094EA  0E0C               	movlw	12
  9624   0094EC  EC90  F04A         	call	_LCD_Command
  9625                           
  9626                           ;main.c: 209:     LCD_Command(0x06);
  9627   0094F0  0E06               	movlw	6
  9628   0094F2  EC90  F04A         	call	_LCD_Command
  9629   0094F6  0012               	return		;funcret
  9630   0094F8                     __end_of_LCD_Init:
  9631                           	callstack 0
  9632                           
  9633 ;; *************** function _LCD_Command *****************
  9634 ;; Defined at:
  9635 ;;		line 216 in file "main.c"
  9636 ;; Parameters:    Size  Location     Type
  9637 ;;  cmd             1    wreg     unsigned char 
  9638 ;; Auto vars:     Size  Location     Type
  9639 ;;  cmd             1    6[BANK0 ] unsigned char 
  9640 ;; Return value:  Size  Location     Type
  9641 ;;                  1    wreg      void 
  9642 ;; Registers used:
  9643 ;;		wreg, status,2, status,0, cstack
  9644 ;; Tracked objects:
  9645 ;;		On entry : 0/0
  9646 ;;		On exit  : 0/0
  9647 ;;		Unchanged: 0/0
  9648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9650 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9652 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9653 ;;Total ram usage:        1 bytes
  9654 ;; Hardware stack levels used: 1
  9655 ;; Hardware stack levels required when called: 3
  9656 ;; This function calls:
  9657 ;;		_MSdelay
  9658 ;; This function is called by:
  9659 ;;		_main
  9660 ;;		_LCD_Init
  9661 ;;		_LCD_String_xy
  9662 ;;		_LCD_Clear
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           
  9666                           	psect	text32
  9667   009520                     __ptext32:
  9668                           	callstack 0
  9669   009520                     _LCD_Command:
  9670                           	callstack 26
  9671                           
  9672                           ;incstack = 0
  9673                           ;LCD_Command@cmd stored from wreg
  9674   009520  0100               	movlb	0	; () banked
  9675   009522  6F66               	movwf	LCD_Command@cmd& (0+255),b
  9676   009524                     
  9677                           ;main.c: 217:     LATB = cmd;
  9678   009524  0060  F19B  FFBB   	movff	LCD_Command@cmd,16315	;volatile
  9679   00952A                     
  9680                           ;main.c: 218:     LATD0 = 0;
  9681   00952A  90BD               	bcf	16317,0,c	;volatile
  9682   00952C                     
  9683                           ;main.c: 219:     LATD1 = 1;
  9684   00952C  82BD               	bsf	16317,1,c	;volatile
  9685   00952E                     
  9686                           ;main.c: 220:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  9687   00952E  0E10               	movlw	16
  9688   009530                     u7137:
  9689   009530  2EE8               	decfsz	wreg,f,c
  9690   009532  D7FE               	bra	u7137
  9691   009534  D000               	nop2	
  9692   009536                     
  9693                           ;main.c: 221:     LATD1 = 0;
  9694   009536  92BD               	bcf	16317,1,c	;volatile
  9695   009538                     
  9696                           ;main.c: 222:     MSdelay(3);
  9697   009538  0E00               	movlw	0
  9698   00953A  0100               	movlb	0	; () banked
  9699   00953C  6F61               	movwf	(MSdelay@val+1)& (0+255),b
  9700   00953E  0E03               	movlw	3
  9701   009540  6F60               	movwf	MSdelay@val& (0+255),b
  9702   009542  EC20  F049         	call	_MSdelay	;wreg free
  9703   009546  0012               	return		;funcret
  9704   009548                     __end_of_LCD_Command:
  9705                           	callstack 0
  9706                           
  9707 ;; *************** function _MSdelay *****************
  9708 ;; Defined at:
  9709 ;;		line 247 in file "main.c"
  9710 ;; Parameters:    Size  Location     Type
  9711 ;;  val             2    0[BANK0 ] unsigned int 
  9712 ;; Auto vars:     Size  Location     Type
  9713 ;;  j               2    4[BANK0 ] unsigned int 
  9714 ;;  i               2    2[BANK0 ] unsigned int 
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, status,2, status,0
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/0
  9721 ;;		On exit  : 0/0
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9724 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9725 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9727 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9728 ;;Total ram usage:        6 bytes
  9729 ;; Hardware stack levels used: 1
  9730 ;; Hardware stack levels required when called: 2
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_LCD_Init
  9735 ;;		_LCD_Command
  9736 ;;		_LCD_Char
  9737 ;; This function uses a non-reentrant model
  9738 ;;
  9739                           
  9740                           	psect	text33
  9741   009240                     __ptext33:
  9742                           	callstack 0
  9743   009240                     _MSdelay:
  9744                           	callstack 25
  9745   009240                     
  9746                           ;main.c: 248:     unsigned int i, j;;main.c: 249:     for (i = 0; i < val; i++)
  9747   009240  0E00               	movlw	0
  9748   009242  0100               	movlb	0	; () banked
  9749   009244  6F63               	movwf	(MSdelay@i+1)& (0+255),b
  9750   009246  0E00               	movlw	0
  9751   009248  6F62               	movwf	MSdelay@i& (0+255),b
  9752   00924A  EF3A  F049         	goto	l5031
  9753   00924E                     l5019:
  9754                           
  9755                           ; BSR set to: 0
  9756                           ;main.c: 250:         for (j = 0; j < 165; j++);
  9757   00924E  0E00               	movlw	0
  9758   009250  6F65               	movwf	(MSdelay@j+1)& (0+255),b
  9759   009252  0E00               	movlw	0
  9760   009254  6F64               	movwf	MSdelay@j& (0+255),b
  9761   009256                     l5025:
  9762                           
  9763                           ; BSR set to: 0
  9764   009256  4B64               	infsnz	MSdelay@j& (0+255),f,b
  9765   009258  2B65               	incf	(MSdelay@j+1)& (0+255),f,b
  9766   00925A                     
  9767                           ; BSR set to: 0
  9768   00925A  5165               	movf	(MSdelay@j+1)& (0+255),w,b
  9769   00925C  E109               	bnz	u6340
  9770   00925E  0EA5               	movlw	165
  9771   009260  5D64               	subwf	MSdelay@j& (0+255),w,b
  9772   009262  A0D8               	btfss	status,0,c
  9773   009264  EF36  F049         	goto	u6341
  9774   009268  EF38  F049         	goto	u6340
  9775   00926C                     u6341:
  9776   00926C  EF2B  F049         	goto	l5025
  9777   009270                     u6340:
  9778   009270                     
  9779                           ; BSR set to: 0
  9780   009270  4B62               	infsnz	MSdelay@i& (0+255),f,b
  9781   009272  2B63               	incf	(MSdelay@i+1)& (0+255),f,b
  9782   009274                     l5031:
  9783                           
  9784                           ; BSR set to: 0
  9785   009274  5160               	movf	MSdelay@val& (0+255),w,b
  9786   009276  5D62               	subwf	MSdelay@i& (0+255),w,b
  9787   009278  5161               	movf	(MSdelay@val+1)& (0+255),w,b
  9788   00927A  5963               	subwfb	(MSdelay@i+1)& (0+255),w,b
  9789   00927C  A0D8               	btfss	status,0,c
  9790   00927E  EF43  F049         	goto	u6351
  9791   009282  EF45  F049         	goto	u6350
  9792   009286                     u6351:
  9793   009286  EF27  F049         	goto	l5019
  9794   00928A                     u6350:
  9795   00928A                     
  9796                           ; BSR set to: 0
  9797   00928A  0012               	return		;funcret
  9798   00928C                     __end_of_MSdelay:
  9799                           	callstack 0
  9800                           
  9801 ;; *************** function _Interrupt_Init *****************
  9802 ;; Defined at:
  9803 ;;		line 290 in file "main.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;		None
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  1    wreg      void 
  9810 ;; Registers used:
  9811 ;;		wreg, status,2
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9821 ;;Total ram usage:        0 bytes
  9822 ;; Hardware stack levels used: 1
  9823 ;; Hardware stack levels required when called: 2
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_main
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text34
  9832   0093E8                     __ptext34:
  9833                           	callstack 0
  9834   0093E8                     _Interrupt_Init:
  9835                           	callstack 28
  9836   0093E8                     
  9837                           ;main.c: 291:     INTCON0bits.GIE = 0;
  9838   0093E8  9ED2               	bcf	210,7,c	;volatile
  9839                           
  9840                           ;main.c: 294:     TRISCbits.TRISC3 = 0;
  9841   0093EA  96C4               	bcf	196,3,c	;volatile
  9842                           
  9843                           ;main.c: 295:     LATCbits.LATC3 = 0;
  9844   0093EC  96BC               	bcf	188,3,c	;volatile
  9845                           
  9846                           ;main.c: 296:     ODCONCbits.ODCC3 = 0;
  9847   0093EE  013A               	movlb	58	; () banked
  9848   0093F0  9762               	bcf	98,3,b	;volatile
  9849                           
  9850                           ;main.c: 297:     ANSELCbits.ANSELC3 = 0;
  9851   0093F2  9760               	bcf	96,3,b	;volatile
  9852                           
  9853                           ;main.c: 300:     TRISCbits.TRISC2 = 1;
  9854   0093F4  84C4               	bsf	196,2,c	;volatile
  9855                           
  9856                           ;main.c: 301:     ANSELCbits.ANSELC2 = 0;
  9857   0093F6  9560               	bcf	96,2,b	;volatile
  9858                           
  9859                           ;main.c: 302:     WPUCbits.WPUC2 = 1;
  9860   0093F8  8561               	bsf	97,2,b	;volatile
  9861                           
  9862                           ;main.c: 303:     INLVLCbits.INLVLC2 = 1;
  9863   0093FA  8564               	bsf	100,2,b	;volatile
  9864                           
  9865                           ;main.c: 304:     SLRCONCbits.SLRC2 = 0;
  9866   0093FC  9563               	bcf	99,2,b	;volatile
  9867                           
  9868                           ;main.c: 305:     ODCONCbits.ODCC2 = 0;
  9869   0093FE  9562               	bcf	98,2,b	;volatile
  9870                           
  9871                           ;main.c: 308:     IVTBASEU = 0x00;
  9872   009400  6AD7               	clrf	215,c	;volatile
  9873   009402                     
  9874                           ; BSR set to: 58
  9875                           ;main.c: 309:     IVTBASEH = 0x60;
  9876   009402  0E60               	movlw	96
  9877   009404  6ED6               	movwf	214,c	;volatile
  9878                           
  9879                           ;main.c: 310:     IVTBASEL = 0x08;
  9880   009406  0E08               	movlw	8
  9881   009408  6ED5               	movwf	213,c	;volatile
  9882   00940A                     
  9883                           ; BSR set to: 58
  9884                           ;main.c: 313:     IOCCFbits.IOCCF2 = 0;
  9885   00940A  9567               	bcf	103,2,b	;volatile
  9886   00940C                     
  9887                           ; BSR set to: 58
  9888                           ;main.c: 314:     PIE0bits.IOCIE = 0;
  9889   00940C  0139               	movlb	57	; () banked
  9890   00940E  9F90               	bcf	144,7,b	;volatile
  9891   009410                     
  9892                           ; BSR set to: 57
  9893                           ;main.c: 315:     IOCCPbits.IOCCP2 = 1;
  9894   009410  013A               	movlb	58	; () banked
  9895   009412  8565               	bsf	101,2,b	;volatile
  9896   009414                     
  9897                           ; BSR set to: 58
  9898                           ;main.c: 316:     IOCCNbits.IOCCN2 = 1;
  9899   009414  8566               	bsf	102,2,b	;volatile
  9900   009416                     
  9901                           ; BSR set to: 58
  9902                           ;main.c: 317:     PIR0bits.IOCIF = 0;
  9903   009416  0139               	movlb	57	; () banked
  9904   009418  9FA0               	bcf	160,7,b	;volatile
  9905   00941A                     
  9906                           ; BSR set to: 57
  9907                           ;main.c: 318:     PIE0bits.IOCIE = 1;
  9908   00941A  8F90               	bsf	144,7,b	;volatile
  9909   00941C                     
  9910                           ; BSR set to: 57
  9911                           ;main.c: 321:     INTCON0bits.IPEN = 1;
  9912   00941C  8AD2               	bsf	210,5,c	;volatile
  9913   00941E                     
  9914                           ; BSR set to: 57
  9915                           ;main.c: 322:     INTCON0bits.GIEH = 1;
  9916   00941E  8ED2               	bsf	210,7,c	;volatile
  9917   009420                     
  9918                           ; BSR set to: 57
  9919                           ;main.c: 323:     INTCON0bits.GIEL = 1;
  9920   009420  8CD2               	bsf	210,6,c	;volatile
  9921   009422                     
  9922                           ; BSR set to: 57
  9923                           ;main.c: 324:     INTCON0bits.GIE = 1;
  9924   009422  8ED2               	bsf	210,7,c	;volatile
  9925   009424                     
  9926                           ; BSR set to: 57
  9927   009424  0012               	return		;funcret
  9928   009426                     __end_of_Interrupt_Init:
  9929                           	callstack 0
  9930                           
  9931 ;; *************** function _ADC_Init *****************
  9932 ;; Defined at:
  9933 ;;		line 253 in file "main.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;		None
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;		None
  9938 ;; Return value:  Size  Location     Type
  9939 ;;                  1    wreg      void 
  9940 ;; Registers used:
  9941 ;;		wreg, status,2
  9942 ;; Tracked objects:
  9943 ;;		On entry : 0/0
  9944 ;;		On exit  : 0/0
  9945 ;;		Unchanged: 0/0
  9946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9951 ;;Total ram usage:        0 bytes
  9952 ;; Hardware stack levels used: 1
  9953 ;; Hardware stack levels required when called: 2
  9954 ;; This function calls:
  9955 ;;		Nothing
  9956 ;; This function is called by:
  9957 ;;		_main
  9958 ;; This function uses a non-reentrant model
  9959 ;;
  9960                           
  9961                           	psect	text35
  9962   009548                     __ptext35:
  9963                           	callstack 0
  9964   009548                     _ADC_Init:
  9965                           	callstack 28
  9966   009548                     
  9967                           ;main.c: 254:     TRISAbits.TRISA0 = 1;
  9968   009548  80C2               	bsf	194,0,c	;volatile
  9969                           
  9970                           ;main.c: 255:     ANSELAbits.ANSELA0 = 1;
  9971   00954A  013A               	movlb	58	; () banked
  9972   00954C  8140               	bsf	64,0,b	;volatile
  9973   00954E                     
  9974                           ; BSR set to: 58
  9975                           ;main.c: 256:     ADCON0bits.FM = 1;
  9976   00954E  013E               	movlb	62	; () banked
  9977   009550  51F8               	movf	248,w,b	;volatile
  9978   009552  0BF3               	andlw	-13
  9979   009554  0904               	iorlw	4
  9980   009556  6FF8               	movwf	248,b	;volatile
  9981   009558                     
  9982                           ; BSR set to: 62
  9983                           ;main.c: 257:     ADCON0bits.CS = 1;
  9984   009558  89F8               	bsf	248,4,b	;volatile
  9985   00955A                     
  9986                           ; BSR set to: 62
  9987                           ;main.c: 258:     ADPCH = 0x00;
  9988   00955A  6BF1               	clrf	241,b	;volatile
  9989   00955C                     
  9990                           ; BSR set to: 62
  9991                           ;main.c: 259:     ADCON0bits.ON = 1;
  9992   00955C  8FF8               	bsf	248,7,b	;volatile
  9993   00955E                     
  9994                           ; BSR set to: 62
  9995                           ;main.c: 260:     ADCLK = 0x00;
  9996   00955E  6BFF               	clrf	255,b	;volatile
  9997   009560                     
  9998                           ; BSR set to: 62
  9999                           ;main.c: 261:     ADRESL = 0x00;
 10000   009560  6BEF               	clrf	239,b	;volatile
 10001   009562                     
 10002                           ; BSR set to: 62
 10003                           ;main.c: 262:     ADRESH = 0x00;
 10004   009562  6BF0               	clrf	240,b	;volatile
 10005   009564                     
 10006                           ; BSR set to: 62
 10007                           ;main.c: 263:     ADPREL = 0x00;
 10008   009564  6BF6               	clrf	246,b	;volatile
 10009   009566                     
 10010                           ; BSR set to: 62
 10011                           ;main.c: 264:     ADPREH = 0x00;
 10012   009566  6BF7               	clrf	247,b	;volatile
 10013   009568                     
 10014                           ; BSR set to: 62
 10015                           ;main.c: 265:     ADACQL = 0x00;
 10016   009568  6BF3               	clrf	243,b	;volatile
 10017   00956A                     
 10018                           ; BSR set to: 62
 10019                           ;main.c: 266:     ADACQH = 0x00;
 10020   00956A  6BF4               	clrf	244,b	;volatile
 10021   00956C                     
 10022                           ; BSR set to: 62
 10023   00956C  0012               	return		;funcret
 10024   00956E                     __end_of_ADC_Init:
 10025                           	callstack 0
 10026                           
 10027 ;; *************** function _my_ISR *****************
 10028 ;; Defined at:
 10029 ;;		line 269 in file "main.c"
 10030 ;; Parameters:    Size  Location     Type
 10031 ;;		None
 10032 ;; Auto vars:     Size  Location     Type
 10033 ;;  portValue       1    0        unsigned char 
 10034 ;; Return value:  Size  Location     Type
 10035 ;;                  1    wreg      void 
 10036 ;; Registers used:
 10037 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10038 ;; Tracked objects:
 10039 ;;		On entry : 0/0
 10040 ;;		On exit  : 0/0
 10041 ;;		Unchanged: 0/0
 10042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10045 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10047 ;;Total ram usage:        2 bytes
 10048 ;; Hardware stack levels used: 1
 10049 ;; Hardware stack levels required when called: 1
 10050 ;; This function calls:
 10051 ;;		i2___flmul
 10052 ;;		i2___xxtofl
 10053 ;; This function is called by:
 10054 ;;		Interrupt level 2
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text36
 10059   008B90                     __ptext36:
 10060                           	callstack 0
 10061   008B90                     _my_ISR:
 10062                           	callstack 21
 10063   008B90                     
 10064                           ;main.c: 270:     if (PIR0bits.IOCIF) {
 10065   008B90  0139               	movlb	57	; () banked
 10066   008B92  AFA0               	btfss	160,7,b	;volatile
 10067   008B94  EFCE  F045         	goto	i2u491_41
 10068   008B98  EFD0  F045         	goto	i2u491_40
 10069   008B9C                     i2u491_41:
 10070   008B9C  EFE0  F045         	goto	i2l4253
 10071   008BA0                     i2u491_40:
 10072   008BA0                     
 10073                           ; BSR set to: 57
 10074                           ;main.c: 271:         if (IOCCFbits.IOCCF2) {
 10075   008BA0  013A               	movlb	58	; () banked
 10076   008BA2  A567               	btfss	103,2,b	;volatile
 10077   008BA4  EFD6  F045         	goto	i2u492_41
 10078   008BA8  EFD8  F045         	goto	i2u492_40
 10079   008BAC                     i2u492_41:
 10080   008BAC  EFE0  F045         	goto	i2l4253
 10081   008BB0                     i2u492_40:
 10082   008BB0                     
 10083                           ; BSR set to: 58
 10084                           ;main.c: 272:             interruptTriggered = 1;
 10085   008BB0  0E01               	movlw	1
 10086   008BB2  0100               	movlb	0	; () banked
 10087   008BB4  6FF7               	movwf	_interruptTriggered& (0+255),b
 10088   008BB6                     
 10089                           ; BSR set to: 0
 10090   008BB6  50CC               	movf	204,w,c	;volatile
 10091   008BB8                     
 10092                           ; BSR set to: 0
 10093                           ;main.c: 274:             IOCCFbits.IOCCF2 = 0;
 10094   008BB8  013A               	movlb	58	; () banked
 10095   008BBA  9567               	bcf	103,2,b	;volatile
 10096   008BBC                     
 10097                           ; BSR set to: 58
 10098                           ;main.c: 275:             PIR0bits.IOCIF = 0;
 10099   008BBC  0139               	movlb	57	; () banked
 10100   008BBE  9FA0               	bcf	160,7,b	;volatile
 10101   008BC0                     i2l4253:
 10102                           
 10103                           ;main.c: 279:     if (PIR1bits.ADIF) {
 10104   008BC0  0139               	movlb	57	; () banked
 10105   008BC2  A5A1               	btfss	161,2,b	;volatile
 10106   008BC4  EFE6  F045         	goto	i2u493_41
 10107   008BC8  EFE8  F045         	goto	i2u493_40
 10108   008BCC                     i2u493_41:
 10109   008BCC  EF44  F046         	goto	i2l171
 10110   008BD0                     i2u493_40:
 10111   008BD0                     
 10112                           ; BSR set to: 57
 10113                           ;main.c: 280:         if (systemState == 0) {
 10114   008BD0  0100               	movlb	0	; () banked
 10115   008BD2  51F6               	movf	_systemState& (0+255),w,b
 10116   008BD4  A4D8               	btfss	status,2,c
 10117   008BD6  EFEF  F045         	goto	i2u494_41
 10118   008BDA  EFF1  F045         	goto	i2u494_40
 10119   008BDE                     i2u494_41:
 10120   008BDE  EF42  F046         	goto	i2l4265
 10121   008BE2                     i2u494_40:
 10122   008BE2                     
 10123                           ; BSR set to: 0
 10124                           ;main.c: 281:             digital = (ADRESH << 8) | ADRESL;
 10125   008BE2  013E               	movlb	62	; () banked
 10126   008BE4  51EF               	movf	239,w,b	;volatile
 10127   008BE6  006F FBC0  F028    	movff	16112,??_my_ISR	;volatile
 10128   008BEC  6A29               	clrf	(??_my_ISR+1)^0,c
 10129   008BEE  C028  F029         	movff	??_my_ISR,??_my_ISR+1
 10130   008BF2  6A28               	clrf	??_my_ISR^0,c
 10131   008BF4  1028               	iorwf	??_my_ISR^0,w,c
 10132   008BF6  0100               	movlb	0	; () banked
 10133   008BF8  6FF3               	movwf	_digital& (0+255),b
 10134   008BFA  5029               	movf	(??_my_ISR+1)^0,w,c
 10135   008BFC  6FF4               	movwf	(_digital+1)& (0+255),b
 10136   008BFE                     
 10137                           ; BSR set to: 0
 10138                           ;main.c: 282:             voltage = digital * (5.0 / 4096.0);
 10139   008BFE  C0F3  F001         	movff	_digital,i2___xxtofl@val
 10140   008C02  C0F4  F002         	movff	_digital+1,i2___xxtofl@val+1
 10141   008C06  0E00               	movlw	0
 10142   008C08  BE02               	btfsc	(i2___xxtofl@val+1)^0,7,c
 10143   008C0A  0EFF               	movlw	-1
 10144   008C0C  6E03               	movwf	(i2___xxtofl@val+2)^0,c
 10145   008C0E  6E04               	movwf	(i2___xxtofl@val+3)^0,c
 10146   008C10  0E01               	movlw	1
 10147   008C12  ECA7  F042         	call	i2___xxtofl
 10148   008C16  C001  F00F         	movff	?i2___xxtofl,i2___flmul@b
 10149   008C1A  C002  F010         	movff	?i2___xxtofl+1,i2___flmul@b+1
 10150   008C1E  C003  F011         	movff	?i2___xxtofl+2,i2___flmul@b+2
 10151   008C22  C004  F012         	movff	?i2___xxtofl+3,i2___flmul@b+3
 10152   008C26  0E00               	movlw	0
 10153   008C28  6E13               	movwf	i2___flmul@a^0,c
 10154   008C2A  0E00               	movlw	0
 10155   008C2C  6E14               	movwf	(i2___flmul@a+1)^0,c
 10156   008C2E  0EA0               	movlw	160
 10157   008C30  6E15               	movwf	(i2___flmul@a+2)^0,c
 10158   008C32  0E3A               	movlw	58
 10159   008C34  6E16               	movwf	(i2___flmul@a+3)^0,c
 10160   008C36  ECD2  F039         	call	i2___flmul	;wreg free
 10161   008C3A  C00F  F0EB         	movff	?i2___flmul,_voltage
 10162   008C3E  C010  F0EC         	movff	?i2___flmul+1,_voltage+1
 10163   008C42  C011  F0ED         	movff	?i2___flmul+2,_voltage+2
 10164   008C46  C012  F0EE         	movff	?i2___flmul+3,_voltage+3
 10165   008C4A                     
 10166                           ;main.c: 283:             lux = voltage * 200;
 10167   008C4A  C0EB  F00F         	movff	_voltage,i2___flmul@b
 10168   008C4E  C0EC  F010         	movff	_voltage+1,i2___flmul@b+1
 10169   008C52  C0ED  F011         	movff	_voltage+2,i2___flmul@b+2
 10170   008C56  C0EE  F012         	movff	_voltage+3,i2___flmul@b+3
 10171   008C5A  0E00               	movlw	0
 10172   008C5C  6E13               	movwf	i2___flmul@a^0,c
 10173   008C5E  0E00               	movlw	0
 10174   008C60  6E14               	movwf	(i2___flmul@a+1)^0,c
 10175   008C62  0E48               	movlw	72
 10176   008C64  6E15               	movwf	(i2___flmul@a+2)^0,c
 10177   008C66  0E43               	movlw	67
 10178   008C68  6E16               	movwf	(i2___flmul@a+3)^0,c
 10179   008C6A  ECD2  F039         	call	i2___flmul	;wreg free
 10180   008C6E  C00F  F032         	movff	?i2___flmul,_lux
 10181   008C72  C010  F033         	movff	?i2___flmul+1,_lux+1
 10182   008C76  C011  F034         	movff	?i2___flmul+2,_lux+2
 10183   008C7A  C012  F035         	movff	?i2___flmul+3,_lux+3
 10184   008C7E                     
 10185                           ;main.c: 284:             adcReady = 1;
 10186   008C7E  0E01               	movlw	1
 10187   008C80  0100               	movlb	0	; () banked
 10188   008C82  6FF8               	movwf	_adcReady& (0+255),b
 10189   008C84                     i2l4265:
 10190                           
 10191                           ; BSR set to: 0
 10192                           ;main.c: 286:         PIR1bits.ADIF = 0;
 10193   008C84  0139               	movlb	57	; () banked
 10194   008C86  95A1               	bcf	161,2,b	;volatile
 10195   008C88                     i2l171:
 10196                           
 10197                           ; BSR set to: 57
 10198   008C88  0011               	retfie		f
 10199   008C8A                     __end_of_my_ISR:
 10200                           	callstack 0
 10201                           
 10202 ;; *************** function i2___xxtofl *****************
 10203 ;; Defined at:
 10204 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
 10205 ;; Parameters:    Size  Location     Type
 10206 ;;  sign            1    wreg     unsigned char 
 10207 ;;  val             4    0[COMRAM] long 
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;  sign            1    8[COMRAM] unsigned char 
 10210 ;;  arg             4   10[COMRAM] unsigned long 
 10211 ;;  exp             1    9[COMRAM] unsigned char 
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  4    0[COMRAM] unsigned char 
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10222 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10224 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10225 ;;Total ram usage:       14 bytes
 10226 ;; Hardware stack levels used: 1
 10227 ;; This function calls:
 10228 ;;		Nothing
 10229 ;; This function is called by:
 10230 ;;		_my_ISR
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text37
 10235   00854E                     __ptext37:
 10236                           	callstack 0
 10237   00854E                     i2___xxtofl:
 10238                           	callstack 21
 10239                           
 10240                           ; BSR set to: 57
 10241                           ;incstack = 0
 10242                           ;i2___xxtofl@sign stored from wreg
 10243   00854E  6E09               	movwf	i2___xxtofl@sign^0,c
 10244   008550  5009               	movf	i2___xxtofl@sign^0,w,c
 10245   008552  B4D8               	btfsc	status,2,c
 10246   008554  EFAE  F042         	goto	i2u473_41
 10247   008558  EFB0  F042         	goto	i2u473_40
 10248   00855C                     i2u473_41:
 10249   00855C  EFD2  F042         	goto	i2l832
 10250   008560                     i2u473_40:
 10251   008560  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 10252   008562  EFB7  F042         	goto	i2u474_40
 10253   008566  EFB5  F042         	goto	i2u474_41
 10254   00856A                     i2u474_41:
 10255   00856A  EFD2  F042         	goto	i2l832
 10256   00856E                     i2u474_40:
 10257   00856E  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 10258   008572  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 10259   008576  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 10260   00857A  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 10261   00857E  1E05               	comf	??i2___xxtofl^0,f,c
 10262   008580  1E06               	comf	(??i2___xxtofl+1)^0,f,c
 10263   008582  1E07               	comf	(??i2___xxtofl+2)^0,f,c
 10264   008584  1E08               	comf	(??i2___xxtofl+3)^0,f,c
 10265   008586  2A05               	incf	??i2___xxtofl^0,f,c
 10266   008588  0E00               	movlw	0
 10267   00858A  2206               	addwfc	(??i2___xxtofl+1)^0,f,c
 10268   00858C  2207               	addwfc	(??i2___xxtofl+2)^0,f,c
 10269   00858E  2208               	addwfc	(??i2___xxtofl+3)^0,f,c
 10270   008590  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 10271   008594  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 10272   008598  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 10273   00859C  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 10274   0085A0  EFDA  F042         	goto	i2l4107
 10275   0085A4                     i2l832:
 10276   0085A4  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 10277   0085A8  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 10278   0085AC  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 10279   0085B0  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 10280   0085B4                     i2l4107:
 10281   0085B4  5001               	movf	i2___xxtofl@val^0,w,c
 10282   0085B6  1002               	iorwf	(i2___xxtofl@val+1)^0,w,c
 10283   0085B8  1003               	iorwf	(i2___xxtofl@val+2)^0,w,c
 10284   0085BA  1004               	iorwf	(i2___xxtofl@val+3)^0,w,c
 10285   0085BC  A4D8               	btfss	status,2,c
 10286   0085BE  EFE3  F042         	goto	i2u475_41
 10287   0085C2  EFE5  F042         	goto	i2u475_40
 10288   0085C6                     i2u475_41:
 10289   0085C6  EFEF  F042         	goto	i2l4113
 10290   0085CA                     i2u475_40:
 10291   0085CA  0E00               	movlw	0
 10292   0085CC  6E01               	movwf	?i2___xxtofl^0,c
 10293   0085CE  0E00               	movlw	0
 10294   0085D0  6E02               	movwf	(?i2___xxtofl+1)^0,c
 10295   0085D2  0E00               	movlw	0
 10296   0085D4  6E03               	movwf	(?i2___xxtofl+2)^0,c
 10297   0085D6  0E00               	movlw	0
 10298   0085D8  6E04               	movwf	(?i2___xxtofl+3)^0,c
 10299   0085DA  EF80  F043         	goto	i2l835
 10300   0085DE                     i2l4113:
 10301   0085DE  0E96               	movlw	150
 10302   0085E0  6E0A               	movwf	i2___xxtofl@exp^0,c
 10303   0085E2  EFF9  F042         	goto	i2l4117
 10304   0085E6                     i2l4115:
 10305   0085E6  2A0A               	incf	i2___xxtofl@exp^0,f,c
 10306   0085E8  90D8               	bcf	status,0,c
 10307   0085EA  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 10308   0085EC  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 10309   0085EE  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 10310   0085F0  320B               	rrcf	i2___xxtofl@arg^0,f,c
 10311   0085F2                     i2l4117:
 10312   0085F2  0E00               	movlw	0
 10313   0085F4  140B               	andwf	i2___xxtofl@arg^0,w,c
 10314   0085F6  6E05               	movwf	??i2___xxtofl^0,c
 10315   0085F8  0E00               	movlw	0
 10316   0085FA  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 10317   0085FC  6E06               	movwf	(??i2___xxtofl+1)^0,c
 10318   0085FE  0E00               	movlw	0
 10319   008600  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 10320   008602  6E07               	movwf	(??i2___xxtofl+2)^0,c
 10321   008604  0EFE               	movlw	254
 10322   008606  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 10323   008608  6E08               	movwf	(??i2___xxtofl+3)^0,c
 10324   00860A  5005               	movf	??i2___xxtofl^0,w,c
 10325   00860C  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 10326   00860E  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 10327   008610  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 10328   008612  A4D8               	btfss	status,2,c
 10329   008614  EF0E  F043         	goto	i2u476_41
 10330   008618  EF10  F043         	goto	i2u476_40
 10331   00861C                     i2u476_41:
 10332   00861C  EFF3  F042         	goto	i2l4115
 10333   008620                     i2u476_40:
 10334   008620  EF1E  F043         	goto	i2l839
 10335   008624                     i2l4119:
 10336   008624  2A0A               	incf	i2___xxtofl@exp^0,f,c
 10337   008626  0E01               	movlw	1
 10338   008628  260B               	addwf	i2___xxtofl@arg^0,f,c
 10339   00862A  0E00               	movlw	0
 10340   00862C  220C               	addwfc	(i2___xxtofl@arg+1)^0,f,c
 10341   00862E  220D               	addwfc	(i2___xxtofl@arg+2)^0,f,c
 10342   008630  220E               	addwfc	(i2___xxtofl@arg+3)^0,f,c
 10343   008632  90D8               	bcf	status,0,c
 10344   008634  320E               	rrcf	(i2___xxtofl@arg+3)^0,f,c
 10345   008636  320D               	rrcf	(i2___xxtofl@arg+2)^0,f,c
 10346   008638  320C               	rrcf	(i2___xxtofl@arg+1)^0,f,c
 10347   00863A  320B               	rrcf	i2___xxtofl@arg^0,f,c
 10348   00863C                     i2l839:
 10349   00863C  0E00               	movlw	0
 10350   00863E  140B               	andwf	i2___xxtofl@arg^0,w,c
 10351   008640  6E05               	movwf	??i2___xxtofl^0,c
 10352   008642  0E00               	movlw	0
 10353   008644  140C               	andwf	(i2___xxtofl@arg+1)^0,w,c
 10354   008646  6E06               	movwf	(??i2___xxtofl+1)^0,c
 10355   008648  0E00               	movlw	0
 10356   00864A  140D               	andwf	(i2___xxtofl@arg+2)^0,w,c
 10357   00864C  6E07               	movwf	(??i2___xxtofl+2)^0,c
 10358   00864E  0EFF               	movlw	255
 10359   008650  140E               	andwf	(i2___xxtofl@arg+3)^0,w,c
 10360   008652  6E08               	movwf	(??i2___xxtofl+3)^0,c
 10361   008654  5005               	movf	??i2___xxtofl^0,w,c
 10362   008656  1006               	iorwf	(??i2___xxtofl+1)^0,w,c
 10363   008658  1007               	iorwf	(??i2___xxtofl+2)^0,w,c
 10364   00865A  1008               	iorwf	(??i2___xxtofl+3)^0,w,c
 10365   00865C  A4D8               	btfss	status,2,c
 10366   00865E  EF33  F043         	goto	i2u477_41
 10367   008662  EF35  F043         	goto	i2u477_40
 10368   008666                     i2u477_41:
 10369   008666  EF12  F043         	goto	i2l4119
 10370   00866A                     i2u477_40:
 10371   00866A  EF3D  F043         	goto	i2l4127
 10372   00866E                     i2l4125:
 10373   00866E  060A               	decf	i2___xxtofl@exp^0,f,c
 10374   008670  90D8               	bcf	status,0,c
 10375   008672  360B               	rlcf	i2___xxtofl@arg^0,f,c
 10376   008674  360C               	rlcf	(i2___xxtofl@arg+1)^0,f,c
 10377   008676  360D               	rlcf	(i2___xxtofl@arg+2)^0,f,c
 10378   008678  360E               	rlcf	(i2___xxtofl@arg+3)^0,f,c
 10379   00867A                     i2l4127:
 10380   00867A  BE0D               	btfsc	(i2___xxtofl@arg+2)^0,7,c
 10381   00867C  EF42  F043         	goto	i2u478_41
 10382   008680  EF44  F043         	goto	i2u478_40
 10383   008684                     i2u478_41:
 10384   008684  EF4C  F043         	goto	i2l846
 10385   008688                     i2u478_40:
 10386   008688  0E02               	movlw	2
 10387   00868A  600A               	cpfslt	i2___xxtofl@exp^0,c
 10388   00868C  EF4A  F043         	goto	i2u479_41
 10389   008690  EF4C  F043         	goto	i2u479_40
 10390   008694                     i2u479_41:
 10391   008694  EF37  F043         	goto	i2l4125
 10392   008698                     i2u479_40:
 10393   008698                     i2l846:
 10394   008698  B00A               	btfsc	i2___xxtofl@exp^0,0,c
 10395   00869A  EF51  F043         	goto	i2u480_41
 10396   00869E  EF53  F043         	goto	i2u480_40
 10397   0086A2                     i2u480_41:
 10398   0086A2  EF54  F043         	goto	i2l4133
 10399   0086A6                     i2u480_40:
 10400   0086A6  9E0D               	bcf	(i2___xxtofl@arg+2)^0,7,c
 10401   0086A8                     i2l4133:
 10402   0086A8  90D8               	bcf	status,0,c
 10403   0086AA  320A               	rrcf	i2___xxtofl@exp^0,f,c
 10404   0086AC  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 10405   0086B0  6A06               	clrf	(??i2___xxtofl+1)^0,c
 10406   0086B2  6A07               	clrf	(??i2___xxtofl+2)^0,c
 10407   0086B4  6A08               	clrf	(??i2___xxtofl+3)^0,c
 10408   0086B6  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 10409   0086BA  6A07               	clrf	(??i2___xxtofl+2)^0,c
 10410   0086BC  6A06               	clrf	(??i2___xxtofl+1)^0,c
 10411   0086BE  6A05               	clrf	??i2___xxtofl^0,c
 10412   0086C0  5005               	movf	??i2___xxtofl^0,w,c
 10413   0086C2  120B               	iorwf	i2___xxtofl@arg^0,f,c
 10414   0086C4  5006               	movf	(??i2___xxtofl+1)^0,w,c
 10415   0086C6  120C               	iorwf	(i2___xxtofl@arg+1)^0,f,c
 10416   0086C8  5007               	movf	(??i2___xxtofl+2)^0,w,c
 10417   0086CA  120D               	iorwf	(i2___xxtofl@arg+2)^0,f,c
 10418   0086CC  5008               	movf	(??i2___xxtofl+3)^0,w,c
 10419   0086CE  120E               	iorwf	(i2___xxtofl@arg+3)^0,f,c
 10420   0086D0  5009               	movf	i2___xxtofl@sign^0,w,c
 10421   0086D2  B4D8               	btfsc	status,2,c
 10422   0086D4  EF6E  F043         	goto	i2u481_41
 10423   0086D8  EF70  F043         	goto	i2u481_40
 10424   0086DC                     i2u481_41:
 10425   0086DC  EF78  F043         	goto	i2l4143
 10426   0086E0                     i2u481_40:
 10427   0086E0  BE04               	btfsc	(i2___xxtofl@val+3)^0,7,c
 10428   0086E2  EF77  F043         	goto	i2u482_40
 10429   0086E6  EF75  F043         	goto	i2u482_41
 10430   0086EA                     i2u482_41:
 10431   0086EA  EF78  F043         	goto	i2l4143
 10432   0086EE                     i2u482_40:
 10433   0086EE  8E0E               	bsf	(i2___xxtofl@arg+3)^0,7,c
 10434   0086F0                     i2l4143:
 10435   0086F0  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 10436   0086F4  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 10437   0086F8  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 10438   0086FC  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 10439   008700                     i2l835:
 10440   008700  0012               	return		;funcret
 10441   008702                     __end_ofi2___xxtofl:
 10442                           	callstack 0
 10443                           
 10444 ;; *************** function i2___flmul *****************
 10445 ;; Defined at:
 10446 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
 10447 ;; Parameters:    Size  Location     Type
 10448 ;;  b               4   14[COMRAM] unsigned char 
 10449 ;;  a               4   18[COMRAM] unsigned char 
 10450 ;; Auto vars:     Size  Location     Type
 10451 ;;  prod            4   33[COMRAM] struct .
 10452 ;;  grs             4   27[COMRAM] unsigned long 
 10453 ;;  temp            2   37[COMRAM] struct .
 10454 ;;  bexp            1   32[COMRAM] unsigned char 
 10455 ;;  aexp            1   31[COMRAM] unsigned char 
 10456 ;;  sign            1   26[COMRAM] unsigned char 
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  4   14[COMRAM] unsigned char 
 10459 ;; Registers used:
 10460 ;;		wreg, status,2, status,0, prodl, prodh
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10466 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10467 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10468 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10469 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10470 ;;Total ram usage:       25 bytes
 10471 ;; Hardware stack levels used: 1
 10472 ;; This function calls:
 10473 ;;		Nothing
 10474 ;; This function is called by:
 10475 ;;		_my_ISR
 10476 ;; This function uses a non-reentrant model
 10477 ;;
 10478                           
 10479                           	psect	text38
 10480   0073A4                     __ptext38:
 10481                           	callstack 0
 10482   0073A4                     i2___flmul:
 10483                           	callstack 21
 10484   0073A4  5012               	movf	(i2___flmul@b+3)^0,w,c
 10485   0073A6  0B80               	andlw	128
 10486   0073A8  6E1B               	movwf	i2___flmul@sign^0,c
 10487   0073AA  5012               	movf	(i2___flmul@b+3)^0,w,c
 10488   0073AC  2412               	addwf	(i2___flmul@b+3)^0,w,c
 10489   0073AE  6E21               	movwf	i2___flmul@bexp^0,c
 10490   0073B0  AE11               	btfss	(i2___flmul@b+2)^0,7,c
 10491   0073B2  EFDD  F039         	goto	i2u454_41
 10492   0073B6  EFDF  F039         	goto	i2u454_40
 10493   0073BA                     i2u454_41:
 10494   0073BA  EFE0  F039         	goto	i2l3979
 10495   0073BE                     i2u454_40:
 10496   0073BE  8021               	bsf	i2___flmul@bexp^0,0,c
 10497   0073C0                     i2l3979:
 10498   0073C0  5021               	movf	i2___flmul@bexp^0,w,c
 10499   0073C2  B4D8               	btfsc	status,2,c
 10500   0073C4  EFE6  F039         	goto	i2u455_41
 10501   0073C8  EFE8  F039         	goto	i2u455_40
 10502   0073CC                     i2u455_41:
 10503   0073CC  EFFB  F039         	goto	i2l3987
 10504   0073D0                     i2u455_40:
 10505   0073D0  2821               	incf	i2___flmul@bexp^0,w,c
 10506   0073D2  A4D8               	btfss	status,2,c
 10507   0073D4  EFEE  F039         	goto	i2u456_41
 10508   0073D8  EFF0  F039         	goto	i2u456_40
 10509   0073DC                     i2u456_41:
 10510   0073DC  EFF8  F039         	goto	i2l3985
 10511   0073E0                     i2u456_40:
 10512   0073E0  0E00               	movlw	0
 10513   0073E2  6E0F               	movwf	i2___flmul@b^0,c
 10514   0073E4  0E00               	movlw	0
 10515   0073E6  6E10               	movwf	(i2___flmul@b+1)^0,c
 10516   0073E8  0E00               	movlw	0
 10517   0073EA  6E11               	movwf	(i2___flmul@b+2)^0,c
 10518   0073EC  0E00               	movlw	0
 10519   0073EE  6E12               	movwf	(i2___flmul@b+3)^0,c
 10520   0073F0                     i2l3985:
 10521   0073F0  8E11               	bsf	(i2___flmul@b+2)^0,7,c
 10522   0073F2  EF03  F03A         	goto	i2l3989
 10523   0073F6                     i2l3987:
 10524   0073F6  0E00               	movlw	0
 10525   0073F8  6E0F               	movwf	i2___flmul@b^0,c
 10526   0073FA  0E00               	movlw	0
 10527   0073FC  6E10               	movwf	(i2___flmul@b+1)^0,c
 10528   0073FE  0E00               	movlw	0
 10529   007400  6E11               	movwf	(i2___flmul@b+2)^0,c
 10530   007402  0E00               	movlw	0
 10531   007404  6E12               	movwf	(i2___flmul@b+3)^0,c
 10532   007406                     i2l3989:
 10533   007406  5016               	movf	(i2___flmul@a+3)^0,w,c
 10534   007408  0B80               	andlw	128
 10535   00740A  1A1B               	xorwf	i2___flmul@sign^0,f,c
 10536   00740C  5016               	movf	(i2___flmul@a+3)^0,w,c
 10537   00740E  2416               	addwf	(i2___flmul@a+3)^0,w,c
 10538   007410  6E20               	movwf	i2___flmul@aexp^0,c
 10539   007412  AE15               	btfss	(i2___flmul@a+2)^0,7,c
 10540   007414  EF0E  F03A         	goto	i2u457_41
 10541   007418  EF10  F03A         	goto	i2u457_40
 10542   00741C                     i2u457_41:
 10543   00741C  EF11  F03A         	goto	i2l3997
 10544   007420                     i2u457_40:
 10545   007420  8020               	bsf	i2___flmul@aexp^0,0,c
 10546   007422                     i2l3997:
 10547   007422  5020               	movf	i2___flmul@aexp^0,w,c
 10548   007424  B4D8               	btfsc	status,2,c
 10549   007426  EF17  F03A         	goto	i2u458_41
 10550   00742A  EF19  F03A         	goto	i2u458_40
 10551   00742E                     i2u458_41:
 10552   00742E  EF2C  F03A         	goto	i2l4005
 10553   007432                     i2u458_40:
 10554   007432  2820               	incf	i2___flmul@aexp^0,w,c
 10555   007434  A4D8               	btfss	status,2,c
 10556   007436  EF1F  F03A         	goto	i2u459_41
 10557   00743A  EF21  F03A         	goto	i2u459_40
 10558   00743E                     i2u459_41:
 10559   00743E  EF29  F03A         	goto	i2l4003
 10560   007442                     i2u459_40:
 10561   007442  0E00               	movlw	0
 10562   007444  6E13               	movwf	i2___flmul@a^0,c
 10563   007446  0E00               	movlw	0
 10564   007448  6E14               	movwf	(i2___flmul@a+1)^0,c
 10565   00744A  0E00               	movlw	0
 10566   00744C  6E15               	movwf	(i2___flmul@a+2)^0,c
 10567   00744E  0E00               	movlw	0
 10568   007450  6E16               	movwf	(i2___flmul@a+3)^0,c
 10569   007452                     i2l4003:
 10570   007452  8E15               	bsf	(i2___flmul@a+2)^0,7,c
 10571   007454  EF34  F03A         	goto	i2l791
 10572   007458                     i2l4005:
 10573   007458  0E00               	movlw	0
 10574   00745A  6E13               	movwf	i2___flmul@a^0,c
 10575   00745C  0E00               	movlw	0
 10576   00745E  6E14               	movwf	(i2___flmul@a+1)^0,c
 10577   007460  0E00               	movlw	0
 10578   007462  6E15               	movwf	(i2___flmul@a+2)^0,c
 10579   007464  0E00               	movlw	0
 10580   007466  6E16               	movwf	(i2___flmul@a+3)^0,c
 10581   007468                     i2l791:
 10582   007468  5020               	movf	i2___flmul@aexp^0,w,c
 10583   00746A  B4D8               	btfsc	status,2,c
 10584   00746C  EF3A  F03A         	goto	i2u460_41
 10585   007470  EF3C  F03A         	goto	i2u460_40
 10586   007474                     i2u460_41:
 10587   007474  EF44  F03A         	goto	i2l4009
 10588   007478                     i2u460_40:
 10589   007478  5021               	movf	i2___flmul@bexp^0,w,c
 10590   00747A  A4D8               	btfss	status,2,c
 10591   00747C  EF42  F03A         	goto	i2u461_41
 10592   007480  EF44  F03A         	goto	i2u461_40
 10593   007484                     i2u461_41:
 10594   007484  EF4E  F03A         	goto	i2l4013
 10595   007488                     i2u461_40:
 10596   007488                     i2l4009:
 10597   007488  0E00               	movlw	0
 10598   00748A  6E0F               	movwf	?i2___flmul^0,c
 10599   00748C  0E00               	movlw	0
 10600   00748E  6E10               	movwf	(?i2___flmul+1)^0,c
 10601   007490  0E00               	movlw	0
 10602   007492  6E11               	movwf	(?i2___flmul+2)^0,c
 10603   007494  0E00               	movlw	0
 10604   007496  6E12               	movwf	(?i2___flmul+3)^0,c
 10605   007498  EFF6  F03B         	goto	i2l795
 10606   00749C                     i2l4013:
 10607   00749C  5015               	movf	(i2___flmul@a+2)^0,w,c
 10608   00749E  020F               	mulwf	i2___flmul@b^0,c
 10609   0074A0  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10610   0074A6  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10611   0074AC  5026               	movf	i2___flmul@temp^0,w,c
 10612   0074AE  6E1C               	movwf	i2___flmul@grs^0,c
 10613   0074B0  6A1D               	clrf	(i2___flmul@grs+1)^0,c
 10614   0074B2  6A1E               	clrf	(i2___flmul@grs+2)^0,c
 10615   0074B4  6A1F               	clrf	(i2___flmul@grs+3)^0,c
 10616   0074B6  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10617   0074B8  6E22               	movwf	i2___flmul@prod^0,c
 10618   0074BA  6A23               	clrf	(i2___flmul@prod+1)^0,c
 10619   0074BC  6A24               	clrf	(i2___flmul@prod+2)^0,c
 10620   0074BE  6A25               	clrf	(i2___flmul@prod+3)^0,c
 10621   0074C0  5014               	movf	(i2___flmul@a+1)^0,w,c
 10622   0074C2  0210               	mulwf	(i2___flmul@b+1)^0,c
 10623   0074C4  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10624   0074CA  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10625   0074D0  5026               	movf	i2___flmul@temp^0,w,c
 10626   0074D2  261C               	addwf	i2___flmul@grs^0,f,c
 10627   0074D4  0E00               	movlw	0
 10628   0074D6  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 10629   0074D8  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 10630   0074DA  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 10631   0074DC  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10632   0074DE  2622               	addwf	i2___flmul@prod^0,f,c
 10633   0074E0  0E00               	movlw	0
 10634   0074E2  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10635   0074E4  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10636   0074E6  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10637   0074E8  5013               	movf	i2___flmul@a^0,w,c
 10638   0074EA  0211               	mulwf	(i2___flmul@b+2)^0,c
 10639   0074EC  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10640   0074F2  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10641   0074F8  5026               	movf	i2___flmul@temp^0,w,c
 10642   0074FA  261C               	addwf	i2___flmul@grs^0,f,c
 10643   0074FC  0E00               	movlw	0
 10644   0074FE  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 10645   007500  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 10646   007502  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 10647   007504  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10648   007506  2622               	addwf	i2___flmul@prod^0,f,c
 10649   007508  0E00               	movlw	0
 10650   00750A  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10651   00750C  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10652   00750E  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10653   007510  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10654   007514  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10655   007518  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10656   00751C  6A1C               	clrf	i2___flmul@grs^0,c
 10657   00751E  5013               	movf	i2___flmul@a^0,w,c
 10658   007520  0210               	mulwf	(i2___flmul@b+1)^0,c
 10659   007522  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10660   007528  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10661   00752E  5026               	movf	i2___flmul@temp^0,w,c
 10662   007530  261C               	addwf	i2___flmul@grs^0,f,c
 10663   007532  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10664   007534  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 10665   007536  0E00               	movlw	0
 10666   007538  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 10667   00753A  0E00               	movlw	0
 10668   00753C  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 10669   00753E  5014               	movf	(i2___flmul@a+1)^0,w,c
 10670   007540  020F               	mulwf	i2___flmul@b^0,c
 10671   007542  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10672   007548  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10673   00754E  5026               	movf	i2___flmul@temp^0,w,c
 10674   007550  261C               	addwf	i2___flmul@grs^0,f,c
 10675   007552  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10676   007554  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 10677   007556  0E00               	movlw	0
 10678   007558  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 10679   00755A  0E00               	movlw	0
 10680   00755C  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 10681   00755E  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10682   007562  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10683   007566  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10684   00756A  6A1C               	clrf	i2___flmul@grs^0,c
 10685   00756C  5013               	movf	i2___flmul@a^0,w,c
 10686   00756E  020F               	mulwf	i2___flmul@b^0,c
 10687   007570  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10688   007576  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10689   00757C  5026               	movf	i2___flmul@temp^0,w,c
 10690   00757E  261C               	addwf	i2___flmul@grs^0,f,c
 10691   007580  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10692   007582  221D               	addwfc	(i2___flmul@grs+1)^0,f,c
 10693   007584  0E00               	movlw	0
 10694   007586  221E               	addwfc	(i2___flmul@grs+2)^0,f,c
 10695   007588  0E00               	movlw	0
 10696   00758A  221F               	addwfc	(i2___flmul@grs+3)^0,f,c
 10697   00758C  5015               	movf	(i2___flmul@a+2)^0,w,c
 10698   00758E  0210               	mulwf	(i2___flmul@b+1)^0,c
 10699   007590  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10700   007596  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10701   00759C  5026               	movf	i2___flmul@temp^0,w,c
 10702   00759E  2622               	addwf	i2___flmul@prod^0,f,c
 10703   0075A0  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10704   0075A2  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10705   0075A4  0E00               	movlw	0
 10706   0075A6  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10707   0075A8  0E00               	movlw	0
 10708   0075AA  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10709   0075AC  5014               	movf	(i2___flmul@a+1)^0,w,c
 10710   0075AE  0211               	mulwf	(i2___flmul@b+2)^0,c
 10711   0075B0  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10712   0075B6  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10713   0075BC  5026               	movf	i2___flmul@temp^0,w,c
 10714   0075BE  2622               	addwf	i2___flmul@prod^0,f,c
 10715   0075C0  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10716   0075C2  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10717   0075C4  0E00               	movlw	0
 10718   0075C6  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10719   0075C8  0E00               	movlw	0
 10720   0075CA  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10721   0075CC  5015               	movf	(i2___flmul@a+2)^0,w,c
 10722   0075CE  0211               	mulwf	(i2___flmul@b+2)^0,c
 10723   0075D0  006F FFCC  F026    	movff	prodl,i2___flmul@temp
 10724   0075D6  006F FFD0  F027    	movff	prodh,i2___flmul@temp+1
 10725   0075DC  5026               	movf	i2___flmul@temp^0,w,c
 10726   0075DE  6E17               	movwf	??i2___flmul^0,c
 10727   0075E0  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10728   0075E2  6E18               	movwf	(??i2___flmul+1)^0,c
 10729   0075E4  6A19               	clrf	(??i2___flmul+2)^0,c
 10730   0075E6  6A1A               	clrf	(??i2___flmul+3)^0,c
 10731   0075E8  C019  F01A         	movff	??i2___flmul+2,??i2___flmul+3
 10732   0075EC  C018  F019         	movff	??i2___flmul+1,??i2___flmul+2
 10733   0075F0  C017  F018         	movff	??i2___flmul,??i2___flmul+1
 10734   0075F4  6A17               	clrf	??i2___flmul^0,c
 10735   0075F6  5017               	movf	??i2___flmul^0,w,c
 10736   0075F8  2622               	addwf	i2___flmul@prod^0,f,c
 10737   0075FA  5018               	movf	(??i2___flmul+1)^0,w,c
 10738   0075FC  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10739   0075FE  5019               	movf	(??i2___flmul+2)^0,w,c
 10740   007600  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10741   007602  501A               	movf	(??i2___flmul+3)^0,w,c
 10742   007604  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10743   007606  C01C  F017         	movff	i2___flmul@grs,??i2___flmul
 10744   00760A  C01D  F018         	movff	i2___flmul@grs+1,??i2___flmul+1
 10745   00760E  C01E  F019         	movff	i2___flmul@grs+2,??i2___flmul+2
 10746   007612  C01F  F01A         	movff	i2___flmul@grs+3,??i2___flmul+3
 10747   007616  0E19               	movlw	25
 10748   007618  EF13  F03B         	goto	i2u462_40
 10749   00761C                     i2u462_45:
 10750   00761C  90D8               	bcf	status,0,c
 10751   00761E  321A               	rrcf	(??i2___flmul+3)^0,f,c
 10752   007620  3219               	rrcf	(??i2___flmul+2)^0,f,c
 10753   007622  3218               	rrcf	(??i2___flmul+1)^0,f,c
 10754   007624  3217               	rrcf	??i2___flmul^0,f,c
 10755   007626                     i2u462_40:
 10756   007626  2EE8               	decfsz	wreg,f,c
 10757   007628  EF0E  F03B         	goto	i2u462_45
 10758   00762C  5017               	movf	??i2___flmul^0,w,c
 10759   00762E  2622               	addwf	i2___flmul@prod^0,f,c
 10760   007630  5018               	movf	(??i2___flmul+1)^0,w,c
 10761   007632  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10762   007634  5019               	movf	(??i2___flmul+2)^0,w,c
 10763   007636  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10764   007638  501A               	movf	(??i2___flmul+3)^0,w,c
 10765   00763A  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10766   00763C  C01E  F01F         	movff	i2___flmul@grs+2,i2___flmul@grs+3
 10767   007640  C01D  F01E         	movff	i2___flmul@grs+1,i2___flmul@grs+2
 10768   007644  C01C  F01D         	movff	i2___flmul@grs,i2___flmul@grs+1
 10769   007648  6A1C               	clrf	i2___flmul@grs^0,c
 10770   00764A  5020               	movf	i2___flmul@aexp^0,w,c
 10771   00764C  C021  F017         	movff	i2___flmul@bexp,??i2___flmul
 10772   007650  6A18               	clrf	(??i2___flmul+1)^0,c
 10773   007652  2617               	addwf	??i2___flmul^0,f,c
 10774   007654  0E00               	movlw	0
 10775   007656  2218               	addwfc	(??i2___flmul+1)^0,f,c
 10776   007658  0E82               	movlw	130
 10777   00765A  2417               	addwf	??i2___flmul^0,w,c
 10778   00765C  6E26               	movwf	i2___flmul@temp^0,c
 10779   00765E  0EFF               	movlw	255
 10780   007660  2018               	addwfc	(??i2___flmul+1)^0,w,c
 10781   007662  6E27               	movwf	(i2___flmul@temp+1)^0,c
 10782   007664  EF49  F03B         	goto	i2l4061
 10783   007668                     i2l4055:
 10784   007668  90D8               	bcf	status,0,c
 10785   00766A  3622               	rlcf	i2___flmul@prod^0,f,c
 10786   00766C  3623               	rlcf	(i2___flmul@prod+1)^0,f,c
 10787   00766E  3624               	rlcf	(i2___flmul@prod+2)^0,f,c
 10788   007670  3625               	rlcf	(i2___flmul@prod+3)^0,f,c
 10789   007672  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 10790   007674  EF3E  F03B         	goto	i2u463_41
 10791   007678  EF40  F03B         	goto	i2u463_40
 10792   00767C                     i2u463_41:
 10793   00767C  EF41  F03B         	goto	i2l798
 10794   007680                     i2u463_40:
 10795   007680  8022               	bsf	i2___flmul@prod^0,0,c
 10796   007682                     i2l798:
 10797   007682  90D8               	bcf	status,0,c
 10798   007684  361C               	rlcf	i2___flmul@grs^0,f,c
 10799   007686  361D               	rlcf	(i2___flmul@grs+1)^0,f,c
 10800   007688  361E               	rlcf	(i2___flmul@grs+2)^0,f,c
 10801   00768A  361F               	rlcf	(i2___flmul@grs+3)^0,f,c
 10802   00768C  0626               	decf	i2___flmul@temp^0,f,c
 10803   00768E  A0D8               	btfss	status,0,c
 10804   007690  0627               	decf	(i2___flmul@temp+1)^0,f,c
 10805   007692                     i2l4061:
 10806   007692  AE24               	btfss	(i2___flmul@prod+2)^0,7,c
 10807   007694  EF4E  F03B         	goto	i2u464_41
 10808   007698  EF50  F03B         	goto	i2u464_40
 10809   00769C                     i2u464_41:
 10810   00769C  EF34  F03B         	goto	i2l4055
 10811   0076A0                     i2u464_40:
 10812   0076A0  6A20               	clrf	i2___flmul@aexp^0,c
 10813   0076A2  AE1F               	btfss	(i2___flmul@grs+3)^0,7,c
 10814   0076A4  EF56  F03B         	goto	i2u465_41
 10815   0076A8  EF58  F03B         	goto	i2u465_40
 10816   0076AC                     i2u465_41:
 10817   0076AC  EF7C  F03B         	goto	i2l800
 10818   0076B0                     i2u465_40:
 10819   0076B0  0EFF               	movlw	255
 10820   0076B2  141C               	andwf	i2___flmul@grs^0,w,c
 10821   0076B4  6E17               	movwf	??i2___flmul^0,c
 10822   0076B6  0EFF               	movlw	255
 10823   0076B8  141D               	andwf	(i2___flmul@grs+1)^0,w,c
 10824   0076BA  6E18               	movwf	(??i2___flmul+1)^0,c
 10825   0076BC  0EFF               	movlw	255
 10826   0076BE  141E               	andwf	(i2___flmul@grs+2)^0,w,c
 10827   0076C0  6E19               	movwf	(??i2___flmul+2)^0,c
 10828   0076C2  0E7F               	movlw	127
 10829   0076C4  141F               	andwf	(i2___flmul@grs+3)^0,w,c
 10830   0076C6  6E1A               	movwf	(??i2___flmul+3)^0,c
 10831   0076C8  5017               	movf	??i2___flmul^0,w,c
 10832   0076CA  1018               	iorwf	(??i2___flmul+1)^0,w,c
 10833   0076CC  1019               	iorwf	(??i2___flmul+2)^0,w,c
 10834   0076CE  101A               	iorwf	(??i2___flmul+3)^0,w,c
 10835   0076D0  B4D8               	btfsc	status,2,c
 10836   0076D2  EF6D  F03B         	goto	i2u466_41
 10837   0076D6  EF6F  F03B         	goto	i2u466_40
 10838   0076DA                     i2u466_41:
 10839   0076DA  EF73  F03B         	goto	i2l801
 10840   0076DE                     i2u466_40:
 10841   0076DE                     i2l4065:
 10842   0076DE  0E01               	movlw	1
 10843   0076E0  6E20               	movwf	i2___flmul@aexp^0,c
 10844   0076E2  EF7C  F03B         	goto	i2l800
 10845   0076E6                     i2l801:
 10846   0076E6  A022               	btfss	i2___flmul@prod^0,0,c
 10847   0076E8  EF78  F03B         	goto	i2u467_41
 10848   0076EC  EF7A  F03B         	goto	i2u467_40
 10849   0076F0                     i2u467_41:
 10850   0076F0  EF7C  F03B         	goto	i2l800
 10851   0076F4                     i2u467_40:
 10852   0076F4  EF6F  F03B         	goto	i2l4065
 10853   0076F8                     i2l800:
 10854   0076F8  5020               	movf	i2___flmul@aexp^0,w,c
 10855   0076FA  B4D8               	btfsc	status,2,c
 10856   0076FC  EF82  F03B         	goto	i2u468_41
 10857   007700  EF84  F03B         	goto	i2u468_40
 10858   007704                     i2u468_41:
 10859   007704  EFA8  F03B         	goto	i2l4077
 10860   007708                     i2u468_40:
 10861   007708  0E01               	movlw	1
 10862   00770A  2622               	addwf	i2___flmul@prod^0,f,c
 10863   00770C  0E00               	movlw	0
 10864   00770E  2223               	addwfc	(i2___flmul@prod+1)^0,f,c
 10865   007710  2224               	addwfc	(i2___flmul@prod+2)^0,f,c
 10866   007712  2225               	addwfc	(i2___flmul@prod+3)^0,f,c
 10867   007714  A025               	btfss	(i2___flmul@prod+3)^0,0,c
 10868   007716  EF8F  F03B         	goto	i2u469_41
 10869   00771A  EF91  F03B         	goto	i2u469_40
 10870   00771E                     i2u469_41:
 10871   00771E  EFA8  F03B         	goto	i2l4077
 10872   007722                     i2u469_40:
 10873   007722  C022  F017         	movff	i2___flmul@prod,??i2___flmul
 10874   007726  C023  F018         	movff	i2___flmul@prod+1,??i2___flmul+1
 10875   00772A  C024  F019         	movff	i2___flmul@prod+2,??i2___flmul+2
 10876   00772E  C025  F01A         	movff	i2___flmul@prod+3,??i2___flmul+3
 10877   007732  341A               	rlcf	(??i2___flmul+3)^0,w,c
 10878   007734  321A               	rrcf	(??i2___flmul+3)^0,f,c
 10879   007736  3219               	rrcf	(??i2___flmul+2)^0,f,c
 10880   007738  3218               	rrcf	(??i2___flmul+1)^0,f,c
 10881   00773A  3217               	rrcf	??i2___flmul^0,f,c
 10882   00773C  C017  F022         	movff	??i2___flmul,i2___flmul@prod
 10883   007740  C018  F023         	movff	??i2___flmul+1,i2___flmul@prod+1
 10884   007744  C019  F024         	movff	??i2___flmul+2,i2___flmul@prod+2
 10885   007748  C01A  F025         	movff	??i2___flmul+3,i2___flmul@prod+3
 10886   00774C  4A26               	infsnz	i2___flmul@temp^0,f,c
 10887   00774E  2A27               	incf	(i2___flmul@temp+1)^0,f,c
 10888   007750                     i2l4077:
 10889   007750  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 10890   007752  EFB3  F03B         	goto	i2u470_41
 10891   007756  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10892   007758  E108               	bnz	i2u470_40
 10893   00775A  2826               	incf	i2___flmul@temp^0,w,c
 10894   00775C  A0D8               	btfss	status,0,c
 10895   00775E  EFB3  F03B         	goto	i2u470_41
 10896   007762  EFB5  F03B         	goto	i2u470_40
 10897   007766                     i2u470_41:
 10898   007766  EFBF  F03B         	goto	i2l4081
 10899   00776A                     i2u470_40:
 10900   00776A  0E00               	movlw	0
 10901   00776C  6E22               	movwf	i2___flmul@prod^0,c
 10902   00776E  0E00               	movlw	0
 10903   007770  6E23               	movwf	(i2___flmul@prod+1)^0,c
 10904   007772  0E80               	movlw	128
 10905   007774  6E24               	movwf	(i2___flmul@prod+2)^0,c
 10906   007776  0E7F               	movlw	127
 10907   007778  6E25               	movwf	(i2___flmul@prod+3)^0,c
 10908   00777A  EFEC  F03B         	goto	i2l4095
 10909   00777E                     i2l4081:
 10910   00777E  BE27               	btfsc	(i2___flmul@temp+1)^0,7,c
 10911   007780  EFCC  F03B         	goto	i2u471_40
 10912   007784  5027               	movf	(i2___flmul@temp+1)^0,w,c
 10913   007786  E106               	bnz	i2u471_41
 10914   007788  0426               	decf	i2___flmul@temp^0,w,c
 10915   00778A  B0D8               	btfsc	status,0,c
 10916   00778C  EFCA  F03B         	goto	i2u471_41
 10917   007790  EFCC  F03B         	goto	i2u471_40
 10918   007794                     i2u471_41:
 10919   007794  EFD7  F03B         	goto	i2l808
 10920   007798                     i2u471_40:
 10921   007798  0E00               	movlw	0
 10922   00779A  6E22               	movwf	i2___flmul@prod^0,c
 10923   00779C  0E00               	movlw	0
 10924   00779E  6E23               	movwf	(i2___flmul@prod+1)^0,c
 10925   0077A0  0E00               	movlw	0
 10926   0077A2  6E24               	movwf	(i2___flmul@prod+2)^0,c
 10927   0077A4  0E00               	movlw	0
 10928   0077A6  6E25               	movwf	(i2___flmul@prod+3)^0,c
 10929   0077A8  6A1B               	clrf	i2___flmul@sign^0,c
 10930   0077AA  EFEC  F03B         	goto	i2l4095
 10931   0077AE                     i2l808:
 10932   0077AE  C026  F021         	movff	i2___flmul@temp,i2___flmul@bexp
 10933   0077B2  0EFF               	movlw	255
 10934   0077B4  1622               	andwf	i2___flmul@prod^0,f,c
 10935   0077B6  0EFF               	movlw	255
 10936   0077B8  1623               	andwf	(i2___flmul@prod+1)^0,f,c
 10937   0077BA  0E7F               	movlw	127
 10938   0077BC  1624               	andwf	(i2___flmul@prod+2)^0,f,c
 10939   0077BE  0E00               	movlw	0
 10940   0077C0  1625               	andwf	(i2___flmul@prod+3)^0,f,c
 10941   0077C2  A021               	btfss	i2___flmul@bexp^0,0,c
 10942   0077C4  EFE6  F03B         	goto	i2u472_41
 10943   0077C8  EFE8  F03B         	goto	i2u472_40
 10944   0077CC                     i2u472_41:
 10945   0077CC  EFE9  F03B         	goto	i2l4093
 10946   0077D0                     i2u472_40:
 10947   0077D0  8E24               	bsf	(i2___flmul@prod+2)^0,7,c
 10948   0077D2                     i2l4093:
 10949   0077D2  90D8               	bcf	status,0,c
 10950   0077D4  3021               	rrcf	i2___flmul@bexp^0,w,c
 10951   0077D6  6E25               	movwf	(i2___flmul@prod+3)^0,c
 10952   0077D8                     i2l4095:
 10953   0077D8  501B               	movf	i2___flmul@sign^0,w,c
 10954   0077DA  1225               	iorwf	(i2___flmul@prod+3)^0,f,c
 10955   0077DC  C022  F00F         	movff	i2___flmul@prod,?i2___flmul
 10956   0077E0  C023  F010         	movff	i2___flmul@prod+1,?i2___flmul+1
 10957   0077E4  C024  F011         	movff	i2___flmul@prod+2,?i2___flmul+2
 10958   0077E8  C025  F012         	movff	i2___flmul@prod+3,?i2___flmul+3
 10959   0077EC                     i2l795:
 10960   0077EC  0012               	return		;funcret
 10961   0077EE                     __end_ofi2___flmul:
 10962                           	callstack 0
 10963                           
 10964                           ;
 10965                           ; H/W Interrupt Vector Table @ 0x6008
 10966                           ;
 10967                           
 10968                           	psect	ivt0x6008
 10969   006008                     __pivt0x6008:
 10970                           	callstack 0
 10971   006008                     ivt0x6008_base:
 10972                           	callstack 0
 10973                           
 10974                           ; Vector 0 : SWINT
 10975   006008  22E4               	dw	_my_ISR shr (0+2)
 10976                           
 10977                           ; Vector 1 : HLVD
 10978   00600A  22E4               	dw	_my_ISR shr (0+2)
 10979                           
 10980                           ; Vector 2 : OSF
 10981   00600C  22E4               	dw	_my_ISR shr (0+2)
 10982                           
 10983                           ; Vector 3 : CSW
 10984   00600E  22E4               	dw	_my_ISR shr (0+2)
 10985                           
 10986                           ; Vector 4 : NVM
 10987   006010  22E4               	dw	_my_ISR shr (0+2)
 10988                           
 10989                           ; Vector 5 : SCAN
 10990   006012  22E4               	dw	_my_ISR shr (0+2)
 10991                           
 10992                           ; Vector 6 : CRC
 10993   006014  22E4               	dw	_my_ISR shr (0+2)
 10994                           
 10995                           ; Vector 7 : IOC
 10996   006016  22E4               	dw	_my_ISR shr (0+2)
 10997                           
 10998                           ; Vector 8 : INT0
 10999   006018  22E4               	dw	_my_ISR shr (0+2)
 11000                           
 11001                           ; Vector 9 : ZCD
 11002   00601A  22E4               	dw	_my_ISR shr (0+2)
 11003                           
 11004                           ; Vector 10 : AD
 11005   00601C  22E4               	dw	_my_ISR shr (0+2)
 11006                           
 11007                           ; Vector 11 : ADT
 11008   00601E  22E4               	dw	_my_ISR shr (0+2)
 11009                           
 11010                           ; Vector 12 : CMP1
 11011   006020  22E4               	dw	_my_ISR shr (0+2)
 11012                           
 11013                           ; Vector 13 : SMT1
 11014   006022  22E4               	dw	_my_ISR shr (0+2)
 11015                           
 11016                           ; Vector 14 : SMT1PRA
 11017   006024  22E4               	dw	_my_ISR shr (0+2)
 11018                           
 11019                           ; Vector 15 : SMT1PRW
 11020   006026  22E4               	dw	_my_ISR shr (0+2)
 11021                           
 11022                           ; Vector 16 : DMA1SCNT
 11023   006028  22E4               	dw	_my_ISR shr (0+2)
 11024                           
 11025                           ; Vector 17 : DMA1DCNT
 11026   00602A  22E4               	dw	_my_ISR shr (0+2)
 11027                           
 11028                           ; Vector 18 : DMA1OR
 11029   00602C  22E4               	dw	_my_ISR shr (0+2)
 11030                           
 11031                           ; Vector 19 : DMA1A
 11032   00602E  22E4               	dw	_my_ISR shr (0+2)
 11033                           
 11034                           ; Vector 20 : SPI1RX
 11035   006030  22E4               	dw	_my_ISR shr (0+2)
 11036                           
 11037                           ; Vector 21 : SPI1TX
 11038   006032  22E4               	dw	_my_ISR shr (0+2)
 11039                           
 11040                           ; Vector 22 : SPI1
 11041   006034  22E4               	dw	_my_ISR shr (0+2)
 11042                           
 11043                           ; Vector 23 : I2C1RX
 11044   006036  22E4               	dw	_my_ISR shr (0+2)
 11045                           
 11046                           ; Vector 24 : I2C1TX
 11047   006038  22E4               	dw	_my_ISR shr (0+2)
 11048                           
 11049                           ; Vector 25 : I2C1
 11050   00603A  22E4               	dw	_my_ISR shr (0+2)
 11051                           
 11052                           ; Vector 26 : I2C1E
 11053   00603C  22E4               	dw	_my_ISR shr (0+2)
 11054                           
 11055                           ; Vector 27 : U1RX
 11056   00603E  22E4               	dw	_my_ISR shr (0+2)
 11057                           
 11058                           ; Vector 28 : U1TX
 11059   006040  22E4               	dw	_my_ISR shr (0+2)
 11060                           
 11061                           ; Vector 29 : U1E
 11062   006042  22E4               	dw	_my_ISR shr (0+2)
 11063                           
 11064                           ; Vector 30 : U1
 11065   006044  22E4               	dw	_my_ISR shr (0+2)
 11066                           
 11067                           ; Vector 31 : TMR0
 11068   006046  22E4               	dw	_my_ISR shr (0+2)
 11069                           
 11070                           ; Vector 32 : TMR1
 11071   006048  22E4               	dw	_my_ISR shr (0+2)
 11072                           
 11073                           ; Vector 33 : TMR1G
 11074   00604A  22E4               	dw	_my_ISR shr (0+2)
 11075                           
 11076                           ; Vector 34 : TMR2
 11077   00604C  22E4               	dw	_my_ISR shr (0+2)
 11078                           
 11079                           ; Vector 35 : CCP1
 11080   00604E  22E4               	dw	_my_ISR shr (0+2)
 11081                           
 11082                           ; Vector 36 : Undefined
 11083   006050  182B               	dw	ivt0x6008_undefint shr (0+2)
 11084                           
 11085                           ; Vector 37 : NCO1
 11086   006052  22E4               	dw	_my_ISR shr (0+2)
 11087                           
 11088                           ; Vector 38 : CWG1
 11089   006054  22E4               	dw	_my_ISR shr (0+2)
 11090                           
 11091                           ; Vector 39 : CLC1
 11092   006056  22E4               	dw	_my_ISR shr (0+2)
 11093                           
 11094                           ; Vector 40 : INT1
 11095   006058  22E4               	dw	_my_ISR shr (0+2)
 11096                           
 11097                           ; Vector 41 : CMP2
 11098   00605A  22E4               	dw	_my_ISR shr (0+2)
 11099                           
 11100                           ; Vector 42 : DMA2SCNT
 11101   00605C  22E4               	dw	_my_ISR shr (0+2)
 11102                           
 11103                           ; Vector 43 : DMA2DCNT
 11104   00605E  22E4               	dw	_my_ISR shr (0+2)
 11105                           
 11106                           ; Vector 44 : DMA2OR
 11107   006060  22E4               	dw	_my_ISR shr (0+2)
 11108                           
 11109                           ; Vector 45 : DMA2A
 11110   006062  22E4               	dw	_my_ISR shr (0+2)
 11111                           
 11112                           ; Vector 46 : I2C2RX
 11113   006064  22E4               	dw	_my_ISR shr (0+2)
 11114                           
 11115                           ; Vector 47 : I2C2TX
 11116   006066  22E4               	dw	_my_ISR shr (0+2)
 11117                           
 11118                           ; Vector 48 : I2C2
 11119   006068  22E4               	dw	_my_ISR shr (0+2)
 11120                           
 11121                           ; Vector 49 : I2C2E
 11122   00606A  22E4               	dw	_my_ISR shr (0+2)
 11123                           
 11124                           ; Vector 50 : U2RX
 11125   00606C  22E4               	dw	_my_ISR shr (0+2)
 11126                           
 11127                           ; Vector 51 : U2TX
 11128   00606E  22E4               	dw	_my_ISR shr (0+2)
 11129                           
 11130                           ; Vector 52 : U2E
 11131   006070  22E4               	dw	_my_ISR shr (0+2)
 11132                           
 11133                           ; Vector 53 : U2
 11134   006072  22E4               	dw	_my_ISR shr (0+2)
 11135                           
 11136                           ; Vector 54 : TMR3
 11137   006074  22E4               	dw	_my_ISR shr (0+2)
 11138                           
 11139                           ; Vector 55 : TMR3G
 11140   006076  22E4               	dw	_my_ISR shr (0+2)
 11141                           
 11142                           ; Vector 56 : TMR4
 11143   006078  22E4               	dw	_my_ISR shr (0+2)
 11144                           
 11145                           ; Vector 57 : CCP2
 11146   00607A  22E4               	dw	_my_ISR shr (0+2)
 11147                           
 11148                           ; Vector 58 : Undefined
 11149   00607C  182B               	dw	ivt0x6008_undefint shr (0+2)
 11150                           
 11151                           ; Vector 59 : CWG2
 11152   00607E  22E4               	dw	_my_ISR shr (0+2)
 11153                           
 11154                           ; Vector 60 : CLC2
 11155   006080  22E4               	dw	_my_ISR shr (0+2)
 11156                           
 11157                           ; Vector 61 : INT2
 11158   006082  22E4               	dw	_my_ISR shr (0+2)
 11159                           
 11160                           ; Vector 62 : Undefined
 11161   006084  182B               	dw	ivt0x6008_undefint shr (0+2)
 11162                           
 11163                           ; Vector 63 : Undefined
 11164   006086  182B               	dw	ivt0x6008_undefint shr (0+2)
 11165                           
 11166                           ; Vector 64 : Undefined
 11167   006088  182B               	dw	ivt0x6008_undefint shr (0+2)
 11168                           
 11169                           ; Vector 65 : Undefined
 11170   00608A  182B               	dw	ivt0x6008_undefint shr (0+2)
 11171                           
 11172                           ; Vector 66 : Undefined
 11173   00608C  182B               	dw	ivt0x6008_undefint shr (0+2)
 11174                           
 11175                           ; Vector 67 : Undefined
 11176   00608E  182B               	dw	ivt0x6008_undefint shr (0+2)
 11177                           
 11178                           ; Vector 68 : Undefined
 11179   006090  182B               	dw	ivt0x6008_undefint shr (0+2)
 11180                           
 11181                           ; Vector 69 : Undefined
 11182   006092  182B               	dw	ivt0x6008_undefint shr (0+2)
 11183                           
 11184                           ; Vector 70 : TMR5
 11185   006094  22E4               	dw	_my_ISR shr (0+2)
 11186                           
 11187                           ; Vector 71 : TMR5G
 11188   006096  22E4               	dw	_my_ISR shr (0+2)
 11189                           
 11190                           ; Vector 72 : TMR6
 11191   006098  22E4               	dw	_my_ISR shr (0+2)
 11192                           
 11193                           ; Vector 73 : CCP3
 11194   00609A  22E4               	dw	_my_ISR shr (0+2)
 11195                           
 11196                           ; Vector 74 : CWG3
 11197   00609C  22E4               	dw	_my_ISR shr (0+2)
 11198                           
 11199                           ; Vector 75 : CLC3
 11200   00609E  22E4               	dw	_my_ISR shr (0+2)
 11201                           
 11202                           ; Vector 76 : Undefined
 11203   0060A0  182B               	dw	ivt0x6008_undefint shr (0+2)
 11204                           
 11205                           ; Vector 77 : Undefined
 11206   0060A2  182B               	dw	ivt0x6008_undefint shr (0+2)
 11207                           
 11208                           ; Vector 78 : Undefined
 11209   0060A4  182B               	dw	ivt0x6008_undefint shr (0+2)
 11210                           
 11211                           ; Vector 79 : Undefined
 11212   0060A6  182B               	dw	ivt0x6008_undefint shr (0+2)
 11213                           
 11214                           ; Vector 80 : CCP4
 11215   0060A8  22E4               	dw	_my_ISR shr (0+2)
 11216                           
 11217                           ; Vector 81 : CLC4
 11218   0060AA  22E4               	dw	_my_ISR shr (0+2)
 11219   0060AC                     ivt0x6008_undefint:
 11220                           	callstack 0
 11221   0060AC  00FF               	reset	
 11222                           
 11223                           	psect	rparam
 11224   000001                     ___rparam_used  equ	1
 11225   000000                     ___param_bank   equ	0
 11226   000000                     __Lparam        equ	__Lrparam
 11227   000000                     __Hparam        equ	__Hrparam
 11228                           
 11229                           	psect	config
 11230                           
 11231                           ;Config register CONFIG1L @ 0x300000
 11232                           ;	External Oscillator Selection
 11233                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
 11234                           ;	Reset Oscillator Selection
 11235                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
 11236   300000                     	org	3145728
 11237   300000  F8                 	db	248
 11238                           
 11239                           ;Config register CONFIG1H @ 0x300001
 11240                           ;	Clock out Enable bit
 11241                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
 11242                           ;	PRLOCKED One-Way Set Enable bit
 11243                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
 11244                           ;	Clock Switch Enable bit
 11245                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 11246                           ;	Fail-Safe Clock Monitor Enable bit
 11247                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
 11248   300001                     	org	3145729
 11249   300001  FF                 	db	255
 11250                           
 11251                           ;Config register CONFIG2L @ 0x300002
 11252                           ;	MCLR Enable bit
 11253                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
 11254                           ;	Power-up timer selection bits
 11255                           ;	PWRTS = PWRT_OFF, PWRT is disabled
 11256                           ;	Multi-vector enable bit
 11257                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
 11258                           ;	IVTLOCK bit One-way set enable bit
 11259                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
 11260                           ;	Low Power BOR Enable bit
 11261                           ;	LPBOREN = OFF, ULPBOR disabled
 11262                           ;	Brown-out Reset Enable bits
 11263                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
 11264   300002                     	org	3145730
 11265   300002  FF                 	db	255
 11266                           
 11267                           ;Config register CONFIG2H @ 0x300003
 11268                           ;	Brown-out Reset Voltage Selection bits
 11269                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
 11270                           ;	ZCD Disable bit
 11271                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
 11272                           ;	PPSLOCK bit One-Way Set Enable bit
 11273                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
 11274                           ;	Stack Full/Underflow Reset Enable bit
 11275                           ;	STVREN = ON, Stack full/underflow will cause Reset
 11276                           ;	Debugger Enable bit
 11277                           ;	DEBUG = OFF, Background debugger disabled
 11278                           ;	Extended Instruction Set Enable bit
 11279                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
 11280   300003                     	org	3145731
 11281   300003  FF                 	db	255
 11282                           
 11283                           ;Config register CONFIG3L @ 0x300004
 11284                           ;	WDT Period selection bits
 11285                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 11286                           ;	WDT operating mode
 11287                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
 11288   300004                     	org	3145732
 11289   300004  9F                 	db	159
 11290                           
 11291                           ;Config register CONFIG3H @ 0x300005
 11292                           ;	WDT Window Select bits
 11293                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 11294                           ;	WDT input clock selector
 11295                           ;	WDTCCS = SC, Software Control
 11296   300005                     	org	3145733
 11297   300005  FF                 	db	255
 11298                           
 11299                           ;Config register CONFIG4L @ 0x300006
 11300                           ;	Boot Block Size selection bits
 11301                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
 11302                           ;	Boot Block enable bit
 11303                           ;	BBEN = OFF, Boot block disabled
 11304                           ;	Storage Area Flash enable bit
 11305                           ;	SAFEN = OFF, SAF disabled
 11306                           ;	Application Block write protection bit
 11307                           ;	WRTAPP = OFF, Application Block not write protected
 11308   300006                     	org	3145734
 11309   300006  FF                 	db	255
 11310                           
 11311                           ;Config register CONFIG4H @ 0x300007
 11312                           ;	Boot Block Write Protection bit
 11313                           ;	WRTB = OFF, Boot Block not write-protected
 11314                           ;	Configuration Register Write Protection bit
 11315                           ;	WRTC = OFF, Configuration registers not write-protected
 11316                           ;	Data EEPROM Write Protection bit
 11317                           ;	WRTD = OFF, Data EEPROM not write-protected
 11318                           ;	SAF Write protection bit
 11319                           ;	WRTSAF = OFF, SAF not Write Protected
 11320                           ;	Low Voltage Programming Enable bit
 11321                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
 11322   300007                     	org	3145735
 11323   300007  FF                 	db	255
 11324                           
 11325                           ;Config register CONFIG5L @ 0x300008
 11326                           ;	PFM and Data EEPROM Code Protection bit
 11327                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
 11328   300008                     	org	3145736
 11329   300008  FF                 	db	255
 11330                           
 11331                           ;Config register CONFIG5H @ 0x300009
 11332                           ;	unspecified, using default values
 11333   300009                     	org	3145737
 11334   300009  FF                 	db	255
 11335                           tosu	equ	0x3FFF
 11336                           tosh	equ	0x3FFE
 11337                           tosl	equ	0x3FFD
 11338                           stkptr	equ	0x3FFC
 11339                           pclatu	equ	0x3FFB
 11340                           pclath	equ	0x3FFA
 11341                           pcl	equ	0x3FF9
 11342                           tblptru	equ	0x3FF8
 11343                           tblptrh	equ	0x3FF7
 11344                           tblptrl	equ	0x3FF6
 11345                           tablat	equ	0x3FF5
 11346                           prodh	equ	0x3FF4
 11347                           prodl	equ	0x3FF3
 11348                           indf0	equ	0x3FEF
 11349                           postinc0	equ	0x3FEE
 11350                           postdec0	equ	0x3FED
 11351                           preinc0	equ	0x3FEC
 11352                           plusw0	equ	0x3FEB
 11353                           fsr0h	equ	0x3FEA
 11354                           fsr0l	equ	0x3FE9
 11355                           wreg	equ	0x3FE8
 11356                           indf1	equ	0x3FE7
 11357                           postinc1	equ	0x3FE6
 11358                           postdec1	equ	0x3FE5
 11359                           preinc1	equ	0x3FE4
 11360                           plusw1	equ	0x3FE3
 11361                           fsr1h	equ	0x3FE2
 11362                           fsr1l	equ	0x3FE1
 11363                           bsr	equ	0x3FE0
 11364                           indf2	equ	0x3FDF
 11365                           postinc2	equ	0x3FDE
 11366                           postdec2	equ	0x3FDD
 11367                           preinc2	equ	0x3FDC
 11368                           plusw2	equ	0x3FDB
 11369                           fsr2h	equ	0x3FDA
 11370                           fsr2l	equ	0x3FD9
 11371                           status	equ	0x3FD8

Data Sizes:
    Strings     79
    Constant    0
    Data        0
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     41      63
    BANK0           160    139     153
    BANK1           256     19      99
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), STR_1(CODE[13]), STR_3(CODE[15]), 
		 -> STR_5(CODE[13]), STR_6(CODE[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), STR_1(CODE[13]), STR_3(CODE[15]), 
		 -> STR_5(CODE[13]), STR_6(CODE[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S1160$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), 

    S1160$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[9]), STR_4(CODE[15]), STR_7(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> data(COMRAM[10]), main@countdownMsg(BANK1[17]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_11(CODE[4]), STR_8(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[9]), STR_4(CODE[15]), STR_7(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[9]), STR_4(CODE[15]), STR_7(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[9]), STR_4(CODE[15]), STR_7(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _my_ISR in COMRAM

    _my_ISR->i2___flmul
    i2___flmul->i2___xxtofl

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Char->_MSdelay
    _LCD_Init->_LCD_Command
    _LCD_Command->_MSdelay

Critical Paths under _my_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _my_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _my_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _my_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _my_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _my_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _my_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _my_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _my_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _my_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _my_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _my_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _my_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _my_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _my_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _my_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _my_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _my_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _my_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _my_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _my_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _my_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _my_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _my_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _my_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _my_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _my_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0   25746
                                            137 BANK0      2     2      0
                                              0 BANK1     19    19      0
                           _ADC_Init
                     _Interrupt_Init
                        _LCD_Command
                           _LCD_Init
                         _LCD_String
                      _LCD_String_xy
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    14      7   21321
                                            118 BANK0     19    12      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3   20979
                                            114 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3   20734
                                            103 BANK0     11     8      3
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     272
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              53    47      6   16293
                                             51 BANK0     52    46      6
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               6     3      3     115
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     217
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (5) _labs                                                 8     4      4     102
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     495
                                             25 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     201
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     346
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3031
                                             39 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2954
                                              0 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4      68
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2241
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     290
                                             39 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     142
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    1713
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                12     9      3    2676
                                             22 BANK0     12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  8     3      5    1115
                                             14 BANK0      8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     487
                                              8 BANK0      6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     335
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      96
                                              6 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     439
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     451
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     511
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        9     6      3     702
                                              9 BANK0      9     6      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     263
                                              7 BANK0      2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             1     1      0     192
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0     337
                        _LCD_Command
                            _MSdelay
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          1     1      0     192
                                              6 BANK0      1     1      0
                            _MSdelay
 ---------------------------------------------------------------------------------
 (4) _MSdelay                                              6     4      2     145
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _my_ISR                                               3     3      0    1808
                                             39 COMRAM     2     2      0
                          i2___flmul
                         i2___xxtofl
 ---------------------------------------------------------------------------------
 (10) i2___xxtofl                                         14    10      4     337
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (10) i2___flmul                                          25    17      8    1470
                                             14 COMRAM    25    17      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Interrupt_Init
   _LCD_Command
     _MSdelay
   _LCD_Init
     _LCD_Command
     _MSdelay
   _LCD_String
     _LCD_Char
       _MSdelay
   _LCD_String_xy
     _LCD_Command
     _LCD_String
   ___flmul
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
           _strcpy
         _fputc
         _read_prec_or_width

 _my_ISR (ROOT)
   i2___flmul
     i2___xxtofl (ARG)
   i2___xxtofl

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1169      0       0      0.0%
BITBIGSFRlll       400      0       0      0.0%
BITBIGSFRh         263      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     19      99     38.7%
BITBIGSFRllh       213      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160    139     153     95.6%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     41      63     66.3%
STACK                0      0       0      0.0%
DATA                 0      0     314      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 28 16:21:23 2025

          ??_Interrupt_Init 0060                ___fldiv@aexp 0078                ___fldiv@bexp 0077  
         _LCD_String_xy$605 0070                ___fldiv@sign 0070                ?_LCD_Command 0001  
              ___awdiv@sign 0065                 ?_LCD_String 0067                         l121 8082  
                       l115 7EB4                         l135 9546                         l151 923E  
                       l144 9134                         l129 94F6                         l162 956C  
                       l138 951E                         l421 8F7C                         l174 9424  
                       l159 928A                         l408 8E12                         l442 8A46  
                       l451 945E                         l436 9028                         l447 8A8C  
                       l800 72AE                         l801 729C                         l705 6C8A  
                       l722 6DA4                         l714 6F56                         l706 6C78  
                       l474 8986                         l731 6E72                         l707 6C3E  
                       l732 6E60                         l719 6E32                         l832 83F0  
                       l808 7364                         l761 79E2                         l770 7A28  
                       l738 6F1A                         l922 643C                         l835 854C  
                       l771 7A46                         l747 9362                         l908 887E  
                       l772 7A9E                         l764 79A6                         l924 627C  
                       l773 7A8C                         l846 84E4                         l839 8488  
                       l759 7B7E                         l791 701E                         l919 6A9E  
                       l855 93E6                         l952 6882                         l890 90C0  
                       l795 73A2                         l964 8EC4                         l885 9062  
                       l894 8732                         l798 7238                         l990 7D40  
                       l799 7256                         l888 90A2                         l896 873A  
                       l968 8ECC                         l984 7E98                         l897 8780  
                       _abs 9496                         _pad 902A                         _lux 0032  
              ___awmod@sign 0065                  i2___xxtofl 854E                         wreg 3FE8  
               i2___flmul@a 0013                 i2___flmul@b 000F                ___flmul@aexp 007B  
              ___flmul@bexp 0080                ___flmul@sign 007A                ___flmul@temp 0085  
              ___flmul@prod 0081                 LCD_Char@dat 0066                ___fltol@exp1 0069  
                      l1021 94B2                        l1030 8394                        l1006 92D2  
                      l1024 94CA                        l1016 8B8C                        l1033 82D8  
                      l1050 9190                        ?_abs 0066                        l1044 91E8  
                      l1062 8D4E                        l1070 93A6                        l1073 956E  
                      l1079 931A                        l5001 8384                        l5011 915E  
                      l4301 6B0C                        l5013 9170                        l5005 9136  
                      l5101 616E                        l5031 9274                        l4311 6B36  
                      l4303 6B1E                        l5007 914A                        l5015 9174  
                      l5111 61A4                        l5103 617E                        l5025 9256  
                      l5017 9240                        l5041 8758                        l5033 8702  
                      l4401 6D12                        l4313 6B46                        l4321 6B6E  
                      l4305 6B20                        l5009 915A                        l5201 663A  
                      l5121 6202                        l5113 61AE                        l5105 6182  
                      l5027 925A                        l5019 924E                        l5051 8790  
                      l5043 8768                        l5035 8726                        l4411 6D84  
                      l4403 6D18                        l4331 6BA6                        l4323 6B7E  
                      l4315 6B56                        l4307 6B26                        l5211 66D4  
                      l5203 666E                        l5123 6206                        l5107 6188  
                      l5029 9270                        l5053 8796                        l5061 87F2  
                      l5045 8774                        l5037 8742                        l4501 7854  
                      l4421 6DDE                        l4405 6D3E                        l4413 6D94  
                      l4341 6BBA                        l4333 6BAA                        l4325 6B90  
                      l4317 6B66                        l4309 6B34                        l5221 67AE  
                      l5213 6708                        l5205 6682                        l5141 628C  
                      l5125 620C                        l5109 6190                        l5117 61CA  
                      l5301 8E46                        l5311 94FC                        l4271 8CAC  
                      l5071 8850                        l5063 880E                        l5055 87CA  
                      l5047 877C                        l5039 8752                        l4511 7880  
                      l4503 785A                        l4431 6E0E                        l4423 6DE8  
                      l4415 6DBA                        l4407 6D72                        l4351 6BCE  
                      l4343 6BBE                        l4335 6BAE                        l4327 6B9E  
                      l4319 6B68                        l5231 67D4                        l5215 6762  
                      l5223 67B2                        l5207 66B6                        l5151 6376  
                      l5143 6290                        l5127 6214                        l5119 61F2  
                      l5135 622C                        l5303 8E4E                        l5321 9510  
                      l5313 9502                        l4273 8CB6                        l5073 8862  
                      l5065 8820                        l5057 87D0                        l5049 8788  
                      l4601 7B58                        l4521 78B8                        l4513 7890  
                      l4505 7860                        l4441 6E58                        l4433 6E12  
                      l4425 6DF6                        l4417 6DCA                        l4409 6D74  
                      l4361 6C0A                        l4353 6BD2                        l4345 6BC2  
                      l4337 6BB2                        l4329 6BA2                        l4281 6AA0  
                      l5241 68A2                        l5233 67E0                        l5225 67C2  
                      l5217 6766                        l5209 66C4                        l5153 638A  
                      l5161 6408                        l5145 62C4                        l5137 6244  
                      l5081 60D4                        l5305 8E6E                        l5401 7E44  
                      l5315 9504                        l4275 8CD2                        l4267 8C8A  
                      l5067 883A                        l5059 87D6                        l4611 7B74  
                      l4603 7B5A                        l4523 78CE                        l4515 78A0  
                      l4507 786E                        l4451 6ED6                        l4435 6E22  
                      l4427 6DF8                        l4371 6C5C                        l4363 6C26  
                      l4355 6BD6                        l4347 6BC6                        l4339 6BB6  
                      l4291 6ADE                        l4283 6AAE                        l5251 68D4  
                      l5243 68B2                        l5235 685A                        l5227 67CA  
                      l5219 679A                        l5171 646E                        l5163 6444  
                      l5155 63BE                        l5147 6304                        l5091 611E  
                      l5083 60D8                        l5307 8E90                        l5403 7E62  
                      l5331 7BC2                        l5323 7B80                        l5421 9536  
                      l5413 9524                        l5317 9506                        l5501 9216  
                      l4277 8D04                        l4269 8C9C                        l5069 884A  
                      l4605 7B5E                        l4541 7922                        l4525 78DE  
                      l4533 78FE                        l4517 78A2                        l4509 7870  
                      l4701 721E                        l4621 6F66                        l4461 6F28  
                      l4445 6E82                        l4453 6ED8                        l4429 6E06  
                      l4437 6E24                        l4381 6CA8                        l4373 6C6A  
                      l4365 6C36                        l4357 6BDA                        l4349 6BCA  
                      l4293 6AEE                        l4285 6ABC                        l5261 6908  
                      l5253 68D8                        l5245 68B6                        l5237 687A  
                      l5229 67CC                        l5181 64BC                        l5173 6472  
                      l5165 6452                        l5157 63C6                        l5149 6338  
                      l5093 612E                        l5085 60FC                        l5077 60B2  
                      l5309 8E98                        l5341 7BDE                        l5333 7BC8  
                      l5325 7BAA                        ?_pad 006E                        l5423 9538  
                      l5415 952A                        l5319 950E                        l5431 90FA  
                      l5503 9228                        l4607 7B6C                        l4551 7972  
                      l4543 793C                        l4535 790E                        l4527 78E6  
                      l4519 78A8                        l4711 7294                        l4703 7228  
                      l4631 6FA6                        l4623 6F74                        l4471 6F46  
                      l4463 6F2E                        l4455 6EE8                        l4447 6E8E  
                      l4439 6E42                        l4391 6CE8                        l4375 6C6C  
                      l4367 6C4C                        l4359 6BDE                        l4295 6AF0  
                      l4287 6ABE                        l5271 69A8                        l5263 690C  
                      l5255 68DE                        l5247 68BC                        l5239 6894  
                      l5191 6554                        l5175 6484                        l5183 64C4  
                      l5167 645E                        l5095 613A                        l5087 6106  
                      l5079 60C6                        l5351 7C40                        l5335 7BCA  
                      l5343 7C02                        l5327 7BB2                        l5407 7E70  
                      l5511 93B6                        l5417 952C                        l5425 90C2  
                      l5505 922C                        l5521 839A                        l4801 8EE0  
                      l4481 9386                        l4609 7B72                        l4561 79CE  
                      l4553 7982                        l4545 794C                        l4537 790E  
                      l4529 78EA                        l4721 7302                        l4705 7236  
                      l4641 6FD6                        l4633 6FAC                        l4625 6F76  
                      l4465 6F30                        l4457 6EF8                        l4449 6E9C  
                      l4393 6CF4                        l4385 6CBC                        l4377 6C76  
                      l4369 6C58                        l4289 6ACE                        l4297 6AF6  
                      l5281 69FC                        l5265 6912                        l5249 68C4  
                      l5257 68E4                        l5273 69AC                        l5193 65AC  
                      l5185 64CC                        l5177 6492                        l5169 6466  
                      l5097 6142                        l5089 610E                        l5361 7CB2  
                      l5353 7C68                        l5345 7C12                        l5337 7BD6  
                      l5329 7BBE                        l5433 928C                        l5513 93BE  
                      l5601 7FD4                        l5451 954E                        l5419 952E  
                      l5443 94CC                        l5427 90C6                        l5507 9232  
                      l5523 83AC                        l4811 8F14                        l4803 8EE8  
                      l4475 9364                        l4571 7A0E                        l4563 79D0  
                      l4555 7996                        l4547 795C                        l4491 781C  
                      l4483 77EE                        l4731 735E                        l4715 72BE  
                      l4723 7306                        l4707 7248                        l4651 700E  
                      l4643 6FD8                        l4635 6FBC                        l4627 6F86  
                      l4619 6F58                        l4467 6F36                        l4459 6F18  
                      l4395 6CF8                        l4387 6CCC                        l4379 6C98  
                      l4299 6B06                        l5291 6A7A                        l5283 6A2C  
                      l5275 69CA                        l5267 696A                        l5259 68F6  
                      l5195 65E2                        l5187 64DC                        l5179 64AA  
                      l5099 6146                        l5371 7D0E                        l5363 7CD4  
                      l5355 7C70                        l5347 7C26                        l5435 9294  
                      l5515 93C6                        l5611 7FFA                        l5603 7FEC  
                      l5461 9560                        l5453 9558                        l5445 94DA  
                      l5429 90F4                        l5541 8472                        l5533 842A  
                      l5525 83BA                        l4821 8F50                        l4813 8F1C  
                      l4805 8EEC                        l4477 9372                        l4581 7A84  
                      l4573 7A18                        l4565 79E0                        l4557 79A4  
                      l4549 796C                        l4493 782C                        l4485 77FC  
                      l4733 7368                        l4741 738E                        l4725 7320  
                      l4717 72CA                        l4709 7266                        l4661 7062  
                      l4653 702E                        l4645 6FE8                        l4637 6FC2  
                      l4629 6F96                        l4469 6F44                        l4397 6D06  
                      l4389 6CDA                        l4901 8912                        l5293 6A82  
                      l5285 6A3A                        l5277 69E6                        l5269 69A0  
                      l5189 64F0                        l5197 65E8                        l5381 7D46  
                      l5373 7D18                        l5365 7CF0                        l5357 7C84  
                      l5349 7C36                        l5437 92A6                        l5517 93D6  
                      l5509 93A8                        l5621 8046                        l5613 8014  
                      l5605 7FF0                        l5471 956A                        l5463 9562  
                      l5455 955A                        l5447 94DC                        l5551 84F2  
                      l5543 847E                        l5535 8432                        l5527 8400  
                      l4823 8F56                        l4815 8F24                        l4807 8EFA  
                      l4479 9380                        l4591 7AF2                        l4575 7A26  
                      l4567 79F2                        l4559 79B0                        l4495 783C  
                      l4487 780A                        l4743 7392                        l4735 7378  
                      l4727 7334                        l4719 72D8                        l4671 70BA  
                      l4663 706C                        l4655 703E                        l4647 6FF8  
                      l4639 6FC8                        l4399 6D08                        l4911 893A  
                      l4903 891C                        l5287 6A52                        l5279 69EE  
                      l5199 6606                        l5391 7DEE                        l5383 7D64  
                      l5375 7D32                        l5367 7CFA                        l5359 7C90  
                      l5439 92C8                        l5631 80B2                        l5623 8060  
                      l5615 8028                        l5465 9564                        l5457 955C  
                      l5449 9548                        l5481 9410                        l5473 93E8  
                      l5561 853A                        l5553 84F4                        l5545 84BA  
                      l5537 843E                        l5529 8416                        l4761 8D6E  
                      l4753 8D50                        l4817 8F32                        l4825 8F5C  
                      l4809 8F02                        l4585 7AAE                        l4593 7AF6  
                      l4569 7A08                        l4577 7A38                        l4497 783E  
                      l4489 780C                        l4841 8FFC                        l4833 8F7E  
                      l4737 7386                        l4729 734E                        l4681 7104  
                      l4673 70C6                        l4665 7086                        l4649 7008  
                      l4913 8946                        l4905 8926                        l5289 6A62  
                      l5297 8E14                        l5393 7E04                        l5385 7D8A  
                      l5377 7D38                        l5641 80F4                        l5633 80CA  
                      l5625 8068                        l5617 802A                        l5467 9566  
                      l5459 955E                        l5491 941E                        l5483 9414  
                      l5475 9402                        l5563 853C                        l5555 84F8  
                      l5547 84C6                        l5539 8470                        l4771 8DA2  
                      l4763 8D7C                        l4755 8D54                        l4827 8F6C  
                      l4819 8F48                        l4931 906E                        l4923 902A  
                      l4595 7B10                        l4587 7ABA                        l4579 7A56  
                      l4499 7844                        l4843 9020                        l4835 8FAE  
                      l4851 89B8                        l4739 7388                        l4691 7172  
                      l4683 7114                        l4675 70D4                        l4667 7092  
                      l4659 7052                        l4747 931C                        l4915 8956  
                      l5299 8E1E                        l5395 7E12                        l5387 7DBC  
                      l5643 80F6                        l5651 8142                        l5635 80CE  
                      l5627 8094                        l5619 8044                        l5571 7EA8  
                      l5469 9568                        l5493 9420                        l5485 9416  
                      l5477 940A                        l5557 851C                        l5549 84D4  
                      l4781 8DDC                        l4773 8DAA                        l4765 8D84  
                      l4757 8D62                        l4829 8F74                        l4941 94A6  
                      l4933 907E                        l4925 903A                        l4597 7B26  
                      l4589 7AC8                        l4845 9026                        l4837 8FBE  
                      l4861 8A26                        l4853 89C8                        l4693 7192  
                      l4685 7132                        l4677 70E4                        l4669 70AE  
                      l4749 932E                        l4917 8966                        l5653 8152  
                      l5645 80FC                        l5629 809A                        l5637 80D2  
                      l5581 7F2A                        l5573 7EAC                        l5495 9422  
                      l5487 941A                        l5479 940C                        l5559 852C  
                      l4791 8E02                        l4783 8DE4                        l4775 8DB2  
                      l4767 8D88                        l4759 8D6A                        l4935 9084  
                      l4927 904A                        l4599 7B40                        l4839 8FEC  
                      l4863 8A34                        l4855 89F6                        l4695 71BC  
                      l4687 7142                        l4679 70F4                        l4871 9426  
                      l4919 8976                        l4951 8B22                        l4943 8A8E  
                      l5655 8164                        l5647 811C                        l5639 80E4  
                      l5591 7FB0                        l5583 7F60                        l5575 7EB0  
                      l5567 7E9A                        l5489 941C                        l5497 91EE  
                      l4793 8E0A                        l4785 8DE6                        l4777 8DC0  
                      l4769 8D90                        l4937 90B0                        l4929 905A  
                      l4865 8A84                        l4857 8A06                        l4849 8988  
                      l4697 71F2                        l4689 7162                        l4873 943E  
                      l4881 8898                        l4961 8B84                        l4945 8AAE  
                      l5657 8174                        l5649 8128                        l5593 7FB4  
                      l5585 7F66                        l5577 7EC2                        l5569 7EA4  
                      l5499 9200                        l4787 8DEC                        l4779 8DC6  
                      l4939 9496                        l4867 8A8A                        l4859 8A14  
                      l4699 7200                        l4875 944E                        l4891 88E8  
                      l4947 8AEE                        l4955 8B2E                        l4971 91A2  
                      l5595 7FB8                        l5587 7F7E                        l5579 7EDC  
                      l4789 8DF2                        l4797 8ECE                        l4893 88EC  
                      l4885 88AC                        l4957 8B40                        l4949 8B16  
                      l4981 81F8                        l4973 91B6                        l4965 92D4  
                      l5597 7FCA                        l5589 7F9E                        l4799 8ED2  
                      l4895 88FA                        l4887 88D6                        l4879 8880  
                      l4991 82C8                        l4983 820C                        l4967 92DC  
                      l5599 7FCE                        l4889 88D8                        l4985 821A  
                      l4993 82FC                        l4977 8180                        l4969 9192  
                      l4995 8338                        l4979 81A0                        l4997 834C  
                      l4989 828C                        l4999 8374                        STR_1 201F  
                      STR_2 2037                        STR_3 2010                        STR_4 2001  
                      STR_5 201F                        STR_6 2040                        STR_7 202C  
                      STR_8 2048                        _LATB 3FBB                        u5000 6ACE  
                      u5001 6ACA                        u5010 6ADE                        u5011 6ADA  
                      u5100 6C24                        u5020 6B1E                        u5021 6B1A  
                      u5110 6C4C                        u5030 6B34                        u5111 6C48  
                      u5031 6B30                        u6000 8A84                        u5200 6D84  
                      u5120 6C6A                        u5040 6B46                        u6001 8A80  
                      u5201 6D80                        u5121 6C66                        u5041 6B42  
                      u6010 943E                        u5210 6DBA                        u5130 6C8A  
                      u5050 6B56                        u6011 943A                        u5211 6DB6  
                      u5131 6C86                        u5051 6B52                        u6100 905A  
                      u5300 6E82                        u5220 6DCA                        u5140 6C98  
                      u5060 6B90                        u6020 8898                        u6101 9056  
                      u5301 6E7E                        u5221 6DC6                        u5141 6C94  
                      u5061 6B8C                        u6021 8894                        u6110 90A2  
                      u5310 6E9C                        u5230 6DF6                        u5150 6CA8  
                      u5070 6B9E                        u6030 88CC                        u6111 909E  
                      u5311 6E98                        u5231 6DF2                        u5151 6CA4  
                      u5071 6B9A                        u7000 853A                        u6120 90B0  
                      u5400 781C                        u5320 6ED6                        u5240 6E06  
                      u5160 6CDA                        u5080 6C0A                        u6040 88FA  
                      u6200 8B7C                        u7001 8536                        u6121 90AC  
                      u5401 7818                        u5321 6ED2                        u5241 6E02  
                      u5161 6CD6                        u5081 6C06                        u6041 88F6  
                      u6130 94A6                        u5410 782C                        u5330 6EE8  
                      u5250 6E22                        u5170 6CE8                        u5090 6C22  
                      u6050 890E                        u6210 931A                        u7010 7EC2  
                      u6131 94A2                        u5411 7828                        u5331 6EE4  
                      u5251 6E1E                        u5171 6CE4                        u5091 6C1C  
                      u6051 890A                        u6035 88C2                        u6211 9316  
                      u7011 7EBE                        u5500 79F2                        u5420 786E  
                      u5340 6EF8                        u5260 6E32                        u5180 6D06  
                      u6060 8936                        u6140 8AD0                        u6300 831C  
                      u6220 91A2                        u7020 7FCA                        u5501 79EE  
                      u5421 786A                        u5341 6EF4                        u5261 6E2E  
                      u5181 6D02                        u6061 8932                        u6221 919E  
                      u7021 7FC6                        u5510 7A08                        u5430 7880  
                      u5350 6F18                        u5270 6E42                        u5190 6D3E  
                      u6070 8956                        u6150 8AEE                        u6310 8338  
                      u6230 81CA                        u7030 8082                        u5511 7A04  
                      u5431 787C                        u5351 6F14                        u5271 6E3E  
                      u5191 6D3A                        u6071 8952                        u6151 8AEA  
                      u6311 8334                        u7031 807E                        u6400 8768  
                      u5600 7B40                        u5520 7A26                        u5440 7890  
                      u5360 6F28                        u5280 6E58                        u6080 8966  
                      u6160 8B16                        u6320 8374                        u6240 81F8  
                      u7040 80E4                        u6401 8764                        u5601 7B3C  
                      u5521 7A22                        u5441 788C                        u5361 6F24  
                      u5281 6E54                        u6081 8962                        u6161 8B12  
                      u6145 8AC4                        u6321 8370                        u6305 8312  
                      u6241 81F4                        u7041 80E0                        u6090 903A  
                      u6410 880E                        u5610 7B6C                        u5530 7A46  
                      u5450 78CE                        u5370 6F44                        u5290 6E6E  
                      u6170 8B40                        u6250 821A                        u6330 9190  
                      u7050 80F4                        u6091 9036                        u6411 880A  
                      u5611 7B68                        u5531 7A42                        u5451 78CA  
                      u5371 6F40                        u5291 6E6A                        u6171 8B3C  
                      u6251 8216                        u6235 81C0                        u6331 918C  
                      u7051 80F0                        u7107 8052                        u6340 9270  
                      u5380 93A6                        u6420 8820                        u5540 7A56  
                      u5460 790E                        u5700 71DC                        u5620 6F74  
                      u6500 61F2                        u7060 8152                        u6341 926C  
                      u5381 93A2                        u6421 881C                        u5541 7A52  
                      u5461 790A                        u5621 6F70                        u6501 61EE  
                      u7061 814E                        u7117 8134                        u6350 928A  
                      u6430 883A                        u5550 7A84                        u5470 7982  
                      u5390 780A                        u5710 7236                        u5630 6F86  
                      u6190 8B7A                        u6270 8288                        u6510 6202  
                      u7070 8164                        u6351 9286                        u7127 9508  
                      u6431 8836                        u5551 7A80                        u5471 797E  
                      u5391 7806                        u5711 7232                        u5631 6F82  
                      u6191 8B74                        u6271 8284                        u6511 61FE  
                      u7071 8160                        u6440 884A                        u6360 8714  
                      u5560 7A9A                        u5480 79A4                        u5800 7386  
                      u5720 7256                        u5640 6F96                        u6280 82AC  
                      u6600 6492                        u6520 6278                        u7080 8174  
                      u7137 9530                        u6441 8846                        u6361 870E  
                      u5561 7A96                        u5481 79A0                        u5801 7382  
                      u5721 7252                        u5705 71D2                        u5641 6F92  
                      u6185 8B52                        u6265 822E                        u6601 648E  
                      u6521 6274                        u7081 8170                        u5810 8D62  
                      u6370 8716                        u5570 7AAE                        u5490 79CE  
                      u5730 7266                        u5650 6FD6                        u6290 82C8  
                      u6266 8238                        u6610 64BC                        u6530 6304  
                      u6450 60D4                        u5811 8D5E                        u5571 7AAA  
                      u5491 79CA                        u5731 7262                        u5651 6FD2  
                      u6291 82C4                        u6267 8248                        u6611 64B8  
                      u6531 6300                        u6451 60D0                        u5820 8D7C  
                      u5900 8F32                        u6380 8726                        u5580 7AC8  
                      u5740 7294                        u5660 6FE8                        u6700 68A2  
                      u6620 6606                        u6540 6338                        u6460 611E  
                      u5821 8D78                        u5901 8F2E                        u6381 8722  
                      u5581 7AC4                        u5741 7290                        u5661 6FE4  
                      u6285 82A2                        u6701 689E                        u6621 6602  
                      u6541 6334                        u6461 611A                        u5830 8DA2  
                      u5910 8F48                        u4950 8C9C                        u6390 8752  
                      u5590 7B10                        u5750 72AA                        u5670 6FF8  
                      u6710 68F6                        u6630 666E                        u6550 6376  
                      u6470 612E                        u5831 8D9E                        u5911 8F44  
                      u4951 8C98                        u6391 874E                        u5591 7B0C  
                      u5751 72A6                        u5671 6FF4                        u6711 68F2  
                      u6631 666A                        u6551 6372                        u6471 612A  
                      u5840 8DC0                        u5920 8F6C                        u4960 8CAC  
                      u5760 72BE                        u5680 702E                        u6720 69CA  
                      u6640 66B6                        u6560 6404                        u6480 616E  
                      u6800 7C12                        u5841 8DBC                        u5921 8F68  
                      u4961 8CA8                        u5761 72BA                        u5681 702A  
                      u6721 69C6                        u6641 66B2                        u6561 6400  
                      u6481 616A                        u6801 7C0E                        u7097 8036  
                      u5850 8DDC                        u4970 8CD2                        u5930 8FAE  
                      u5770 72D8                        u5690 703E                        u6730 69E6  
                      u6650 66C4                        u6570 643C                        u6490 617E  
                      u6810 7C36                        u5851 8DD8                        u4971 8CCE  
                      u5931 8FAA                        u5771 72D4                        u5691 703A  
                      u6731 69E2                        u6651 66C0                        u6571 6438  
                      u6491 617A                        u6811 7C32                        u6900 9200  
                      u5860 8E02                        u4980 8D04                        u5940 8FEC  
                      u5780 7320                        u6740 6A4C                        u6660 6762  
                      u6580 6452                        u6820 7C68                        u6901 91FC  
                      u5861 8DFE                        u4981 8D00                        u5941 8FE8  
                      u5781 731C                        u6741 6A46                        u6661 675E  
                      u6581 644E                        u6821 7C64                        u6910 83AC  
                      u5870 8EE0                        u5950 9020                        u5790 734E  
                      u4990 6ABC                        u6750 6A4E                        u6670 67AE  
                      u6590 6484                        u6830 7CB2                        u6911 83A8  
                      u5871 8EDC                        u5951 901C                        u5791 734A  
                      u4991 6AB8                        u6671 67AA                        u6591 6480  
                      u6831 7CAE                        u6920 83BA                        u5880 8EFA  
                      u5960 89B8                        u6760 6A62                        u6680 685A  
                      u6840 7CD4                        u6921 83B6                        u5881 8EF6  
                      u5961 89B4                        u6761 6A5E                        u6681 6856  
                      u6841 7CD0                        u6930 8416                        u5890 8F14  
                      u5970 89F6                        u6690 6894                        u6770 8E46  
                      u6850 7D86                        u6931 8412                        u5891 8F10  
                      u5971 89F2                        u6691 6890                        u6771 8E42  
                      u6851 7D82                        u6860 90F0                        u6940 846C  
                      u5980 8A14                        u6780 8EC4                        u6941 8468  
                      u5981 8A10                        u6781 8EC0                        u6870 9124  
                      u6950 84B6                        u5990 8A34                        u6790 7BAA  
                      u6951 84B2                        u5991 8A30                        u6791 7BA6  
                      u6880 9134                        u6960 84D4                        u6881 9130  
                      u6961 84D0                        u6970 84E4                        u6890 92C8  
                      u6867 90E2                        u6971 84E0                        u6891 92C4  
                      u6980 84F2                        u6877 9116                        u6981 84EE  
                      u6990 852C                        u6991 8528                        abs@a 0066  
                      _data 0036                        _dbuf 0100                        _labs 9192  
                      _main 7E9A                        _dtoa 8702                        _prec 00F1  
                      pad@i 0074                        pad@p 0071                        fsr1h 3FE2  
                      fsr2h 3FDA                        indf1 3FE7                        indf2 3FDF  
                      fsr1l 3FE1                        fsr2l 3FD9            __end_of_ADC_Init 956E  
             ___fpclassifyf 8A8E                        prodh 3FF4                        prodl 3FF3  
                      start 60AE             __end_of_MSdelay 928C             ___fldiv@new_exp 0071  
             _LCD_String_xy 91EA                ___param_bank 0000                       ??_abs 0068  
                     ??_pad 0073            __end_of_LCD_Char 9520            __end_of_LCD_Init 94F8  
             ___fltol@sign1 0068                       ?_labs 0060             __end_of___fladd 6F58  
                     ?_main 0001                       ?_dtoa 0076                       _ADCLK 3EFF  
                     _ADPCH 3EF1             __end_of___fldiv 7B80             __end_of___awdiv 8E14  
           __end_of___flneg 9460                       STR_11 204C             __end_of___awmod 8F7E  
           __end_of___flmul 73A4             __end_of___flsub 9364             __end_of___fltol 8988  
           ___awdiv@divisor 0062                       _LATD0 1FDE8                       _LATD1 1FDE9  
                     i2l171 8C88                       i2l800 76F8                       i2l801 76E6  
                     i2l808 77AE                       i2l832 85A4                       i2l835 8700  
                     i2l846 8698                       i2l791 7468                       i2l839 863C  
                     i2l795 77EC             ___awdiv@counter 0064                       i2l798 7682  
                     i2l799 76A0                vfpfcnvrt@fmt 00C8                       _PORTC 3FCC  
                     _TRISB 3FC3                       _TRISD 3FC5                       _flags 00F5  
       read_prec_or_width@c 0064         read_prec_or_width@n 0065                       _fputc 8C8A  
                     _fputs 9364                       labs@a 0060                       pad@fp 006E  
                     _width 00EF                       _putch 956E                       dtoa@d 0077  
                     dtoa@i 0080                       dtoa@p 007D                       dtoa@s 007F  
                     dtoa@w 007B                       tablat 3FF5                       status 3FD8  
           __end_of_sprintf 93E8              ?___fpclassifyf 0060               i2___flmul@grs 001C  
            ?_LCD_String_xy 0069             __initialization 9460                 _systemState 00F6  
              __end_of_labs 91EA                __end_of_main 8180                __end_of_dtoa 8880  
                    ??_labs 0064                      ??_main 00E9                      ??_dtoa 0079  
             __activetblptr 0003                 ?i2___xxtofl 0001  __end_of_read_prec_or_width 8ECE  
                    _ADACQH 3EF4                      _ADACQL 3EF3                      ?_fputc 0060  
                    ?_fputs 0068                      _ADRESH 3EF0                      _ADRESL 3EEF  
                    _ADPREH 3EF7                      _ADPREL 3EF6            ___awdiv@dividend 0060  
                    _ANSELA 3A40                      ?_putch 0001                      _ANSELB 3A50  
                    _ANSELC 3A60                      _ANSELD 3A70            LCD_String_xy@msg 006A  
          LCD_String_xy@pos 0069            LCD_String_xy@row 006E                   ??_MSdelay 0062  
                    i2l4001 7442                      i2l4003 7452                      i2l4021 74DC  
                    i2l4013 749C                      i2l4005 7458                      i2l4101 8550  
                    i2l4031 752E                      i2l4023 74F8                      i2l4015 74AC  
                    i2l4007 7478                      i2l4103 8560                      i2l4041 758C  
                    i2l4033 753E                      i2l4025 7504                      i2l4017 74B6  
                    i2l4009 7488                      i2l4121 8626                      i2l4113 85DE  
                    i2l4105 856E                      i2l4051 763C                      i2l4043 75AC  
                    i2l4035 754E                      i2l4027 7510                      i2l4019 74D0  
                    i2l4131 86A6                      i2l4123 8632                      i2l4115 85E6  
                    i2l4107 85B4                      i2l4061 7692                      i2l4053 764A  
                    i2l4045 75BC                      i2l4037 755E                      i2l4029 751E  
                    i2l4141 86EE                      i2l4133 86A8                      i2l4125 866E  
                    i2l4117 85F2                      i2l4109 85CA                      i2l4071 7714  
                    i2l4063 76B0                      i2l4055 7668                      i2l4047 75DC  
                    i2l4039 757C                      i2l4143 86F0                      i2l4135 86AC  
                    i2l4127 867A                      i2l4119 8624                      i2l4081 777E  
                    i2l4073 7722                      i2l4065 76DE                      i2l4057 7672  
                    i2l4049 7606                      i2l4137 86D0                      i2l4129 8688  
                    i2l4241 8B90                      i2l4091 77D0                      i2l4083 7798  
                    i2l4075 774C                      i2l4059 7680                      i2l4139 86E0  
                    i2l4251 8BBC                      i2l4243 8BA0                      i2l4093 77D2  
                    i2l4085 77A8                      i2l4069 7708                      i2l4077 7750  
                    i2l4261 8C4A                      i2l4245 8BB0                      i2l4253 8BC0  
                    i2l4087 77B2                      i2l4095 77D8                      i2l4079 776A  
                    i2l4263 8C7E                      i2l4255 8BD0                      i2l4247 8BB6  
                    i2l4097 77DC                      i2l4089 77C2                      i2l4257 8BE2  
                    i2l4265 8C84                      i2l4249 8BB8                      i2l4259 8BFE  
                    i2l3981 73D0                      i2l3973 73A4                      i2l3991 740C  
                    i2l3983 73E0                      i2l3975 73B0                      i2l3993 7412  
                    i2l3985 73F0                      i2l3977 73BE                      i2l3995 7420  
                    i2l3987 73F6                      i2l3979 73C0                      i2l3997 7422  
                    i2l3989 7406                      i2l3999 7432               vfpfcnvrt@done 00CB  
          __end_of___xxtofl 854E                vfprintf@cfmt 00D5                      ___flge 8988  
                    ___fleq 8F7E                   ??___fladd 0068                   ??___fldiv 0068  
                 ??___awdiv 0064                   ??___flneg 0064                   ??___awmod 0064  
                 ??___flmul 0076                   ??___flsub 008F                   ??___fltol 0064  
                    _efgtoa 60B2                      _floorf 8180                      _memcpy 9136  
                    _my_ISR 8B90        read_prec_or_width@ap 0061                      clear_0 9466  
                    clear_1 9472                      clear_2 947E            ___awdiv@quotient 0066  
           ___awmod@divisor 0062                      isa$std 0001             ___awmod@counter 0064  
                    pad@buf 006F                      dtoa@fp 0076                      _strcpy 92D4  
                    fputc@c 0060                      fputs@c 006B                      fputs@i 006C  
                    fputs@s 0068           __end_ofi2___flmul 77EE             ___fpclassifyf@e 0068  
                 ?_ADC_Init 0001             ___fpclassifyf@u 006A             ___fpclassifyf@x 0060  
              __mediumconst 2000                      tblptrh 3FF7                      tblptrl 3FF6  
                    tblptru 3FF8                      putch@c 0001            __end_of_vfprintf 92D4  
                 ??_sprintf 00DD              i2___flmul@aexp 0020              i2___flmul@bexp 0021  
            i2___flmul@sign 001B              i2___flmul@temp 0026              i2___flmul@prod 0022  
                ___flge@ff1 0087                  ___flge@ff2 008B             ??___fpclassifyf 0064  
              ___xxtofl@arg 006A                ___xxtofl@exp 0069                ___xxtofl@val 0060  
                ___fleq@ff1 0060                  ___fleq@ff2 0064                   ?_LCD_Char 0001  
                __accesstop 0060     __end_of__initialization 9490                   ?_LCD_Init 0001  
           ??_LCD_String_xy 006C                  ___flneg@f1 0060               ___rparam_used 0001  
                ___fltol@f1 0060              __pcstackCOMRAM 0001               __end_of_fputc 8D50  
             __end_of_fputs 93A8               __end_of_putch 9570                ??_LCD_String 0069  
                ??_ADC_Init 0060                     ??_fputc 0063                     ??_fputs 006B  
                   ??_putch 0060                  __pbssBANK0 00EB                  __pbssBANK1 0100  
                ??_LCD_Char 0066                  ??_LCD_Init 0067          __end_of_LCD_String 9136  
                   IVTBASEH 3FD6                     IVTBASEL 3FD5                     IVTBASEU 3FD7  
                   ?___flge 0087                     ?___fleq 0060                     ?_efgtoa 0093  
                   ?_floorf 0079                     ?_memcpy 0060                     ?_my_ISR 0001  
                   ?_strcpy 0060          _interruptTriggered 00F7                   ?___xxtofl 0060  
                   _MSdelay 9240               LCD_String@msg 0067                     __Hparam 0000  
                   __Lparam 0000                     ___fladd 6AA0                     ___fldiv 77EE  
                   ___awdiv 8D50                     ___flneg 9426                     ___awmod 8ECE  
                   ___flmul 6F58                     ___flsub 931C                     ___fltol 8880  
                 ?_vfprintf 00D2                __psmallconst 2000                     __pcinit 9460  
                   __ramtop 2000                     _digital 00F3                     __ptext0 7E9A  
                   __ptext1 93A8                     __ptext2 928C                     __ptext3 7B80  
                   __ptext4 8E14                     __ptext5 60B2                     __ptext6 92D4  
                   __ptext7 9136                     __ptext8 9192                     __ptext9 8180  
             ivt0x6008_base 6008       read_prec_or_width@fmt 0060                ??i2___xxtofl 0005  
                ??___xxtofl 0064            ___awmod@dividend 0060                   _IOCCFbits 3A67  
                   efgtoa@c 0098                     efgtoa@d 00A6                     efgtoa@e 00AA  
                   efgtoa@f 0094                     efgtoa@g 00BD                     efgtoa@h 00B4  
                   efgtoa@i 00B2                     efgtoa@l 00B8                     efgtoa@m 00A8  
                   efgtoa@n 00C1                     efgtoa@p 009D                     efgtoa@t 009F  
                   efgtoa@u 00C3                     efgtoa@w 00AC                   _IOCCNbits 3A66  
                 _IOCCPbits 3A65                     _sprintf 93A8                     _voltage 00EB  
      end_of_initialization 9490                     floorf@e 0087                     floorf@m 0083  
                   floorf@u 0089                     floorf@x 0079                     memcpy@d 0067  
                   memcpy@n 0064                     memcpy@s 0069                     fputc@fp 0062  
            LCD_Command@cmd 0066            main@countdownMsg 0150                     fputs@fp 006A  
        _read_prec_or_width 8E14              i2___xxtofl@arg 000B              i2___xxtofl@exp 000A  
            i2___xxtofl@val 0001           __end_of_vfpfcnvrt 7E9A                  efgtoa@mode 00A4  
                efgtoa@sign 00BC          __end_ofi2___xxtofl 8702                     postdec2 3FDD  
       ?_read_prec_or_width 0060                     postinc0 3FEE                     postinc1 3FE6  
                   postinc2 3FDE            vfpfcnvrt@convarg 00CC                  ??_vfprintf 00D5  
                   strcpy@d 0064                 ___fladd@grs 006F               ___xxtofl@sign 0068  
                 _TRISAbits 3FC2                   _TRISCbits 3FC4        ??_read_prec_or_width 0062  
               ___fldiv@grs 0073                 ___fldiv@rem 006C                   i2___flmul 73A4  
               ___flmul@grs 007C               ??_LCD_Command 0066              __end_of___flge 8A8E  
            __end_of___fleq 902A                 vfpfcnvrt@ap 00C9                 vfpfcnvrt@cp 00D1  
               vfpfcnvrt@fp 00C7              __end_of_efgtoa 6AA0              __end_of_floorf 8396  
            __end_of_memcpy 9192              __end_of_my_ISR 8C8A                  floorf@F521 002A  
            __end_of_strcpy 931C         start_initialization 9460                 __end_of_abs 94CC  
               __end_of_pad 90C2                  ?i2___flmul 000F       __end_of___fpclassifyf 8B8E  
     __end_of_LCD_String_xy 9240                 vfprintf@fmt 00D3                    ??___flge 008F  
                  ??___fleq 0068                    ??_efgtoa 0099                    ??_floorf 007D  
                  ??_memcpy 0066                    ??_my_ISR 0028                    ??_strcpy 0063  
                 ___fladd@a 0064                   ___fladd@b 0060              _Interrupt_Init 93E8  
                 ___fldiv@a 0064                   ___fldiv@b 0060         __end_of_LCD_Command 9548  
                 ___flmul@a 0072                   ___flmul@b 006E                 __pbssCOMRAM 002A  
                 ___flsub@a 008B                   ___flsub@b 0087               __pcstackBANK0 0060  
             __pcstackBANK1 0150                    ?_MSdelay 0060                 __pivt0x6008 6008  
               _efgtoa$1301 00A1                   _dtoa$1270 0079                    ?___fladd 0060  
                  ?___fldiv 0060                    ?___awdiv 0060                    ?___flneg 0060  
                  ?___awmod 0060                    ?___flmul 006E                    ?___flsub 0087  
                  ?___fltol 0060      __end_of_Interrupt_Init 9426                 __smallconst 2000  
                  _ADC_Init 9548       LCD_String_xy@location 006F                    ?_sprintf 00D6  
               ??i2___flmul 0017                    MSdelay@i 0062                    MSdelay@j 0064  
                  _LCD_Char 94F8                    _LCD_Init 94CC                    _LATCbits 3FBC  
                  _PIE0bits 3990                    _PIE1bits 3991                    _IVTBASEH 3FD6  
                  _IVTBASEL 3FD5                    _IVTBASEU 3FD7                    _PIR0bits 39A0  
                  _PIR1bits 39A1                    i2u460_40 7478                    i2u460_41 7474  
                  i2u461_40 7488                    i2u461_41 7484                    i2u470_40 776A  
                  i2u462_40 7626                    i2u454_40 73BE                    i2u470_41 7766  
                  i2u454_41 73BA                    i2u462_45 761C                    i2u471_40 7798  
                  i2u463_40 7680                    i2u455_40 73D0                    i2u471_41 7794  
                  i2u463_41 767C                    i2u455_41 73CC                    i2u472_40 77D0  
                  i2u464_40 76A0                    i2u456_40 73E0                    i2u480_40 86A6  
                  i2u472_41 77CC                    i2u464_41 769C                    i2u456_41 73DC  
                  i2u480_41 86A2                    i2u465_40 76B0                    i2u457_40 7420  
                  i2u481_40 86E0                    i2u473_40 8560                    i2u465_41 76AC  
                  i2u457_41 741C                    i2u481_41 86DC                    i2u473_41 855C  
                  i2u466_40 76DE                    i2u458_40 7432                    i2u482_40 86EE  
                  i2u474_40 856E                    i2u466_41 76DA                    i2u458_41 742E  
                  i2u482_41 86EA                    i2u474_41 856A                    i2u467_40 76F4  
                  i2u459_40 7442                    i2u475_40 85CA                    i2u491_40 8BA0  
                  i2u467_41 76F0                    i2u459_41 743E                    i2u475_41 85C6  
                  i2u491_41 8B9C                    i2u468_40 7708                    i2u476_40 8620  
                  i2u492_40 8BB0                    i2u468_41 7704                    i2u476_41 861C  
                  i2u492_41 8BAC                    i2u469_40 7722                    i2u477_40 866A  
                  i2u493_40 8BD0                    i2u469_41 771E                    i2u477_41 8666  
                  i2u493_41 8BCC                    i2u478_40 8688                    i2u494_40 8BE2  
                  i2u478_41 8684                    i2u494_41 8BDE                    i2u479_40 8698  
                  i2u479_41 8694                 _LCD_Command 9520                   _vfpfcnvrt 7B80  
           ?_Interrupt_Init 0001                  _ADCON0bits 3EF8                    _WPUCbits 3A61  
                vfpfcnvrt@c 00D0                 _INTCON0bits 3FD2                    __Hrparam 0000  
                 memcpy@tmp 0066                  vfprintf@ap 00D4                    __Lrparam 0000  
                vfprintf@fp 00D2                    _adcReady 00F8                  ?_vfpfcnvrt 00C7  
                _ANSELAbits 3A40                  _ANSELCbits 3A60          ___fpclassifyf@F465 002E  
                sprintf@fmt 00D8             main@secondsLeft 0161                    ___xxtofl 8396  
                  __ptext10 8A8E                    __ptext11 8880                    __ptext20 902A  
                  __ptext12 931C                    __ptext21 9364                    __ptext13 6AA0  
                  __ptext30 94F8                    __ptext22 8C8A                    __ptext14 9426  
                  __ptext31 94CC                    __ptext23 956E                    __ptext15 6F58  
                  __ptext32 9520                    __ptext24 9496                    __ptext16 8988  
                  __ptext33 9240                    __ptext25 8ECE                    __ptext17 8F7E  
                  __ptext34 93E8                    __ptext26 8D50                    __ptext18 77EE  
                  __ptext35 9548                    __ptext27 8396                    __ptext19 8702  
                  __ptext36 8B90                    __ptext28 91EA                    __ptext37 854E  
                  __ptext29 90C2                    __ptext38 73A4                  strcpy@dest 0060  
                MSdelay@val 0060                    efgtoa@fp 0093                    efgtoa@ne 009B  
                  efgtoa@pp 00A3                    efgtoa@ou 00AE                    isa$xinst 0000  
         ivt0x6008_undefint 60AC                  _ODCONCbits 3A62                    _vfprintf 928C  
                _LCD_String 90C2                  _INLVLCbits 3A64                    memcpy@d1 0060  
                  memcpy@s1 0062                    intlevel2 0000                   sprintf@ap 00DD  
           i2___xxtofl@sign 0009                 _SLRCONCbits 3A63                   strcpy@src 0062  
               efgtoa@nmode 00A5                 ??_vfpfcnvrt 00CA                    sprintf@f 00DE  
                  sprintf@s 00D6               ___fladd@signs 006C                ___fladd@aexp 006D  
              ___fladd@bexp 006E  
