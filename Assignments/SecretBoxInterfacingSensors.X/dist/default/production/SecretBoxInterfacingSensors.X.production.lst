

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 16 11:53:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text5,global,reloc=4,class=CODE,space=0,delta=1
    16                           	psect	ivt0x3008,global,reloc=2,class=CODE,space=0,delta=1,noexec,keep,optim=
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 13/12/2024 GMT
    23                           ; 
    24                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F47K42 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   003FE0                     bsr             equ	16352
    57   003FE9                     fsr0            equ	16361
    58   003FEA                     fsr0h           equ	16362
    59   003FE9                     fsr0l           equ	16361
    60   003FE1                     fsr1            equ	16353
    61   003FE2                     fsr1h           equ	16354
    62   003FE1                     fsr1l           equ	16353
    63   003FD9                     fsr2            equ	16345
    64   003FDA                     fsr2h           equ	16346
    65   003FD9                     fsr2l           equ	16345
    66   003FEF                     indf0           equ	16367
    67   003FE7                     indf1           equ	16359
    68   003FDF                     indf2           equ	16351
    69   003FD2                     intcon          equ	16338
    70   0039E5                     nvmcon          equ	14821
    71   003FF9                     pcl             equ	16377
    72   003FFA                     pclath          equ	16378
    73   003FFB                     pclatu          equ	16379
    74   003FEB                     plusw0          equ	16363
    75   003FE3                     plusw1          equ	16355
    76   003FDB                     plusw2          equ	16347
    77   003FED                     postdec0        equ	16365
    78   003FE5                     postdec1        equ	16357
    79   003FDD                     postdec2        equ	16349
    80   003FEE                     postinc0        equ	16366
    81   003FE6                     postinc1        equ	16358
    82   003FDE                     postinc2        equ	16350
    83   003FEC                     preinc0         equ	16364
    84   003FE4                     preinc1         equ	16356
    85   003FDC                     preinc2         equ	16348
    86   003FF3                     prod            equ	16371
    87   003FF4                     prodh           equ	16372
    88   003FF3                     prodl           equ	16371
    89   003FD8                     status          equ	16344
    90   003FF5                     tablat          equ	16373
    91   003FF6                     tblptr          equ	16374
    92   003FF7                     tblptrh         equ	16375
    93   003FF6                     tblptrl         equ	16374
    94   003FF8                     tblptru         equ	16376
    95   003FFD                     tosl            equ	16381
    96   003FE8                     wreg            equ	16360
    97   003880                     STATUS_CSHAD    equ	14464	;# 
    98   003881                     WREG_CSHAD      equ	14465	;# 
    99   003882                     BSR_CSHAD       equ	14466	;# 
   100   003883                     SHADCON         equ	14467	;# 
   101   003884                     STATUS_SHAD     equ	14468	;# 
   102   003885                     WREG_SHAD       equ	14469	;# 
   103   003886                     BSR_SHAD        equ	14470	;# 
   104   003887                     PCLATH_SHAD     equ	14471	;# 
   105   003888                     PCLATU_SHAD     equ	14472	;# 
   106   003889                     FSR0SH          equ	14473	;# 
   107   003889                     FSR0L_SHAD      equ	14473	;# 
   108   00388A                     FSR0H_SHAD      equ	14474	;# 
   109   00388B                     FSR1SH          equ	14475	;# 
   110   00388B                     FSR1L_SHAD      equ	14475	;# 
   111   00388C                     FSR1H_SHAD      equ	14476	;# 
   112   00388D                     FSR2SH          equ	14477	;# 
   113   00388D                     FSR2L_SHAD      equ	14477	;# 
   114   00388E                     FSR2H_SHAD      equ	14478	;# 
   115   00388F                     PRODSH          equ	14479	;# 
   116   00388F                     PRODL_SHAD      equ	14479	;# 
   117   003890                     PRODH_SHAD      equ	14480	;# 
   118   00389D                     IVTADL          equ	14493	;# 
   119   00389E                     IVTADH          equ	14494	;# 
   120   00389F                     IVTADU          equ	14495	;# 
   121   00395B                     WDTCON0         equ	14683	;# 
   122   00395C                     WDTCON1         equ	14684	;# 
   123   00395D                     WDTPSL          equ	14685	;# 
   124   00395E                     WDTPSH          equ	14686	;# 
   125   00395F                     WDTTMR          equ	14687	;# 
   126   003960                     CRCDATA         equ	14688	;# 
   127   003960                     CRCDATL         equ	14688	;# 
   128   003961                     CRCDATH         equ	14689	;# 
   129   003962                     CRCACC          equ	14690	;# 
   130   003962                     CRCACCL         equ	14690	;# 
   131   003963                     CRCACCH         equ	14691	;# 
   132   003964                     CRCSHFT         equ	14692	;# 
   133   003964                     CRCSHIFTL       equ	14692	;# 
   134   003965                     CRCSHIFTH       equ	14693	;# 
   135   003966                     CRCXOR          equ	14694	;# 
   136   003966                     CRCXORL         equ	14694	;# 
   137   003967                     CRCXORH         equ	14695	;# 
   138   003968                     CRCCON0         equ	14696	;# 
   139   003969                     CRCCON1         equ	14697	;# 
   140   003976                     SCANLADR        equ	14710	;# 
   141   003976                     SCANLADRL       equ	14710	;# 
   142   003977                     SCANLADRH       equ	14711	;# 
   143   003978                     SCANLADRU       equ	14712	;# 
   144   003979                     SCANHADR        equ	14713	;# 
   145   003979                     SCANHADRL       equ	14713	;# 
   146   00397A                     SCANHADRH       equ	14714	;# 
   147   00397B                     SCANHADRU       equ	14715	;# 
   148   00397C                     SCANCON0        equ	14716	;# 
   149   00397D                     SCANTRIG        equ	14717	;# 
   150   003980                     IPR0            equ	14720	;# 
   151   003981                     IPR1            equ	14721	;# 
   152   003982                     IPR2            equ	14722	;# 
   153   003983                     IPR3            equ	14723	;# 
   154   003984                     IPR4            equ	14724	;# 
   155   003985                     IPR5            equ	14725	;# 
   156   003986                     IPR6            equ	14726	;# 
   157   003987                     IPR7            equ	14727	;# 
   158   003988                     IPR8            equ	14728	;# 
   159   003989                     IPR9            equ	14729	;# 
   160   00398A                     IPR10           equ	14730	;# 
   161   003990                     PIE0            equ	14736	;# 
   162   003991                     PIE1            equ	14737	;# 
   163   003992                     PIE2            equ	14738	;# 
   164   003993                     PIE3            equ	14739	;# 
   165   003994                     PIE4            equ	14740	;# 
   166   003995                     PIE5            equ	14741	;# 
   167   003996                     PIE6            equ	14742	;# 
   168   003997                     PIE7            equ	14743	;# 
   169   003998                     PIE8            equ	14744	;# 
   170   003999                     PIE9            equ	14745	;# 
   171   00399A                     PIE10           equ	14746	;# 
   172   0039A0                     PIR0            equ	14752	;# 
   173   0039A1                     PIR1            equ	14753	;# 
   174   0039A2                     PIR2            equ	14754	;# 
   175   0039A3                     PIR3            equ	14755	;# 
   176   0039A4                     PIR4            equ	14756	;# 
   177   0039A5                     PIR5            equ	14757	;# 
   178   0039A6                     PIR6            equ	14758	;# 
   179   0039A7                     PIR7            equ	14759	;# 
   180   0039A8                     PIR8            equ	14760	;# 
   181   0039A9                     PIR9            equ	14761	;# 
   182   0039AA                     PIR10           equ	14762	;# 
   183   0039C0                     PMD0            equ	14784	;# 
   184   0039C1                     PMD1            equ	14785	;# 
   185   0039C2                     PMD2            equ	14786	;# 
   186   0039C3                     PMD3            equ	14787	;# 
   187   0039C4                     PMD4            equ	14788	;# 
   188   0039C5                     PMD5            equ	14789	;# 
   189   0039C6                     PMD6            equ	14790	;# 
   190   0039C7                     PMD7            equ	14791	;# 
   191   0039D0                     BORCON          equ	14800	;# 
   192   0039D1                     VREGCON         equ	14801	;# 
   193   0039D8                     CPUDOZE         equ	14808	;# 
   194   0039D9                     OSCCON1         equ	14809	;# 
   195   0039DA                     OSCCON2         equ	14810	;# 
   196   0039DB                     OSCCON3         equ	14811	;# 
   197   0039DC                     OSCSTAT         equ	14812	;# 
   198   0039DC                     OSCSTAT1        equ	14812	;# 
   199   0039DD                     OSCEN           equ	14813	;# 
   200   0039DE                     OSCTUNE         equ	14814	;# 
   201   0039DF                     OSCFRQ          equ	14815	;# 
   202   0039E0                     NVMADRL         equ	14816	;# 
   203   0039E1                     NVMADRH         equ	14817	;# 
   204   0039E3                     NVMDAT          equ	14819	;# 
   205   0039E5                     NVMCON1         equ	14821	;# 
   206   0039E6                     NVMCON2         equ	14822	;# 
   207   0039EF                     PRLOCK          equ	14831	;# 
   208   0039F1                     ISRPR           equ	14833	;# 
   209   0039F2                     MAINPR          equ	14834	;# 
   210   0039F3                     DMA1PR          equ	14835	;# 
   211   0039F4                     DMA2PR          equ	14836	;# 
   212   0039F7                     SCANPR          equ	14839	;# 
   213   003A00                     RA0PPS          equ	14848	;# 
   214   003A01                     RA1PPS          equ	14849	;# 
   215   003A02                     RA2PPS          equ	14850	;# 
   216   003A03                     RA3PPS          equ	14851	;# 
   217   003A04                     RA4PPS          equ	14852	;# 
   218   003A05                     RA5PPS          equ	14853	;# 
   219   003A06                     RA6PPS          equ	14854	;# 
   220   003A07                     RA7PPS          equ	14855	;# 
   221   003A08                     RB0PPS          equ	14856	;# 
   222   003A09                     RB1PPS          equ	14857	;# 
   223   003A0A                     RB2PPS          equ	14858	;# 
   224   003A0B                     RB3PPS          equ	14859	;# 
   225   003A0C                     RB4PPS          equ	14860	;# 
   226   003A0D                     RB5PPS          equ	14861	;# 
   227   003A0E                     RB6PPS          equ	14862	;# 
   228   003A0F                     RB7PPS          equ	14863	;# 
   229   003A10                     RC0PPS          equ	14864	;# 
   230   003A11                     RC1PPS          equ	14865	;# 
   231   003A12                     RC2PPS          equ	14866	;# 
   232   003A13                     RC3PPS          equ	14867	;# 
   233   003A14                     RC4PPS          equ	14868	;# 
   234   003A15                     RC5PPS          equ	14869	;# 
   235   003A16                     RC6PPS          equ	14870	;# 
   236   003A17                     RC7PPS          equ	14871	;# 
   237   003A18                     RD0PPS          equ	14872	;# 
   238   003A19                     RD1PPS          equ	14873	;# 
   239   003A1A                     RD2PPS          equ	14874	;# 
   240   003A1B                     RD3PPS          equ	14875	;# 
   241   003A1C                     RD4PPS          equ	14876	;# 
   242   003A1D                     RD5PPS          equ	14877	;# 
   243   003A1E                     RD6PPS          equ	14878	;# 
   244   003A1F                     RD7PPS          equ	14879	;# 
   245   003A20                     RE0PPS          equ	14880	;# 
   246   003A21                     RE1PPS          equ	14881	;# 
   247   003A22                     RE2PPS          equ	14882	;# 
   248   003A40                     ANSELA          equ	14912	;# 
   249   003A41                     WPUA            equ	14913	;# 
   250   003A42                     ODCONA          equ	14914	;# 
   251   003A43                     SLRCONA         equ	14915	;# 
   252   003A44                     INLVLA          equ	14916	;# 
   253   003A45                     IOCAP           equ	14917	;# 
   254   003A46                     IOCAN           equ	14918	;# 
   255   003A47                     IOCAF           equ	14919	;# 
   256   003A50                     ANSELB          equ	14928	;# 
   257   003A51                     WPUB            equ	14929	;# 
   258   003A52                     ODCONB          equ	14930	;# 
   259   003A53                     SLRCONB         equ	14931	;# 
   260   003A54                     INLVLB          equ	14932	;# 
   261   003A55                     IOCBP           equ	14933	;# 
   262   003A56                     IOCBN           equ	14934	;# 
   263   003A57                     IOCBF           equ	14935	;# 
   264   003A5A                     RB1I2C          equ	14938	;# 
   265   003A5B                     RB2I2C          equ	14939	;# 
   266   003A60                     ANSELC          equ	14944	;# 
   267   003A61                     WPUC            equ	14945	;# 
   268   003A62                     ODCONC          equ	14946	;# 
   269   003A63                     SLRCONC         equ	14947	;# 
   270   003A64                     INLVLC          equ	14948	;# 
   271   003A65                     IOCCP           equ	14949	;# 
   272   003A66                     IOCCN           equ	14950	;# 
   273   003A67                     IOCCF           equ	14951	;# 
   274   003A6A                     RC3I2C          equ	14954	;# 
   275   003A6B                     RC4I2C          equ	14955	;# 
   276   003A70                     ANSELD          equ	14960	;# 
   277   003A71                     WPUD            equ	14961	;# 
   278   003A72                     ODCOND          equ	14962	;# 
   279   003A73                     SLRCOND         equ	14963	;# 
   280   003A74                     INLVLD          equ	14964	;# 
   281   003A7A                     RD0I2C          equ	14970	;# 
   282   003A7B                     RD1I2C          equ	14971	;# 
   283   003A80                     ANSELE          equ	14976	;# 
   284   003A81                     WPUE            equ	14977	;# 
   285   003A82                     ODCONE          equ	14978	;# 
   286   003A83                     SLRCONE         equ	14979	;# 
   287   003A84                     INLVLE          equ	14980	;# 
   288   003A85                     IOCEP           equ	14981	;# 
   289   003A86                     IOCEN           equ	14982	;# 
   290   003A87                     IOCEF           equ	14983	;# 
   291   003ABF                     PPSLOCK         equ	15039	;# 
   292   003AC0                     INT0PPS         equ	15040	;# 
   293   003AC1                     INT1PPS         equ	15041	;# 
   294   003AC2                     INT2PPS         equ	15042	;# 
   295   003AC3                     T0CKIPPS        equ	15043	;# 
   296   003AC4                     T1CKIPPS        equ	15044	;# 
   297   003AC5                     T1GPPS          equ	15045	;# 
   298   003AC6                     T3CKIPPS        equ	15046	;# 
   299   003AC7                     T3GPPS          equ	15047	;# 
   300   003AC8                     T5CKIPPS        equ	15048	;# 
   301   003AC9                     T5GPPS          equ	15049	;# 
   302   003ACA                     T2INPPS         equ	15050	;# 
   303   003ACB                     T4INPPS         equ	15051	;# 
   304   003ACC                     T6INPPS         equ	15052	;# 
   305   003ACD                     CCP1PPS         equ	15053	;# 
   306   003ACE                     CCP2PPS         equ	15054	;# 
   307   003ACF                     CCP3PPS         equ	15055	;# 
   308   003AD0                     CCP4PPS         equ	15056	;# 
   309   003AD1                     SMT1WINPPS      equ	15057	;# 
   310   003AD2                     SMT1SIGPPS      equ	15058	;# 
   311   003AD3                     CWG1INPPS       equ	15059	;# 
   312   003AD4                     CWG2INPPS       equ	15060	;# 
   313   003AD5                     CWG3INPPS       equ	15061	;# 
   314   003AD6                     MD1CARLPPS      equ	15062	;# 
   315   003AD7                     MD1CARHPPS      equ	15063	;# 
   316   003AD8                     MD1SRCPPS       equ	15064	;# 
   317   003AD9                     CLCIN0PPS       equ	15065	;# 
   318   003ADA                     CLCIN1PPS       equ	15066	;# 
   319   003ADB                     CLCIN2PPS       equ	15067	;# 
   320   003ADC                     CLCIN3PPS       equ	15068	;# 
   321   003ADD                     ADACTPPS        equ	15069	;# 
   322   003ADE                     SPI1SCKPPS      equ	15070	;# 
   323   003ADF                     SPI1SDIPPS      equ	15071	;# 
   324   003AE0                     SPI1SSPPS       equ	15072	;# 
   325   003AE1                     I2C1SCLPPS      equ	15073	;# 
   326   003AE2                     I2C1SDAPPS      equ	15074	;# 
   327   003AE3                     I2C2SCLPPS      equ	15075	;# 
   328   003AE4                     I2C2SDAPPS      equ	15076	;# 
   329   003AE5                     U1RXPPS         equ	15077	;# 
   330   003AE6                     U1CTSPPS        equ	15078	;# 
   331   003AE8                     U2RXPPS         equ	15080	;# 
   332   003AE9                     U2CTSPPS        equ	15081	;# 
   333   003BC9                     DMA2BUF         equ	15305	;# 
   334   003BCA                     DMA2DCNT        equ	15306	;# 
   335   003BCA                     DMA2DCNTL       equ	15306	;# 
   336   003BCB                     DMA2DCNTH       equ	15307	;# 
   337   003BCC                     DMA2DPTR        equ	15308	;# 
   338   003BCC                     DMA2DPTRL       equ	15308	;# 
   339   003BCD                     DMA2DPTRH       equ	15309	;# 
   340   003BCE                     DMA2DSZ         equ	15310	;# 
   341   003BCE                     DMA2DSZL        equ	15310	;# 
   342   003BCF                     DMA2DSZH        equ	15311	;# 
   343   003BD0                     DMA2DSA         equ	15312	;# 
   344   003BD0                     DMA2DSAL        equ	15312	;# 
   345   003BD1                     DMA2DSAH        equ	15313	;# 
   346   003BD2                     DMA2SCNT        equ	15314	;# 
   347   003BD2                     DMA2SCNTL       equ	15314	;# 
   348   003BD3                     DMA2SCNTH       equ	15315	;# 
   349   003BD4                     DMA2SPTR        equ	15316	;# 
   350   003BD4                     DMA2SPTRL       equ	15316	;# 
   351   003BD5                     DMA2SPTRH       equ	15317	;# 
   352   003BD6                     DMA2SPTRU       equ	15318	;# 
   353   003BD7                     DMA2SSZ         equ	15319	;# 
   354   003BD7                     DMA2SSZL        equ	15319	;# 
   355   003BD8                     DMA2SSZH        equ	15320	;# 
   356   003BD9                     DMA2SSA         equ	15321	;# 
   357   003BD9                     DMA2SSAL        equ	15321	;# 
   358   003BDA                     DMA2SSAH        equ	15322	;# 
   359   003BDB                     DMA2SSAU        equ	15323	;# 
   360   003BDC                     DMA2CON0        equ	15324	;# 
   361   003BDD                     DMA2CON1        equ	15325	;# 
   362   003BDE                     DMA2AIRQ        equ	15326	;# 
   363   003BDF                     DMA2SIRQ        equ	15327	;# 
   364   003BE9                     DMA1BUF         equ	15337	;# 
   365   003BEA                     DMA1DCNT        equ	15338	;# 
   366   003BEA                     DMA1DCNTL       equ	15338	;# 
   367   003BEB                     DMA1DCNTH       equ	15339	;# 
   368   003BEC                     DMA1DPTR        equ	15340	;# 
   369   003BEC                     DMA1DPTRL       equ	15340	;# 
   370   003BED                     DMA1DPTRH       equ	15341	;# 
   371   003BEE                     DMA1DSZ         equ	15342	;# 
   372   003BEE                     DMA1DSZL        equ	15342	;# 
   373   003BEF                     DMA1DSZH        equ	15343	;# 
   374   003BF0                     DMA1DSA         equ	15344	;# 
   375   003BF0                     DMA1DSAL        equ	15344	;# 
   376   003BF1                     DMA1DSAH        equ	15345	;# 
   377   003BF2                     DMA1SCNT        equ	15346	;# 
   378   003BF2                     DMA1SCNTL       equ	15346	;# 
   379   003BF3                     DMA1SCNTH       equ	15347	;# 
   380   003BF4                     DMA1SPTR        equ	15348	;# 
   381   003BF4                     DMA1SPTRL       equ	15348	;# 
   382   003BF5                     DMA1SPTRH       equ	15349	;# 
   383   003BF6                     DMA1SPTRU       equ	15350	;# 
   384   003BF7                     DMA1SSZ         equ	15351	;# 
   385   003BF7                     DMA1SSZL        equ	15351	;# 
   386   003BF8                     DMA1SSZH        equ	15352	;# 
   387   003BF9                     DMA1SSA         equ	15353	;# 
   388   003BF9                     DMA1SSAL        equ	15353	;# 
   389   003BFA                     DMA1SSAH        equ	15354	;# 
   390   003BFB                     DMA1SSAU        equ	15355	;# 
   391   003BFC                     DMA1CON0        equ	15356	;# 
   392   003BFD                     DMA1CON1        equ	15357	;# 
   393   003BFE                     DMA1AIRQ        equ	15358	;# 
   394   003BFF                     DMA1SIRQ        equ	15359	;# 
   395   003C56                     CLC4CON         equ	15446	;# 
   396   003C57                     CLC4POL         equ	15447	;# 
   397   003C58                     CLC4SEL0        equ	15448	;# 
   398   003C59                     CLC4SEL1        equ	15449	;# 
   399   003C5A                     CLC4SEL2        equ	15450	;# 
   400   003C5B                     CLC4SEL3        equ	15451	;# 
   401   003C5C                     CLC4GLS0        equ	15452	;# 
   402   003C5D                     CLC4GLS1        equ	15453	;# 
   403   003C5E                     CLC4GLS2        equ	15454	;# 
   404   003C5F                     CLC4GLS3        equ	15455	;# 
   405   003C60                     CLC3CON         equ	15456	;# 
   406   003C61                     CLC3POL         equ	15457	;# 
   407   003C62                     CLC3SEL0        equ	15458	;# 
   408   003C63                     CLC3SEL1        equ	15459	;# 
   409   003C64                     CLC3SEL2        equ	15460	;# 
   410   003C65                     CLC3SEL3        equ	15461	;# 
   411   003C66                     CLC3GLS0        equ	15462	;# 
   412   003C67                     CLC3GLS1        equ	15463	;# 
   413   003C68                     CLC3GLS2        equ	15464	;# 
   414   003C69                     CLC3GLS3        equ	15465	;# 
   415   003C6A                     CLC2CON         equ	15466	;# 
   416   003C6B                     CLC2POL         equ	15467	;# 
   417   003C6C                     CLC2SEL0        equ	15468	;# 
   418   003C6D                     CLC2SEL1        equ	15469	;# 
   419   003C6E                     CLC2SEL2        equ	15470	;# 
   420   003C6F                     CLC2SEL3        equ	15471	;# 
   421   003C70                     CLC2GLS0        equ	15472	;# 
   422   003C71                     CLC2GLS1        equ	15473	;# 
   423   003C72                     CLC2GLS2        equ	15474	;# 
   424   003C73                     CLC2GLS3        equ	15475	;# 
   425   003C74                     CLC1CON         equ	15476	;# 
   426   003C75                     CLC1POL         equ	15477	;# 
   427   003C76                     CLC1SEL0        equ	15478	;# 
   428   003C77                     CLC1SEL1        equ	15479	;# 
   429   003C78                     CLC1SEL2        equ	15480	;# 
   430   003C79                     CLC1SEL3        equ	15481	;# 
   431   003C7A                     CLC1GLS0        equ	15482	;# 
   432   003C7B                     CLC1GLS1        equ	15483	;# 
   433   003C7C                     CLC1GLS2        equ	15484	;# 
   434   003C7D                     CLC1GLS3        equ	15485	;# 
   435   003C7E                     CLCDATA0        equ	15486	;# 
   436   003CE5                     CLKRCON         equ	15589	;# 
   437   003CE6                     CLKRCLK         equ	15590	;# 
   438   003CFA                     MD1CON0         equ	15610	;# 
   439   003CFB                     MD1CON1         equ	15611	;# 
   440   003CFC                     MD1SRC          equ	15612	;# 
   441   003CFD                     MD1CARL         equ	15613	;# 
   442   003CFE                     MD1CARH         equ	15614	;# 
   443   003D10                     SPI1RXB         equ	15632	;# 
   444   003D11                     SPI1TXB         equ	15633	;# 
   445   003D12                     SPI1TCNT        equ	15634	;# 
   446   003D12                     SPI1TCNTL       equ	15634	;# 
   447   003D13                     SPI1TCNTH       equ	15635	;# 
   448   003D14                     SPI1CON0        equ	15636	;# 
   449   003D15                     SPI1CON1        equ	15637	;# 
   450   003D16                     SPI1CON2        equ	15638	;# 
   451   003D17                     SPI1STATUS      equ	15639	;# 
   452   003D18                     SPI1TWIDTH      equ	15640	;# 
   453   003D19                     SPI1BAUD        equ	15641	;# 
   454   003D1A                     SPI1INTF        equ	15642	;# 
   455   003D1B                     SPI1INTE        equ	15643	;# 
   456   003D1C                     SPI1CLK         equ	15644	;# 
   457   003D54                     I2C2RXB         equ	15700	;# 
   458   003D55                     I2C2TXB         equ	15701	;# 
   459   003D56                     I2C2CNT         equ	15702	;# 
   460   003D57                     I2C2ADB0        equ	15703	;# 
   461   003D58                     I2C2ADB1        equ	15704	;# 
   462   003D59                     I2C2ADR0        equ	15705	;# 
   463   003D5A                     I2C2ADR1        equ	15706	;# 
   464   003D5B                     I2C2ADR2        equ	15707	;# 
   465   003D5C                     I2C2ADR3        equ	15708	;# 
   466   003D5D                     I2C2CON0        equ	15709	;# 
   467   003D5E                     I2C2CON1        equ	15710	;# 
   468   003D5F                     I2C2CON2        equ	15711	;# 
   469   003D60                     I2C2ERR         equ	15712	;# 
   470   003D61                     I2C2STAT0       equ	15713	;# 
   471   003D62                     I2C2STAT1       equ	15714	;# 
   472   003D63                     I2C2PIR         equ	15715	;# 
   473   003D64                     I2C2PIE         equ	15716	;# 
   474   003D65                     I2C2CLK         equ	15717	;# 
   475   003D66                     I2C2BTO         equ	15718	;# 
   476   003D6A                     I2C1RXB         equ	15722	;# 
   477   003D6B                     I2C1TXB         equ	15723	;# 
   478   003D6C                     I2C1CNT         equ	15724	;# 
   479   003D6D                     I2C1ADB0        equ	15725	;# 
   480   003D6E                     I2C1ADB1        equ	15726	;# 
   481   003D6F                     I2C1ADR0        equ	15727	;# 
   482   003D70                     I2C1ADR1        equ	15728	;# 
   483   003D71                     I2C1ADR2        equ	15729	;# 
   484   003D72                     I2C1ADR3        equ	15730	;# 
   485   003D73                     I2C1CON0        equ	15731	;# 
   486   003D74                     I2C1CON1        equ	15732	;# 
   487   003D75                     I2C1CON2        equ	15733	;# 
   488   003D76                     I2C1ERR         equ	15734	;# 
   489   003D77                     I2C1STAT0       equ	15735	;# 
   490   003D78                     I2C1STAT1       equ	15736	;# 
   491   003D79                     I2C1PIR         equ	15737	;# 
   492   003D7A                     I2C1PIE         equ	15738	;# 
   493   003D7B                     I2C1CLK         equ	15739	;# 
   494   003D7C                     I2C1BTO         equ	15740	;# 
   495   003DD0                     U2RXB           equ	15824	;# 
   496   003DD0                     U2RXBL          equ	15824	;# 
   497   003DD2                     U2TXB           equ	15826	;# 
   498   003DD2                     U2TXBL          equ	15826	;# 
   499   003DD4                     U2P1            equ	15828	;# 
   500   003DD4                     U2P1L           equ	15828	;# 
   501   003DD6                     U2P2            equ	15830	;# 
   502   003DD6                     U2P2L           equ	15830	;# 
   503   003DD8                     U2P3            equ	15832	;# 
   504   003DD8                     U2P3L           equ	15832	;# 
   505   003DDA                     U2CON0          equ	15834	;# 
   506   003DDB                     U2CON1          equ	15835	;# 
   507   003DDC                     U2CON2          equ	15836	;# 
   508   003DDD                     U2BRG           equ	15837	;# 
   509   003DDD                     U2BRGL          equ	15837	;# 
   510   003DDE                     U2BRGH          equ	15838	;# 
   511   003DDF                     U2FIFO          equ	15839	;# 
   512   003DE0                     U2UIR           equ	15840	;# 
   513   003DE1                     U2ERRIR         equ	15841	;# 
   514   003DE2                     U2ERRIE         equ	15842	;# 
   515   003DE8                     U1RXB           equ	15848	;# 
   516   003DE8                     U1RXBL          equ	15848	;# 
   517   003DE9                     U1RXCHK         equ	15849	;# 
   518   003DEA                     U1TXB           equ	15850	;# 
   519   003DEA                     U1TXBL          equ	15850	;# 
   520   003DEB                     U1TXCHK         equ	15851	;# 
   521   003DEC                     U1P1            equ	15852	;# 
   522   003DEC                     U1P1L           equ	15852	;# 
   523   003DED                     U1P1H           equ	15853	;# 
   524   003DEE                     U1P2            equ	15854	;# 
   525   003DEE                     U1P2L           equ	15854	;# 
   526   003DEF                     U1P2H           equ	15855	;# 
   527   003DF0                     U1P3            equ	15856	;# 
   528   003DF0                     U1P3L           equ	15856	;# 
   529   003DF1                     U1P3H           equ	15857	;# 
   530   003DF2                     U1CON0          equ	15858	;# 
   531   003DF3                     U1CON1          equ	15859	;# 
   532   003DF4                     U1CON2          equ	15860	;# 
   533   003DF5                     U1BRG           equ	15861	;# 
   534   003DF5                     U1BRGL          equ	15861	;# 
   535   003DF6                     U1BRGH          equ	15862	;# 
   536   003DF7                     U1FIFO          equ	15863	;# 
   537   003DF8                     U1UIR           equ	15864	;# 
   538   003DF9                     U1ERRIR         equ	15865	;# 
   539   003DFA                     U1ERRIE         equ	15866	;# 
   540   003E9C                     DAC1CON1        equ	16028	;# 
   541   003E9E                     DAC1CON0        equ	16030	;# 
   542   003EB8                     CM2CON0         equ	16056	;# 
   543   003EB9                     CM2CON1         equ	16057	;# 
   544   003EBA                     CM2NCH          equ	16058	;# 
   545   003EBB                     CM2PCH          equ	16059	;# 
   546   003EBC                     CM1CON0         equ	16060	;# 
   547   003EBD                     CM1CON1         equ	16061	;# 
   548   003EBE                     CM1NCH          equ	16062	;# 
   549   003EBF                     CM1PCH          equ	16063	;# 
   550   003EC0                     CMOUT           equ	16064	;# 
   551   003EC1                     FVRCON          equ	16065	;# 
   552   003EC3                     ZCDCON          equ	16067	;# 
   553   003EC9                     HLVDCON0        equ	16073	;# 
   554   003ECA                     HLVDCON1        equ	16074	;# 
   555   003ED7                     ADCP            equ	16087	;# 
   556   003EDE                     ADLTH           equ	16094	;# 
   557   003EDE                     ADLTHL          equ	16094	;# 
   558   003EDF                     ADLTHH          equ	16095	;# 
   559   003EE0                     ADUTH           equ	16096	;# 
   560   003EE0                     ADUTHL          equ	16096	;# 
   561   003EE1                     ADUTHH          equ	16097	;# 
   562   003EE2                     ADERR           equ	16098	;# 
   563   003EE2                     ADERRL          equ	16098	;# 
   564   003EE3                     ADERRH          equ	16099	;# 
   565   003EE4                     ADSTPT          equ	16100	;# 
   566   003EE4                     ADSTPTL         equ	16100	;# 
   567   003EE5                     ADSTPTH         equ	16101	;# 
   568   003EE6                     ADFLTR          equ	16102	;# 
   569   003EE6                     ADFLTRL         equ	16102	;# 
   570   003EE7                     ADFLTRH         equ	16103	;# 
   571   003EE8                     ADACC           equ	16104	;# 
   572   003EE8                     ADACCL          equ	16104	;# 
   573   003EE9                     ADACCH          equ	16105	;# 
   574   003EEA                     ADACCU          equ	16106	;# 
   575   003EEB                     ADCNT           equ	16107	;# 
   576   003EEC                     ADRPT           equ	16108	;# 
   577   003EED                     ADPREV          equ	16109	;# 
   578   003EED                     ADPREVL         equ	16109	;# 
   579   003EEE                     ADPREVH         equ	16110	;# 
   580   003EEF                     ADRES           equ	16111	;# 
   581   003EEF                     ADRESL          equ	16111	;# 
   582   003EF0                     ADRESH          equ	16112	;# 
   583   003EF1                     ADPCH           equ	16113	;# 
   584   003EF3                     ADACQ           equ	16115	;# 
   585   003EF3                     ADACQL          equ	16115	;# 
   586   003EF4                     ADACQH          equ	16116	;# 
   587   003EF5                     ADCAP           equ	16117	;# 
   588   003EF6                     ADPRE           equ	16118	;# 
   589   003EF6                     ADPREL          equ	16118	;# 
   590   003EF7                     ADPREH          equ	16119	;# 
   591   003EF8                     ADCON0          equ	16120	;# 
   592   003EF9                     ADCON1          equ	16121	;# 
   593   003EFA                     ADCON2          equ	16122	;# 
   594   003EFB                     ADCON3          equ	16123	;# 
   595   003EFC                     ADSTAT          equ	16124	;# 
   596   003EFD                     ADREF           equ	16125	;# 
   597   003EFE                     ADACT           equ	16126	;# 
   598   003EFF                     ADCLK           equ	16127	;# 
   599   003F12                     SMT1TMR         equ	16146	;# 
   600   003F12                     SMT1TMRL        equ	16146	;# 
   601   003F13                     SMT1TMRH        equ	16147	;# 
   602   003F14                     SMT1TMRU        equ	16148	;# 
   603   003F15                     SMT1CPR         equ	16149	;# 
   604   003F15                     SMT1CPRL        equ	16149	;# 
   605   003F16                     SMT1CPRH        equ	16150	;# 
   606   003F17                     SMT1CPRU        equ	16151	;# 
   607   003F18                     SMT1CPW         equ	16152	;# 
   608   003F18                     SMT1CPWL        equ	16152	;# 
   609   003F19                     SMT1CPWH        equ	16153	;# 
   610   003F1A                     SMT1CPWU        equ	16154	;# 
   611   003F1B                     SMT1PR          equ	16155	;# 
   612   003F1B                     SMT1PRL         equ	16155	;# 
   613   003F1C                     SMT1PRH         equ	16156	;# 
   614   003F1D                     SMT1PRU         equ	16157	;# 
   615   003F1E                     SMT1CON0        equ	16158	;# 
   616   003F1F                     SMT1CON1        equ	16159	;# 
   617   003F20                     SMT1STAT        equ	16160	;# 
   618   003F21                     SMT1CLK         equ	16161	;# 
   619   003F22                     SMT1SIG         equ	16162	;# 
   620   003F23                     SMT1WIN         equ	16163	;# 
   621   003F38                     NCO1ACC         equ	16184	;# 
   622   003F38                     NCO1ACCL        equ	16184	;# 
   623   003F39                     NCO1ACCH        equ	16185	;# 
   624   003F3A                     NCO1ACCU        equ	16186	;# 
   625   003F3B                     NCO1INC         equ	16187	;# 
   626   003F3B                     NCO1INCL        equ	16187	;# 
   627   003F3C                     NCO1INCH        equ	16188	;# 
   628   003F3D                     NCO1INCU        equ	16189	;# 
   629   003F3E                     NCO1CON         equ	16190	;# 
   630   003F3F                     NCO1CLK         equ	16191	;# 
   631   003F40                     CWG3CLK         equ	16192	;# 
   632   003F40                     CWG3CLKCON      equ	16192	;# 
   633   003F41                     CWG3ISM         equ	16193	;# 
   634   003F41                     CWG3DAT         equ	16193	;# 
   635   003F42                     CWG3DBR         equ	16194	;# 
   636   003F43                     CWG3DBF         equ	16195	;# 
   637   003F44                     CWG3CON0        equ	16196	;# 
   638   003F45                     CWG3CON1        equ	16197	;# 
   639   003F46                     CWG3AS0         equ	16198	;# 
   640   003F47                     CWG3AS1         equ	16199	;# 
   641   003F48                     CWG3STR         equ	16200	;# 
   642   003F49                     CWG2CLK         equ	16201	;# 
   643   003F49                     CWG2CLKCON      equ	16201	;# 
   644   003F4A                     CWG2ISM         equ	16202	;# 
   645   003F4A                     CWG2DAT         equ	16202	;# 
   646   003F4B                     CWG2DBR         equ	16203	;# 
   647   003F4C                     CWG2DBF         equ	16204	;# 
   648   003F4D                     CWG2CON0        equ	16205	;# 
   649   003F4E                     CWG2CON1        equ	16206	;# 
   650   003F4F                     CWG2AS0         equ	16207	;# 
   651   003F50                     CWG2AS1         equ	16208	;# 
   652   003F51                     CWG2STR         equ	16209	;# 
   653   003F52                     CWG1CLK         equ	16210	;# 
   654   003F52                     CWG1CLKCON      equ	16210	;# 
   655   003F53                     CWG1ISM         equ	16211	;# 
   656   003F53                     CWG1DAT         equ	16211	;# 
   657   003F54                     CWG1DBR         equ	16212	;# 
   658   003F55                     CWG1DBF         equ	16213	;# 
   659   003F56                     CWG1CON0        equ	16214	;# 
   660   003F57                     CWG1CON1        equ	16215	;# 
   661   003F58                     CWG1AS0         equ	16216	;# 
   662   003F59                     CWG1AS1         equ	16217	;# 
   663   003F5A                     CWG1STR         equ	16218	;# 
   664   003F5E                     CCPTMRS0        equ	16222	;# 
   665   003F5F                     CCPTMRS1        equ	16223	;# 
   666   003F60                     PWM8DC          equ	16224	;# 
   667   003F60                     PWM8DCL         equ	16224	;# 
   668   003F61                     PWM8DCH         equ	16225	;# 
   669   003F62                     PWM8CON         equ	16226	;# 
   670   003F64                     PWM7DC          equ	16228	;# 
   671   003F64                     PWM7DCL         equ	16228	;# 
   672   003F65                     PWM7DCH         equ	16229	;# 
   673   003F66                     PWM7CON         equ	16230	;# 
   674   003F68                     PWM6DC          equ	16232	;# 
   675   003F68                     PWM6DCL         equ	16232	;# 
   676   003F69                     PWM6DCH         equ	16233	;# 
   677   003F6A                     PWM6CON         equ	16234	;# 
   678   003F6C                     PWM5DC          equ	16236	;# 
   679   003F6C                     PWM5DCL         equ	16236	;# 
   680   003F6D                     PWM5DCH         equ	16237	;# 
   681   003F6E                     PWM5CON         equ	16238	;# 
   682   003F70                     CCPR4           equ	16240	;# 
   683   003F70                     CCPR4L          equ	16240	;# 
   684   003F71                     CCPR4H          equ	16241	;# 
   685   003F72                     CCP4CON         equ	16242	;# 
   686   003F73                     CCP4CAP         equ	16243	;# 
   687   003F74                     CCPR3           equ	16244	;# 
   688   003F74                     CCPR3L          equ	16244	;# 
   689   003F75                     CCPR3H          equ	16245	;# 
   690   003F76                     CCP3CON         equ	16246	;# 
   691   003F77                     CCP3CAP         equ	16247	;# 
   692   003F78                     CCPR2           equ	16248	;# 
   693   003F78                     CCPR2L          equ	16248	;# 
   694   003F79                     CCPR2H          equ	16249	;# 
   695   003F7A                     CCP2CON         equ	16250	;# 
   696   003F7B                     CCP2CAP         equ	16251	;# 
   697   003F7C                     CCPR1           equ	16252	;# 
   698   003F7C                     CCPR1L          equ	16252	;# 
   699   003F7D                     CCPR1H          equ	16253	;# 
   700   003F7E                     CCP1CON         equ	16254	;# 
   701   003F7F                     CCP1CAP         equ	16255	;# 
   702   003F92                     T6TMR           equ	16274	;# 
   703   003F92                     TMR6            equ	16274	;# 
   704   003F93                     T6PR            equ	16275	;# 
   705   003F93                     PR6             equ	16275	;# 
   706   003F94                     T6CON           equ	16276	;# 
   707   003F95                     T6HLT           equ	16277	;# 
   708   003F96                     T6CLKCON        equ	16278	;# 
   709   003F96                     T6CLK           equ	16278	;# 
   710   003F97                     T6RST           equ	16279	;# 
   711   003F98                     TMR5            equ	16280	;# 
   712   003F98                     TMR5L           equ	16280	;# 
   713   003F99                     TMR5H           equ	16281	;# 
   714   003F9A                     T5CON           equ	16282	;# 
   715   003F9A                     TMR5CON         equ	16282	;# 
   716   003F9B                     T5GCON          equ	16283	;# 
   717   003F9B                     TMR5GCON        equ	16283	;# 
   718   003F9C                     T5GATE          equ	16284	;# 
   719   003F9C                     TMR5GATE        equ	16284	;# 
   720   003F9D                     T5CLK           equ	16285	;# 
   721   003F9D                     TMR5CLK         equ	16285	;# 
   722   003F9D                     PR5             equ	16285	;# 
   723   003F9E                     T4TMR           equ	16286	;# 
   724   003F9E                     TMR4            equ	16286	;# 
   725   003F9F                     T4PR            equ	16287	;# 
   726   003F9F                     PR4             equ	16287	;# 
   727   003FA0                     T4CON           equ	16288	;# 
   728   003FA1                     T4HLT           equ	16289	;# 
   729   003FA2                     T4CLKCON        equ	16290	;# 
   730   003FA2                     T4CLK           equ	16290	;# 
   731   003FA3                     T4RST           equ	16291	;# 
   732   003FA4                     TMR3            equ	16292	;# 
   733   003FA4                     TMR3L           equ	16292	;# 
   734   003FA5                     TMR3H           equ	16293	;# 
   735   003FA6                     T3CON           equ	16294	;# 
   736   003FA6                     TMR3CON         equ	16294	;# 
   737   003FA7                     T3GCON          equ	16295	;# 
   738   003FA7                     TMR3GCON        equ	16295	;# 
   739   003FA8                     T3GATE          equ	16296	;# 
   740   003FA8                     TMR3GATE        equ	16296	;# 
   741   003FA9                     T3CLK           equ	16297	;# 
   742   003FA9                     TMR3CLK         equ	16297	;# 
   743   003FA9                     PR3             equ	16297	;# 
   744   003FAA                     T2TMR           equ	16298	;# 
   745   003FAA                     TMR2            equ	16298	;# 
   746   003FAB                     T2PR            equ	16299	;# 
   747   003FAB                     PR2             equ	16299	;# 
   748   003FAC                     T2CON           equ	16300	;# 
   749   003FAD                     T2HLT           equ	16301	;# 
   750   003FAE                     T2CLKCON        equ	16302	;# 
   751   003FAE                     T2CLK           equ	16302	;# 
   752   003FAF                     T2RST           equ	16303	;# 
   753   003FB0                     TMR1            equ	16304	;# 
   754   003FB0                     TMR1L           equ	16304	;# 
   755   003FB1                     TMR1H           equ	16305	;# 
   756   003FB2                     T1CON           equ	16306	;# 
   757   003FB2                     TMR1CON         equ	16306	;# 
   758   003FB3                     T1GCON          equ	16307	;# 
   759   003FB3                     TMR1GCON        equ	16307	;# 
   760   003FB4                     T1GATE          equ	16308	;# 
   761   003FB4                     TMR1GATE        equ	16308	;# 
   762   003FB5                     T1CLK           equ	16309	;# 
   763   003FB5                     TMR1CLK         equ	16309	;# 
   764   003FB5                     PR1             equ	16309	;# 
   765   003FB6                     TMR0L           equ	16310	;# 
   766   003FB6                     TMR0            equ	16310	;# 
   767   003FB7                     TMR0H           equ	16311	;# 
   768   003FB7                     PR0             equ	16311	;# 
   769   003FB8                     T0CON0          equ	16312	;# 
   770   003FB9                     T0CON1          equ	16313	;# 
   771   003FBA                     LATA            equ	16314	;# 
   772   003FBB                     LATB            equ	16315	;# 
   773   003FBC                     LATC            equ	16316	;# 
   774   003FBD                     LATD            equ	16317	;# 
   775   003FBE                     LATE            equ	16318	;# 
   776   003FC2                     TRISA           equ	16322	;# 
   777   003FC3                     TRISB           equ	16323	;# 
   778   003FC4                     TRISC           equ	16324	;# 
   779   003FC5                     TRISD           equ	16325	;# 
   780   003FC6                     TRISE           equ	16326	;# 
   781   003FCA                     PORTA           equ	16330	;# 
   782   003FCB                     PORTB           equ	16331	;# 
   783   003FCC                     PORTC           equ	16332	;# 
   784   003FCD                     PORTD           equ	16333	;# 
   785   003FCE                     PORTE           equ	16334	;# 
   786   003FD2                     INTCON0         equ	16338	;# 
   787   003FD3                     INTCON1         equ	16339	;# 
   788   003FD4                     IVTLOCK         equ	16340	;# 
   789   003FD5                     IVTBASE         equ	16341	;# 
   790   003FD5                     IVTBASEL        equ	16341	;# 
   791   003FD6                     IVTBASEH        equ	16342	;# 
   792   003FD7                     IVTBASEU        equ	16343	;# 
   793   003FD8                     STATUS          equ	16344	;# 
   794   003FD9                     FSR2            equ	16345	;# 
   795   003FD9                     FSR2L           equ	16345	;# 
   796   003FDA                     FSR2H           equ	16346	;# 
   797   003FDB                     PLUSW2          equ	16347	;# 
   798   003FDC                     PREINC2         equ	16348	;# 
   799   003FDD                     POSTDEC2        equ	16349	;# 
   800   003FDE                     POSTINC2        equ	16350	;# 
   801   003FDF                     INDF2           equ	16351	;# 
   802   003FE0                     BSR             equ	16352	;# 
   803   003FE1                     FSR1            equ	16353	;# 
   804   003FE1                     FSR1L           equ	16353	;# 
   805   003FE2                     FSR1H           equ	16354	;# 
   806   003FE3                     PLUSW1          equ	16355	;# 
   807   003FE4                     PREINC1         equ	16356	;# 
   808   003FE5                     POSTDEC1        equ	16357	;# 
   809   003FE6                     POSTINC1        equ	16358	;# 
   810   003FE7                     INDF1           equ	16359	;# 
   811   003FE8                     WREG            equ	16360	;# 
   812   003FE9                     FSR0            equ	16361	;# 
   813   003FE9                     FSR0L           equ	16361	;# 
   814   003FEA                     FSR0H           equ	16362	;# 
   815   003FEB                     PLUSW0          equ	16363	;# 
   816   003FEC                     PREINC0         equ	16364	;# 
   817   003FED                     POSTDEC0        equ	16365	;# 
   818   003FEE                     POSTINC0        equ	16366	;# 
   819   003FEF                     INDF0           equ	16367	;# 
   820   003FF0                     PCON0           equ	16368	;# 
   821   003FF1                     PCON1           equ	16369	;# 
   822   003FF3                     PROD            equ	16371	;# 
   823   003FF3                     PRODL           equ	16371	;# 
   824   003FF4                     PRODH           equ	16372	;# 
   825   003FF5                     TABLAT          equ	16373	;# 
   826   003FF6                     TBLPTR          equ	16374	;# 
   827   003FF6                     TBLPTRL         equ	16374	;# 
   828   003FF7                     TBLPTRH         equ	16375	;# 
   829   003FF8                     TBLPTRU         equ	16376	;# 
   830   003FF9                     PCLAT           equ	16377	;# 
   831   003FF9                     PCL             equ	16377	;# 
   832   003FFA                     PCLATH          equ	16378	;# 
   833   003FFB                     PCLATU          equ	16379	;# 
   834   003FFC                     STKPTR          equ	16380	;# 
   835   003FFD                     TOS             equ	16381	;# 
   836   003FFD                     TOSL            equ	16381	;# 
   837   003FFE                     TOSH            equ	16382	;# 
   838   003FFF                     TOSU            equ	16383	;# 
   839                           
   840                           	psect	idataCOMRAM
   841   0033FC                     __pidataCOMRAM:
   842                           	callstack 0
   843                           
   844                           ;initializer for _secretPassword
   845   0033FC  000B               	dw	11
   846   0039A1                     _PIR1bits       set	14753
   847   003991                     _PIE1bits       set	14737
   848   003981                     _IPR1bits       set	14721
   849   003A70                     _ANSELD         set	14960
   850   003A60                     _ANSELC         set	14944
   851   003A51                     _WPUB           set	14929
   852   003A50                     _ANSELB         set	14928
   853   003A41                     _WPUA           set	14913
   854   003A40                     _ANSELA         set	14912
   855   003FCB                     _PORTBbits      set	16331
   856   003FCA                     _PORTAbits      set	16330
   857   003FD5                     _IVTBASEL       set	16341
   858   003FD6                     _IVTBASEH       set	16342
   859   003FD7                     _IVTBASEU       set	16343
   860   003FD2                     _INTCON0bits    set	16338
   861   003FC5                     _TRISD          set	16325
   862   003FBD                     _LATD           set	16317
   863   003FCD                     _PORTD          set	16333
   864   003FC4                     _TRISC          set	16324
   865   003FBC                     _LATC           set	16316
   866   003FCC                     _PORTC          set	16332
   867   003FC3                     _TRISB          set	16323
   868   003FBB                     _LATB           set	16315
   869   003FCB                     _PORTB          set	16331
   870   003FC2                     _TRISA          set	16322
   871   003FBA                     _LATA           set	16314
   872   003FCA                     _PORTA          set	16330
   873                           
   874                           ; #config settings
   875                           
   876                           	psect	cinit
   877   003394                     __pcinit:
   878                           	callstack 0
   879   003394                     start_initialization:
   880                           	callstack 0
   881   003394                     __initialization:
   882                           	callstack 0
   883                           
   884                           ; Initialize objects allocated to COMRAM (2 bytes)
   885                           ; load TBLPTR registers with __pidataCOMRAM
   886   003394  0EFC               	movlw	low __pidataCOMRAM
   887   003396  6EF6               	movwf	tblptrl,c
   888   003398  0E33               	movlw	high __pidataCOMRAM
   889   00339A  6EF7               	movwf	tblptrh,c
   890   00339C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   891   00339E  6EF8               	movwf	tblptru,c
   892   0033A0  0009               	tblrd		*+	;fetch initializer
   893   0033A2  006F FFD4  F00C    	movff	tablat,__pdataCOMRAM
   894   0033A8  0009               	tblrd		*+	;fetch initializer
   895   0033AA  006F FFD4  F00D    	movff	tablat,__pdataCOMRAM+1
   896                           
   897                           ; Clear objects allocated to COMRAM (5 bytes)
   898   0033B0  6A0B               	clrf	(__pbssCOMRAM+4)& (0+255),c
   899   0033B2  6A0A               	clrf	(__pbssCOMRAM+3)& (0+255),c
   900   0033B4  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
   901   0033B6  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
   902   0033B8  6A07               	clrf	__pbssCOMRAM& (0+255),c
   903                           
   904                           ;
   905                           ; Setup IVTBASE
   906                           ;
   907   003FD5                     IVTBASEL        equ	16341
   908   003FD6                     IVTBASEH        equ	16342
   909   003FD7                     IVTBASEU        equ	16343
   910   0033BA  0E08               	movlw	(ivt0x3008_base shr 0)& (0+255)
   911   0033BC  6ED5               	movwf	213,c
   912   0033BE  0E30               	movlw	(ivt0x3008_base shr (0+8))& (0+255)
   913   0033C0  6ED6               	movwf	214,c
   914   0033C2  0E00               	movlw	(ivt0x3008_base shr (0+16))& (0+255)
   915   0033C4  6ED7               	movwf	215,c
   916   0033C6                     end_of_initialization:
   917                           	callstack 0
   918   0033C6                     __end_of__initialization:
   919                           	callstack 0
   920   0033C6  0100               	movlb	0
   921   0033C8  EFF0  F018         	goto	_main	;jump to C main() function
   922                           
   923                           	psect	bssCOMRAM
   924   000007                     __pbssCOMRAM:
   925                           	callstack 0
   926   000007                     _count:
   927                           	callstack 0
   928   000007                     	ds	2
   929   000009                     _password:
   930                           	callstack 0
   931   000009                     	ds	2
   932   00000B                     _correct:
   933                           	callstack 0
   934   00000B                     	ds	1
   935                           
   936                           	psect	dataCOMRAM
   937   00000C                     __pdataCOMRAM:
   938                           	callstack 0
   939   00000C                     _secretPassword:
   940                           	callstack 0
   941   00000C                     	ds	2
   942                           
   943                           	psect	cstackCOMRAM
   944   000001                     __pcstackCOMRAM:
   945                           	callstack 0
   946   000001                     ??_INT0_ISR:
   947                           
   948                           ; 1 bytes @ 0x0
   949   000001                     	ds	2
   950   000003                     ??_passwordInput:
   951   000003                     ??_passwordCheck:
   952                           
   953                           ; 1 bytes @ 0x2
   954   000003                     	ds	2
   955   000005                     ??_main:
   956                           
   957                           ; 1 bytes @ 0x4
   958   000005                     	ds	2
   959                           
   960 ;;
   961 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   962 ;;
   963 ;; *************** function _main *****************
   964 ;; Defined at:
   965 ;;		line 46 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;		None
   968 ;; Auto vars:     Size  Location     Type
   969 ;;		None
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      void 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   983 ;;Total ram usage:        2 bytes
   984 ;; Hardware stack levels required when called: 3
   985 ;; This function calls:
   986 ;;		_initialization
   987 ;;		_passwordCheck
   988 ;;		_passwordInput
   989 ;;		_update7SD
   990 ;; This function is called by:
   991 ;;		Startup code after reset
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           	psect	text0
   996   0031E0                     __ptext0:
   997                           	callstack 0
   998   0031E0                     _main:
   999                           	callstack 28
  1000   0031E0                     l121:
  1001   0031E0                     
  1002                           ;main.c: 49:     {;main.c: 50:     initialization();
  1003   0031E0  EC44  F019         	call	_initialization	;wreg free
  1004   0031E4                     
  1005                           ;main.c: 51:     update7SD();
  1006   0031E4  EC59  F018         	call	_update7SD	;wreg free
  1007                           
  1008                           ;main.c: 52:     while (correct == 0)
  1009   0031E8  EFF8  F018         	goto	l946
  1010   0031EC                     l944:
  1011                           
  1012                           ;main.c: 53:         passwordInput();
  1013   0031EC  ECA0  F019         	call	_passwordInput	;wreg free
  1014   0031F0                     l946:
  1015                           
  1016                           ;main.c: 52:     while (correct == 0)
  1017   0031F0  500B               	movf	_correct^0,w,c
  1018   0031F2  B4D8               	btfsc	status,2,c
  1019   0031F4  EFFE  F018         	goto	u171
  1020   0031F8  EF00  F019         	goto	u170
  1021   0031FC                     u171:
  1022   0031FC  EFF6  F018         	goto	l944
  1023   003200                     u170:
  1024   003200                     
  1025                           ;main.c: 54:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1026   003200  0E02               	movlw	2
  1027   003202  6E06               	movwf	(??_main+1)^0,c
  1028   003204  0E45               	movlw	69
  1029   003206  6E05               	movwf	??_main^0,c
  1030   003208  0EAA               	movlw	170
  1031   00320A                     u197:
  1032   00320A  2EE8               	decfsz	wreg,f,c
  1033   00320C  D7FE               	bra	u197
  1034   00320E  2E05               	decfsz	??_main^0,f,c
  1035   003210  D7FC               	bra	u197
  1036   003212  2E06               	decfsz	(??_main+1)^0,f,c
  1037   003214  D7FA               	bra	u197
  1038   003216                     
  1039                           ;main.c: 55:     password = count * 10;
  1040   003216  0E0A               	movlw	10
  1041   003218  0207               	mulwf	_count^0,c
  1042   00321A  006F FFCC  F005    	movff	prodl,??_main
  1043   003220  006F FFD0  F006    	movff	prodh,??_main+1
  1044   003226  0208               	mulwf	(_count+1)^0,c
  1045   003228  50F3               	movf	prodl,w,c
  1046   00322A  2606               	addwf	(??_main+1)^0,f,c
  1047   00322C  C005  F009         	movff	??_main,_password
  1048   003230  C006  F00A         	movff	??_main+1,_password+1
  1049   003234                     
  1050                           ;main.c: 56:     correct = 0;
  1051   003234  6A0B               	clrf	_correct^0,c
  1052   003236                     
  1053                           ;main.c: 57:     count = 0;
  1054   003236  0E00               	movlw	0
  1055   003238  6E08               	movwf	(_count+1)^0,c
  1056   00323A  0E00               	movlw	0
  1057   00323C  6E07               	movwf	_count^0,c
  1058   00323E                     
  1059                           ;main.c: 58:     update7SD();
  1060   00323E  EC59  F018         	call	_update7SD	;wreg free
  1061                           
  1062                           ;main.c: 59:     while (correct == 0)
  1063   003242  EF25  F019         	goto	l960
  1064   003246                     l958:
  1065                           
  1066                           ;main.c: 60:         passwordInput();
  1067   003246  ECA0  F019         	call	_passwordInput	;wreg free
  1068   00324A                     l960:
  1069                           
  1070                           ;main.c: 59:     while (correct == 0)
  1071   00324A  500B               	movf	_correct^0,w,c
  1072   00324C  B4D8               	btfsc	status,2,c
  1073   00324E  EF2B  F019         	goto	u181
  1074   003252  EF2D  F019         	goto	u180
  1075   003256                     u181:
  1076   003256  EF23  F019         	goto	l958
  1077   00325A                     u180:
  1078   00325A                     
  1079                           ;main.c: 61:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1080   00325A  0E02               	movlw	2
  1081   00325C  6E06               	movwf	(??_main+1)^0,c
  1082   00325E  0E45               	movlw	69
  1083   003260  6E05               	movwf	??_main^0,c
  1084   003262  0EAA               	movlw	170
  1085   003264                     u207:
  1086   003264  2EE8               	decfsz	wreg,f,c
  1087   003266  D7FE               	bra	u207
  1088   003268  2E05               	decfsz	??_main^0,f,c
  1089   00326A  D7FC               	bra	u207
  1090   00326C  2E06               	decfsz	(??_main+1)^0,f,c
  1091   00326E  D7FA               	bra	u207
  1092   003270                     
  1093                           ;main.c: 62:     password = password+count;
  1094   003270  5007               	movf	_count^0,w,c
  1095   003272  2409               	addwf	_password^0,w,c
  1096   003274  6E09               	movwf	_password^0,c
  1097   003276  5008               	movf	(_count+1)^0,w,c
  1098   003278  200A               	addwfc	(_password+1)^0,w,c
  1099   00327A  6E0A               	movwf	(_password+1)^0,c
  1100   00327C                     
  1101                           ;main.c: 63:     passwordCheck();
  1102   00327C  EC74  F019         	call	_passwordCheck	;wreg free
  1103   003280  EFF0  F018         	goto	l121
  1104   003284  EF57  F018         	goto	start
  1105   003288                     __end_of_main:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _passwordInput *****************
  1109 ;; Defined at:
  1110 ;;		line 31 in file "./functions.h"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1126 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 2
  1131 ;; This function calls:
  1132 ;;		_update7SD
  1133 ;; This function is called by:
  1134 ;;		_main
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           
  1138                           	psect	text1
  1139   003340                     __ptext1:
  1140                           	callstack 0
  1141   003340                     _passwordInput:
  1142                           	callstack 28
  1143   003340                     
  1144                           ;./functions.h: 33:     while(correct==0)
  1145   003340  EFC1  F019         	goto	l98
  1146   003344                     l99:
  1147                           
  1148                           ;./functions.h: 34:     {;./functions.h: 35:         if(PORTAbits.RA0==1)
  1149   003344  A0CA               	btfss	202,0,c	;volatile
  1150   003346  EFA7  F019         	goto	u121
  1151   00334A  EFA9  F019         	goto	u120
  1152   00334E                     u121:
  1153   00334E  EFB8  F019         	goto	l908
  1154   003352                     u120:
  1155   003352                     
  1156                           ;./functions.h: 36:         {;./functions.h: 37:             count++;
  1157   003352  4A07               	infsnz	_count^0,f,c
  1158   003354  2A08               	incf	(_count+1)^0,f,c
  1159   003356                     
  1160                           ;./functions.h: 38:             update7SD();
  1161   003356  EC59  F018         	call	_update7SD	;wreg free
  1162   00335A                     
  1163                           ;./functions.h: 39:             _delay((unsigned long)((500)*(4000000/4000.0)));
  1164   00335A  0E03               	movlw	3
  1165   00335C  6E04               	movwf	(??_passwordInput+1)^0,c
  1166   00335E  0E8A               	movlw	138
  1167   003360  6E03               	movwf	??_passwordInput^0,c
  1168   003362  0E56               	movlw	86
  1169   003364                     u217:
  1170   003364  2EE8               	decfsz	wreg,f,c
  1171   003366  D7FE               	bra	u217
  1172   003368  2E03               	decfsz	??_passwordInput^0,f,c
  1173   00336A  D7FC               	bra	u217
  1174   00336C  2E04               	decfsz	(??_passwordInput+1)^0,f,c
  1175   00336E  D7FA               	bra	u217
  1176   003370                     l908:
  1177                           
  1178                           ;./functions.h: 41:         if(PORTBbits.RB1==1)
  1179   003370  A2CB               	btfss	203,1,c	;volatile
  1180   003372  EFBD  F019         	goto	u131
  1181   003376  EFBF  F019         	goto	u130
  1182   00337A                     u131:
  1183   00337A  EFC1  F019         	goto	l98
  1184   00337E                     u130:
  1185   00337E                     
  1186                           ;./functions.h: 42:         {;./functions.h: 43:             correct=1;
  1187   00337E  0E01               	movlw	1
  1188   003380  6E0B               	movwf	_correct^0,c
  1189   003382                     l98:
  1190                           
  1191                           ;./functions.h: 33:     while(correct==0)
  1192   003382  500B               	movf	_correct^0,w,c
  1193   003384  B4D8               	btfsc	status,2,c
  1194   003386  EFC7  F019         	goto	u141
  1195   00338A  EFC9  F019         	goto	u140
  1196   00338E                     u141:
  1197   00338E  EFA2  F019         	goto	l99
  1198   003392                     u140:
  1199   003392  0012               	return		;funcret
  1200   003394                     __end_of_passwordInput:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _passwordCheck *****************
  1204 ;; Defined at:
  1205 ;;		line 49 in file "./functions.h"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;		None
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;		None
  1210 ;; Return value:  Size  Location     Type
  1211 ;;                  1    wreg      void 
  1212 ;; Registers used:
  1213 ;;		wreg, status,2, status,0, cstack
  1214 ;; Tracked objects:
  1215 ;;		On entry : 0/0
  1216 ;;		On exit  : 0/0
  1217 ;;		Unchanged: 0/0
  1218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1221 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1222 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1223 ;;Total ram usage:        2 bytes
  1224 ;; Hardware stack levels used: 1
  1225 ;; Hardware stack levels required when called: 2
  1226 ;; This function calls:
  1227 ;;		_update7SD
  1228 ;; This function is called by:
  1229 ;;		_main
  1230 ;; This function uses a non-reentrant model
  1231 ;;
  1232                           
  1233                           	psect	text2
  1234   0032E8                     __ptext2:
  1235                           	callstack 0
  1236   0032E8                     _passwordCheck:
  1237                           	callstack 28
  1238   0032E8                     
  1239                           ;./functions.h: 52:     update7SD();
  1240   0032E8  EC59  F018         	call	_update7SD	;wreg free
  1241   0032EC                     
  1242                           ;./functions.h: 53:     if(password == secretPassword)
  1243   0032EC  500C               	movf	_secretPassword^0,w,c
  1244   0032EE  1809               	xorwf	_password^0,w,c
  1245   0032F0  E107               	bnz	u151
  1246   0032F2  500D               	movf	(_secretPassword+1)^0,w,c
  1247   0032F4  180A               	xorwf	(_password+1)^0,w,c
  1248   0032F6  A4D8               	btfss	status,2,c
  1249   0032F8  EF80  F019         	goto	u151
  1250   0032FC  EF82  F019         	goto	u150
  1251   003300                     u151:
  1252   003300  EF92  F019         	goto	l106
  1253   003304                     u150:
  1254   003304                     
  1255                           ;./functions.h: 54:     {;./functions.h: 55:         PORTAbits.RA5 = 1;
  1256   003304  8ACA               	bsf	202,5,c	;volatile
  1257   003306                     
  1258                           ;./functions.h: 56:         _delay((unsigned long)((5000)*(4000000/4000.0)));
  1259   003306  0E1A               	movlw	26
  1260   003308  6E04               	movwf	(??_passwordCheck+1)^0,c
  1261   00330A  0E5E               	movlw	94
  1262   00330C  6E03               	movwf	??_passwordCheck^0,c
  1263   00330E  0E6E               	movlw	110
  1264   003310                     u227:
  1265   003310  2EE8               	decfsz	wreg,f,c
  1266   003312  D7FE               	bra	u227
  1267   003314  2E03               	decfsz	??_passwordCheck^0,f,c
  1268   003316  D7FC               	bra	u227
  1269   003318  2E04               	decfsz	(??_passwordCheck+1)^0,f,c
  1270   00331A  D7FA               	bra	u227
  1271   00331C  D000               	nop2	
  1272   00331E                     
  1273                           ;./functions.h: 57:         PORTAbits.RA5 = 0;
  1274   00331E  9ACA               	bcf	202,5,c	;volatile
  1275                           
  1276                           ;./functions.h: 58:     }
  1277   003320  EF9F  F019         	goto	l108
  1278   003324                     l106:
  1279                           
  1280                           ;./functions.h: 60:     {;./functions.h: 61:         PORTBbits.RB2 = 1;
  1281   003324  84CB               	bsf	203,2,c	;volatile
  1282   003326                     
  1283                           ;./functions.h: 62:         _delay((unsigned long)((3000)*(4000000/4000.0)));
  1284   003326  0E10               	movlw	16
  1285   003328  6E04               	movwf	(??_passwordCheck+1)^0,c
  1286   00332A  0E39               	movlw	57
  1287   00332C  6E03               	movwf	??_passwordCheck^0,c
  1288   00332E  0E0E               	movlw	14
  1289   003330                     u237:
  1290   003330  2EE8               	decfsz	wreg,f,c
  1291   003332  D7FE               	bra	u237
  1292   003334  2E03               	decfsz	??_passwordCheck^0,f,c
  1293   003336  D7FC               	bra	u237
  1294   003338  2E04               	decfsz	(??_passwordCheck+1)^0,f,c
  1295   00333A  D7FA               	bra	u237
  1296   00333C                     
  1297                           ;./functions.h: 63:         PORTBbits.RB2 = 0;
  1298   00333C  94CB               	bcf	203,2,c	;volatile
  1299   00333E                     l108:
  1300   00333E  0012               	return		;funcret
  1301   003340                     __end_of_passwordCheck:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _update7SD *****************
  1305 ;; Defined at:
  1306 ;;		line 5 in file "./functions.h"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  1    wreg      void 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1324 ;;Total ram usage:        0 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 1
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_passwordInput
  1331 ;;		_passwordCheck
  1332 ;;		_main
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           	psect	text3
  1337   0030B2                     __ptext3:
  1338                           	callstack 0
  1339   0030B2                     _update7SD:
  1340                           	callstack 29
  1341   0030B2                     
  1342                           ;./functions.h: 6:     if (count == 0)
  1343   0030B2  5007               	movf	_count^0,w,c
  1344   0030B4  1008               	iorwf	(_count+1)^0,w,c
  1345   0030B6  A4D8               	btfss	status,2,c
  1346   0030B8  EF60  F018         	goto	u11
  1347   0030BC  EF62  F018         	goto	u10
  1348   0030C0                     u11:
  1349   0030C0  EF66  F018         	goto	l810
  1350   0030C4                     u10:
  1351   0030C4                     
  1352                           ;./functions.h: 7:         PORTD = 0x3F;
  1353   0030C4  0E3F               	movlw	63
  1354   0030C6  6ECD               	movwf	205,c	;volatile
  1355   0030C8  EFEF  F018         	goto	l95
  1356   0030CC                     l810:
  1357   0030CC  0407               	decf	_count^0,w,c
  1358   0030CE  1008               	iorwf	(_count+1)^0,w,c
  1359   0030D0  A4D8               	btfss	status,2,c
  1360   0030D2  EF6D  F018         	goto	u21
  1361   0030D6  EF6F  F018         	goto	u20
  1362   0030DA                     u21:
  1363   0030DA  EF73  F018         	goto	l814
  1364   0030DE                     u20:
  1365   0030DE                     
  1366                           ;./functions.h: 9:         PORTD = 0x06;
  1367   0030DE  0E06               	movlw	6
  1368   0030E0  6ECD               	movwf	205,c	;volatile
  1369   0030E2  EFEF  F018         	goto	l95
  1370   0030E6                     l814:
  1371   0030E6  0E02               	movlw	2
  1372   0030E8  1807               	xorwf	_count^0,w,c
  1373   0030EA  1008               	iorwf	(_count+1)^0,w,c
  1374   0030EC  A4D8               	btfss	status,2,c
  1375   0030EE  EF7B  F018         	goto	u31
  1376   0030F2  EF7D  F018         	goto	u30
  1377   0030F6                     u31:
  1378   0030F6  EF81  F018         	goto	l818
  1379   0030FA                     u30:
  1380   0030FA                     l816:
  1381                           
  1382                           ;./functions.h: 11:         PORTD = 0x5B;
  1383   0030FA  0E5B               	movlw	91
  1384   0030FC  6ECD               	movwf	205,c	;volatile
  1385   0030FE  EFEF  F018         	goto	l95
  1386   003102                     l818:
  1387   003102  0E02               	movlw	2
  1388   003104  1807               	xorwf	_count^0,w,c
  1389   003106  1008               	iorwf	(_count+1)^0,w,c
  1390   003108  A4D8               	btfss	status,2,c
  1391   00310A  EF89  F018         	goto	u41
  1392   00310E  EF8B  F018         	goto	u40
  1393   003112                     u41:
  1394   003112  EF8D  F018         	goto	l822
  1395   003116                     u40:
  1396   003116  EF7D  F018         	goto	l816
  1397   00311A                     l822:
  1398   00311A  0E03               	movlw	3
  1399   00311C  1807               	xorwf	_count^0,w,c
  1400   00311E  1008               	iorwf	(_count+1)^0,w,c
  1401   003120  A4D8               	btfss	status,2,c
  1402   003122  EF95  F018         	goto	u51
  1403   003126  EF97  F018         	goto	u50
  1404   00312A                     u51:
  1405   00312A  EF9B  F018         	goto	l826
  1406   00312E                     u50:
  1407   00312E                     
  1408                           ;./functions.h: 15:         PORTD = 0x4F;
  1409   00312E  0E4F               	movlw	79
  1410   003130  6ECD               	movwf	205,c	;volatile
  1411   003132  EFEF  F018         	goto	l95
  1412   003136                     l826:
  1413   003136  0E04               	movlw	4
  1414   003138  1807               	xorwf	_count^0,w,c
  1415   00313A  1008               	iorwf	(_count+1)^0,w,c
  1416   00313C  A4D8               	btfss	status,2,c
  1417   00313E  EFA3  F018         	goto	u61
  1418   003142  EFA5  F018         	goto	u60
  1419   003146                     u61:
  1420   003146  EFA9  F018         	goto	l830
  1421   00314A                     u60:
  1422   00314A                     
  1423                           ;./functions.h: 17:         PORTD = 0x66;
  1424   00314A  0E66               	movlw	102
  1425   00314C  6ECD               	movwf	205,c	;volatile
  1426   00314E  EFEF  F018         	goto	l95
  1427   003152                     l830:
  1428   003152  0E05               	movlw	5
  1429   003154  1807               	xorwf	_count^0,w,c
  1430   003156  1008               	iorwf	(_count+1)^0,w,c
  1431   003158  A4D8               	btfss	status,2,c
  1432   00315A  EFB1  F018         	goto	u71
  1433   00315E  EFB3  F018         	goto	u70
  1434   003162                     u71:
  1435   003162  EFB7  F018         	goto	l834
  1436   003166                     u70:
  1437   003166                     
  1438                           ;./functions.h: 19:         PORTD = 0x6D;
  1439   003166  0E6D               	movlw	109
  1440   003168  6ECD               	movwf	205,c	;volatile
  1441   00316A  EFEF  F018         	goto	l95
  1442   00316E                     l834:
  1443   00316E  0E06               	movlw	6
  1444   003170  1807               	xorwf	_count^0,w,c
  1445   003172  1008               	iorwf	(_count+1)^0,w,c
  1446   003174  A4D8               	btfss	status,2,c
  1447   003176  EFBF  F018         	goto	u81
  1448   00317A  EFC1  F018         	goto	u80
  1449   00317E                     u81:
  1450   00317E  EFC5  F018         	goto	l838
  1451   003182                     u80:
  1452   003182                     
  1453                           ;./functions.h: 21:         PORTD = 0x7D;
  1454   003182  0E7D               	movlw	125
  1455   003184  6ECD               	movwf	205,c	;volatile
  1456   003186  EFEF  F018         	goto	l95
  1457   00318A                     l838:
  1458   00318A  0E07               	movlw	7
  1459   00318C  1807               	xorwf	_count^0,w,c
  1460   00318E  1008               	iorwf	(_count+1)^0,w,c
  1461   003190  A4D8               	btfss	status,2,c
  1462   003192  EFCD  F018         	goto	u91
  1463   003196  EFCF  F018         	goto	u90
  1464   00319A                     u91:
  1465   00319A  EFD3  F018         	goto	l842
  1466   00319E                     u90:
  1467   00319E                     
  1468                           ;./functions.h: 23:         PORTD = 0x07;
  1469   00319E  0E07               	movlw	7
  1470   0031A0  6ECD               	movwf	205,c	;volatile
  1471   0031A2  EFEF  F018         	goto	l95
  1472   0031A6                     l842:
  1473   0031A6  0E08               	movlw	8
  1474   0031A8  1807               	xorwf	_count^0,w,c
  1475   0031AA  1008               	iorwf	(_count+1)^0,w,c
  1476   0031AC  A4D8               	btfss	status,2,c
  1477   0031AE  EFDB  F018         	goto	u101
  1478   0031B2  EFDD  F018         	goto	u100
  1479   0031B6                     u101:
  1480   0031B6  EFE1  F018         	goto	l846
  1481   0031BA                     u100:
  1482   0031BA                     
  1483                           ;./functions.h: 25:         PORTD = 0x7F;
  1484   0031BA  0E7F               	movlw	127
  1485   0031BC  6ECD               	movwf	205,c	;volatile
  1486   0031BE  EFEF  F018         	goto	l95
  1487   0031C2                     l846:
  1488   0031C2  0E09               	movlw	9
  1489   0031C4  1807               	xorwf	_count^0,w,c
  1490   0031C6  1008               	iorwf	(_count+1)^0,w,c
  1491   0031C8  A4D8               	btfss	status,2,c
  1492   0031CA  EFE9  F018         	goto	u111
  1493   0031CE  EFEB  F018         	goto	u110
  1494   0031D2                     u111:
  1495   0031D2  EFEF  F018         	goto	l89
  1496   0031D6                     u110:
  1497   0031D6                     
  1498                           ;./functions.h: 27:         PORTD = 0x6F;
  1499   0031D6  0E6F               	movlw	111
  1500   0031D8  6ECD               	movwf	205,c	;volatile
  1501   0031DA  EFEF  F018         	goto	l95
  1502   0031DE                     l89:
  1503   0031DE                     l95:
  1504   0031DE  0012               	return		;funcret
  1505   0031E0                     __end_of_update7SD:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _initialization *****************
  1509 ;; Defined at:
  1510 ;;		line 4 in file "./initialization.h"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;		None
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  1    wreg      void 
  1517 ;; Registers used:
  1518 ;;		wreg, status,2
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;Total ram usage:        0 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 1
  1531 ;; This function calls:
  1532 ;;		Nothing
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text4
  1539   003288                     __ptext4:
  1540                           	callstack 0
  1541   003288                     _initialization:
  1542                           	callstack 29
  1543   003288                     
  1544                           ;./initialization.h: 6:     PORTA = 0;
  1545   003288  6ACA               	clrf	202,c	;volatile
  1546                           
  1547                           ;./initialization.h: 7:     LATA = 0;
  1548   00328A  6ABA               	clrf	186,c	;volatile
  1549                           
  1550                           ;./initialization.h: 8:     ANSELA = 0;
  1551   00328C  013A               	movlb	58	; () banked
  1552   00328E  6B40               	clrf	64,b	;volatile
  1553   003290                     
  1554                           ; BSR set to: 58
  1555                           ;./initialization.h: 9:     TRISA = 0b00000111;
  1556   003290  0E07               	movlw	7
  1557   003292  6EC2               	movwf	194,c	;volatile
  1558   003294                     
  1559                           ; BSR set to: 58
  1560                           ;./initialization.h: 10:     WPUA = 0b00000000;
  1561   003294  6B41               	clrf	65,b	;volatile
  1562   003296                     
  1563                           ; BSR set to: 58
  1564                           ;./initialization.h: 11:     PORTB = 0;
  1565   003296  6ACB               	clrf	203,c	;volatile
  1566   003298                     
  1567                           ; BSR set to: 58
  1568                           ;./initialization.h: 12:     LATB = 0;
  1569   003298  6ABB               	clrf	187,c	;volatile
  1570   00329A                     
  1571                           ; BSR set to: 58
  1572                           ;./initialization.h: 13:     ANSELB = 0b00000000;
  1573   00329A  6B50               	clrf	80,b	;volatile
  1574                           
  1575                           ;./initialization.h: 14:     TRISB = 0b00000011;
  1576   00329C  0E03               	movlw	3
  1577   00329E  6EC3               	movwf	195,c	;volatile
  1578   0032A0                     
  1579                           ; BSR set to: 58
  1580                           ;./initialization.h: 15:     WPUB = 0b00000000;
  1581   0032A0  6B51               	clrf	81,b	;volatile
  1582   0032A2                     
  1583                           ; BSR set to: 58
  1584                           ;./initialization.h: 16:     PORTC = 0;
  1585   0032A2  6ACC               	clrf	204,c	;volatile
  1586   0032A4                     
  1587                           ; BSR set to: 58
  1588                           ;./initialization.h: 17:     LATC = 0;
  1589   0032A4  6ABC               	clrf	188,c	;volatile
  1590   0032A6                     
  1591                           ; BSR set to: 58
  1592                           ;./initialization.h: 18:     ANSELC = 0;
  1593   0032A6  6B60               	clrf	96,b	;volatile
  1594   0032A8                     
  1595                           ; BSR set to: 58
  1596                           ;./initialization.h: 19:     TRISC = 0b00000000;
  1597   0032A8  6AC4               	clrf	196,c	;volatile
  1598   0032AA                     
  1599                           ; BSR set to: 58
  1600                           ;./initialization.h: 20:     PORTD = 0;
  1601   0032AA  6ACD               	clrf	205,c	;volatile
  1602   0032AC                     
  1603                           ; BSR set to: 58
  1604                           ;./initialization.h: 21:     LATD = 0;
  1605   0032AC  6ABD               	clrf	189,c	;volatile
  1606   0032AE                     
  1607                           ; BSR set to: 58
  1608                           ;./initialization.h: 22:     ANSELD = 0;
  1609   0032AE  6B70               	clrf	112,b	;volatile
  1610   0032B0                     
  1611                           ; BSR set to: 58
  1612                           ;./initialization.h: 23:     TRISD = 0b00000000;
  1613   0032B0  6AC5               	clrf	197,c	;volatile
  1614   0032B2                     
  1615                           ; BSR set to: 58
  1616                           ;./initialization.h: 25:     correct = 0;
  1617   0032B2  6A0B               	clrf	_correct^0,c
  1618                           
  1619                           ;./initialization.h: 26:     count = 0;
  1620   0032B4  0E00               	movlw	0
  1621   0032B6  6E08               	movwf	(_count+1)^0,c
  1622   0032B8  0E00               	movlw	0
  1623   0032BA  6E07               	movwf	_count^0,c
  1624                           
  1625                           ;./initialization.h: 27:     password = 0;
  1626   0032BC  0E00               	movlw	0
  1627   0032BE  6E0A               	movwf	(_password+1)^0,c
  1628   0032C0  0E00               	movlw	0
  1629   0032C2  6E09               	movwf	_password^0,c
  1630                           
  1631                           ;./initialization.h: 28:     secretPassword = 11;
  1632   0032C4  0E00               	movlw	0
  1633   0032C6  6E0D               	movwf	(_secretPassword+1)^0,c
  1634   0032C8  0E0B               	movlw	11
  1635   0032CA  6E0C               	movwf	_secretPassword^0,c
  1636   0032CC                     
  1637                           ; BSR set to: 58
  1638                           ;./initialization.h: 30:     INTCON0bits.INT0EDG = 1;
  1639   0032CC  80D2               	bsf	210,0,c	;volatile
  1640   0032CE                     
  1641                           ; BSR set to: 58
  1642                           ;./initialization.h: 31:     INTCON0bits.IPEN = 1;
  1643   0032CE  8AD2               	bsf	210,5,c	;volatile
  1644   0032D0                     
  1645                           ; BSR set to: 58
  1646                           ;./initialization.h: 32:     INTCON0bits.GIEH = 1;
  1647   0032D0  8ED2               	bsf	210,7,c	;volatile
  1648   0032D2                     
  1649                           ; BSR set to: 58
  1650                           ;./initialization.h: 33:     INTCON0bits.GIEL = 1;
  1651   0032D2  8CD2               	bsf	210,6,c	;volatile
  1652   0032D4                     
  1653                           ; BSR set to: 58
  1654                           ;./initialization.h: 34:     IPR1bits.INT0IP = 1;
  1655   0032D4  0139               	movlb	57	; () banked
  1656   0032D6  8181               	bsf	129,0,b	;volatile
  1657   0032D8                     
  1658                           ; BSR set to: 57
  1659                           ;./initialization.h: 35:     PIE1bits.INT0IE = 1;
  1660   0032D8  8191               	bsf	145,0,b	;volatile
  1661   0032DA                     
  1662                           ; BSR set to: 57
  1663                           ;./initialization.h: 37:     PIR1bits.INT0IF = 0;
  1664   0032DA  91A1               	bcf	161,0,b	;volatile
  1665   0032DC                     
  1666                           ; BSR set to: 57
  1667                           ;./initialization.h: 39:     IVTBASEU = 0x00;
  1668   0032DC  6AD7               	clrf	215,c	;volatile
  1669                           
  1670                           ;./initialization.h: 40:     IVTBASEH = 0x30;
  1671   0032DE  0E30               	movlw	48
  1672   0032E0  6ED6               	movwf	214,c	;volatile
  1673                           
  1674                           ;./initialization.h: 41:     IVTBASEL = 0x08;
  1675   0032E2  0E08               	movlw	8
  1676   0032E4  6ED5               	movwf	213,c	;volatile
  1677   0032E6                     
  1678                           ; BSR set to: 57
  1679   0032E6  0012               	return		;funcret
  1680   0032E8                     __end_of_initialization:
  1681                           	callstack 0
  1682                           
  1683 ;; *************** function _INT0_ISR *****************
  1684 ;; Defined at:
  1685 ;;		line 69 in file "./functions.h"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		wreg
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1701 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1702 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1703 ;;Total ram usage:        2 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		Interrupt level 2
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           	psect	text5
  1713   0033CC                     __ptext5:
  1714                           	callstack 0
  1715   0033CC                     _INT0_ISR:
  1716                           	callstack 28
  1717   0033CC                     
  1718                           ;./functions.h: 71:     if(PIR1bits.INT0IF == 1)
  1719   0033CC  0139               	movlb	57	; () banked
  1720   0033CE  A1A1               	btfss	161,0,b	;volatile
  1721   0033D0  EFEC  F019         	goto	i2u16_41
  1722   0033D4  EFEE  F019         	goto	i2u16_40
  1723   0033D8                     i2u16_41:
  1724   0033D8  EFFB  F019         	goto	i2l936
  1725   0033DC                     i2u16_40:
  1726   0033DC                     
  1727                           ; BSR set to: 57
  1728                           ;./functions.h: 72:     {;./functions.h: 73:         PORTBbits.RB2 = 1;
  1729   0033DC  84CB               	bsf	203,2,c	;volatile
  1730   0033DE                     
  1731                           ; BSR set to: 57
  1732                           ;./functions.h: 74: _delay((unsigned long)((2000)*(4000000/4000.0)));
  1733   0033DE  0E0B               	movlw	11
  1734   0033E0  6E02               	movwf	(??_INT0_ISR+1)^0,c
  1735   0033E2  0E26               	movlw	38
  1736   0033E4  6E01               	movwf	??_INT0_ISR^0,c
  1737   0033E6  0E5E               	movlw	94
  1738   0033E8                     i2u24_47:
  1739   0033E8  2EE8               	decfsz	wreg,f,c
  1740   0033EA  D7FE               	bra	i2u24_47
  1741   0033EC  2E01               	decfsz	??_INT0_ISR^0,f,c
  1742   0033EE  D7FC               	bra	i2u24_47
  1743   0033F0  2E02               	decfsz	(??_INT0_ISR+1)^0,f,c
  1744   0033F2  D7FA               	bra	i2u24_47
  1745   0033F4                     
  1746                           ;./functions.h: 75: PORTBbits.RB2 = 0;
  1747   0033F4  94CB               	bcf	203,2,c	;volatile
  1748   0033F6                     i2l936:
  1749                           
  1750                           ;./functions.h: 77: PIR1bits.INT0IF = 0;
  1751   0033F6  0139               	movlb	57	; () banked
  1752   0033F8  91A1               	bcf	161,0,b	;volatile
  1753   0033FA                     
  1754                           ; BSR set to: 57
  1755   0033FA  0011               	retfie		f
  1756   0033FC                     __end_of_INT0_ISR:
  1757                           	callstack 0
  1758                           
  1759                           ;
  1760                           ; H/W Interrupt Vector Table @ 0x3008
  1761                           ;
  1762                           
  1763                           	psect	ivt0x3008
  1764   003008                     __pivt0x3008:
  1765                           	callstack 0
  1766   003008                     ivt0x3008_base:
  1767                           	callstack 0
  1768                           
  1769                           ; Vector 0 : SWINT
  1770   003008  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1771                           
  1772                           ; Vector 1 : HLVD
  1773   00300A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1774                           
  1775                           ; Vector 2 : OSF
  1776   00300C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1777                           
  1778                           ; Vector 3 : CSW
  1779   00300E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1780                           
  1781                           ; Vector 4 : NVM
  1782   003010  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1783                           
  1784                           ; Vector 5 : SCAN
  1785   003012  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1786                           
  1787                           ; Vector 6 : CRC
  1788   003014  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1789                           
  1790                           ; Vector 7 : IOC
  1791   003016  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1792                           
  1793                           ; Vector 8 : INT0
  1794   003018  0CF3               	dw	_INT0_ISR shr (0+2)
  1795                           
  1796                           ; Vector 9 : ZCD
  1797   00301A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1798                           
  1799                           ; Vector 10 : AD
  1800   00301C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1801                           
  1802                           ; Vector 11 : ADT
  1803   00301E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1804                           
  1805                           ; Vector 12 : CMP1
  1806   003020  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1807                           
  1808                           ; Vector 13 : SMT1
  1809   003022  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1810                           
  1811                           ; Vector 14 : SMT1PRA
  1812   003024  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1813                           
  1814                           ; Vector 15 : SMT1PRW
  1815   003026  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1816                           
  1817                           ; Vector 16 : DMA1SCNT
  1818   003028  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1819                           
  1820                           ; Vector 17 : DMA1DCNT
  1821   00302A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1822                           
  1823                           ; Vector 18 : DMA1OR
  1824   00302C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1825                           
  1826                           ; Vector 19 : DMA1A
  1827   00302E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1828                           
  1829                           ; Vector 20 : SPI1RX
  1830   003030  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1831                           
  1832                           ; Vector 21 : SPI1TX
  1833   003032  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1834                           
  1835                           ; Vector 22 : SPI1
  1836   003034  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1837                           
  1838                           ; Vector 23 : I2C1RX
  1839   003036  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1840                           
  1841                           ; Vector 24 : I2C1TX
  1842   003038  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1843                           
  1844                           ; Vector 25 : I2C1
  1845   00303A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1846                           
  1847                           ; Vector 26 : I2C1E
  1848   00303C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1849                           
  1850                           ; Vector 27 : U1RX
  1851   00303E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1852                           
  1853                           ; Vector 28 : U1TX
  1854   003040  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1855                           
  1856                           ; Vector 29 : U1E
  1857   003042  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1858                           
  1859                           ; Vector 30 : U1
  1860   003044  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1861                           
  1862                           ; Vector 31 : TMR0
  1863   003046  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1864                           
  1865                           ; Vector 32 : TMR1
  1866   003048  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1867                           
  1868                           ; Vector 33 : TMR1G
  1869   00304A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1870                           
  1871                           ; Vector 34 : TMR2
  1872   00304C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1873                           
  1874                           ; Vector 35 : CCP1
  1875   00304E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1876                           
  1877                           ; Vector 36 : Undefined
  1878   003050  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1879                           
  1880                           ; Vector 37 : NCO1
  1881   003052  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1882                           
  1883                           ; Vector 38 : CWG1
  1884   003054  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1885                           
  1886                           ; Vector 39 : CLC1
  1887   003056  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1888                           
  1889                           ; Vector 40 : INT1
  1890   003058  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1891                           
  1892                           ; Vector 41 : CMP2
  1893   00305A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1894                           
  1895                           ; Vector 42 : DMA2SCNT
  1896   00305C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1897                           
  1898                           ; Vector 43 : DMA2DCNT
  1899   00305E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1900                           
  1901                           ; Vector 44 : DMA2OR
  1902   003060  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1903                           
  1904                           ; Vector 45 : DMA2A
  1905   003062  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1906                           
  1907                           ; Vector 46 : I2C2RX
  1908   003064  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1909                           
  1910                           ; Vector 47 : I2C2TX
  1911   003066  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1912                           
  1913                           ; Vector 48 : I2C2
  1914   003068  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1915                           
  1916                           ; Vector 49 : I2C2E
  1917   00306A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1918                           
  1919                           ; Vector 50 : U2RX
  1920   00306C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1921                           
  1922                           ; Vector 51 : U2TX
  1923   00306E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1924                           
  1925                           ; Vector 52 : U2E
  1926   003070  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1927                           
  1928                           ; Vector 53 : U2
  1929   003072  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1930                           
  1931                           ; Vector 54 : TMR3
  1932   003074  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1933                           
  1934                           ; Vector 55 : TMR3G
  1935   003076  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1936                           
  1937                           ; Vector 56 : TMR4
  1938   003078  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1939                           
  1940                           ; Vector 57 : CCP2
  1941   00307A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1942                           
  1943                           ; Vector 58 : Undefined
  1944   00307C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1945                           
  1946                           ; Vector 59 : CWG2
  1947   00307E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1948                           
  1949                           ; Vector 60 : CLC2
  1950   003080  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1951                           
  1952                           ; Vector 61 : INT2
  1953   003082  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1954                           
  1955                           ; Vector 62 : Undefined
  1956   003084  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1957                           
  1958                           ; Vector 63 : Undefined
  1959   003086  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1960                           
  1961                           ; Vector 64 : Undefined
  1962   003088  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1963                           
  1964                           ; Vector 65 : Undefined
  1965   00308A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1966                           
  1967                           ; Vector 66 : Undefined
  1968   00308C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1969                           
  1970                           ; Vector 67 : Undefined
  1971   00308E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1972                           
  1973                           ; Vector 68 : Undefined
  1974   003090  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1975                           
  1976                           ; Vector 69 : Undefined
  1977   003092  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1978                           
  1979                           ; Vector 70 : TMR5
  1980   003094  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1981                           
  1982                           ; Vector 71 : TMR5G
  1983   003096  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1984                           
  1985                           ; Vector 72 : TMR6
  1986   003098  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1987                           
  1988                           ; Vector 73 : CCP3
  1989   00309A  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1990                           
  1991                           ; Vector 74 : CWG3
  1992   00309C  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1993                           
  1994                           ; Vector 75 : CLC3
  1995   00309E  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1996                           
  1997                           ; Vector 76 : Undefined
  1998   0030A0  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  1999                           
  2000                           ; Vector 77 : Undefined
  2001   0030A2  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  2002                           
  2003                           ; Vector 78 : Undefined
  2004   0030A4  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  2005                           
  2006                           ; Vector 79 : Undefined
  2007   0030A6  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  2008                           
  2009                           ; Vector 80 : CCP4
  2010   0030A8  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  2011                           
  2012                           ; Vector 81 : CLC4
  2013   0030AA  0C2B               	dw	ivt0x3008_undefint shr (0+2)
  2014   0030AC                     ivt0x3008_undefint:
  2015                           	callstack 0
  2016   0030AC  00FF               	reset	
  2017                           
  2018                           	psect	smallconst
  2019   002000                     __psmallconst:
  2020                           	callstack 0
  2021   002000  00                 	db	0
  2022   002001  00                 	db	0	; dummy byte at the end
  2023   002000                     __smallconst    set	__psmallconst
  2024   002000                     __mediumconst   set	__psmallconst
  2025   000000                     __activetblptr  equ	0
  2026                           
  2027                           	psect	rparam
  2028   000001                     ___rparam_used  equ	1
  2029   000000                     ___param_bank   equ	0
  2030   000000                     __Lparam        equ	__Lrparam
  2031   000000                     __Hparam        equ	__Hrparam
  2032                           
  2033                           	psect	config
  2034                           
  2035                           ;Config register CONFIG1L @ 0x300000
  2036                           ;	External Oscillator Selection
  2037                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  2038                           ;	Reset Oscillator Selection
  2039                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2040   300000                     	org	3145728
  2041   300000  F8                 	db	248
  2042                           
  2043                           ;Config register CONFIG1H @ 0x300001
  2044                           ;	Clock out Enable bit
  2045                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2046                           ;	PRLOCKED One-Way Set Enable bit
  2047                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  2048                           ;	Clock Switch Enable bit
  2049                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2050                           ;	Fail-Safe Clock Monitor Enable bit
  2051                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2052   300001                     	org	3145729
  2053   300001  FF                 	db	255
  2054                           
  2055                           ;Config register CONFIG2L @ 0x300002
  2056                           ;	MCLR Enable bit
  2057                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2058                           ;	Power-up timer selection bits
  2059                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  2060                           ;	Multi-vector enable bit
  2061                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2062                           ;	IVTLOCK bit One-way set enable bit
  2063                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  2064                           ;	Low Power BOR Enable bit
  2065                           ;	LPBOREN = OFF, ULPBOR disabled
  2066                           ;	Brown-out Reset Enable bits
  2067                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  2068   300002                     	org	3145730
  2069   300002  FF                 	db	255
  2070                           
  2071                           ;Config register CONFIG2H @ 0x300003
  2072                           ;	Brown-out Reset Voltage Selection bits
  2073                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  2074                           ;	ZCD Disable bit
  2075                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  2076                           ;	PPSLOCK bit One-Way Set Enable bit
  2077                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  2078                           ;	Stack Full/Underflow Reset Enable bit
  2079                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2080                           ;	Debugger Enable bit
  2081                           ;	DEBUG = OFF, Background debugger disabled
  2082                           ;	Extended Instruction Set Enable bit
  2083                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2084   300003                     	org	3145731
  2085   300003  FF                 	db	255
  2086                           
  2087                           ;Config register CONFIG3L @ 0x300004
  2088                           ;	WDT Period selection bits
  2089                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2090                           ;	WDT operating mode
  2091                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2092   300004                     	org	3145732
  2093   300004  9F                 	db	159
  2094                           
  2095                           ;Config register CONFIG3H @ 0x300005
  2096                           ;	WDT Window Select bits
  2097                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2098                           ;	WDT input clock selector
  2099                           ;	WDTCCS = SC, Software Control
  2100   300005                     	org	3145733
  2101   300005  FF                 	db	255
  2102                           
  2103                           ;Config register CONFIG4L @ 0x300006
  2104                           ;	Boot Block Size selection bits
  2105                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2106                           ;	Boot Block enable bit
  2107                           ;	BBEN = OFF, Boot block disabled
  2108                           ;	Storage Area Flash enable bit
  2109                           ;	SAFEN = OFF, SAF disabled
  2110                           ;	Application Block write protection bit
  2111                           ;	WRTAPP = OFF, Application Block not write protected
  2112   300006                     	org	3145734
  2113   300006  FF                 	db	255
  2114                           
  2115                           ;Config register CONFIG4H @ 0x300007
  2116                           ;	Boot Block Write Protection bit
  2117                           ;	WRTB = OFF, Boot Block not write-protected
  2118                           ;	Configuration Register Write Protection bit
  2119                           ;	WRTC = OFF, Configuration registers not write-protected
  2120                           ;	Data EEPROM Write Protection bit
  2121                           ;	WRTD = OFF, Data EEPROM not write-protected
  2122                           ;	SAF Write protection bit
  2123                           ;	WRTSAF = OFF, SAF not Write Protected
  2124                           ;	Low Voltage Programming Enable bit
  2125                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  2126   300007                     	org	3145735
  2127   300007  FF                 	db	255
  2128                           
  2129                           ;Config register CONFIG5L @ 0x300008
  2130                           ;	PFM and Data EEPROM Code Protection bit
  2131                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2132   300008                     	org	3145736
  2133   300008  FF                 	db	255
  2134                           
  2135                           ;Config register CONFIG5H @ 0x300009
  2136                           ;	unspecified, using default values
  2137   300009                     	org	3145737
  2138   300009  FF                 	db	255
  2139                           tosu	equ	0x3FFF
  2140                           tosh	equ	0x3FFE
  2141                           tosl	equ	0x3FFD
  2142                           stkptr	equ	0x3FFC
  2143                           pclatu	equ	0x3FFB
  2144                           pclath	equ	0x3FFA
  2145                           pcl	equ	0x3FF9
  2146                           tblptru	equ	0x3FF8
  2147                           tblptrh	equ	0x3FF7
  2148                           tblptrl	equ	0x3FF6
  2149                           tablat	equ	0x3FF5
  2150                           prodh	equ	0x3FF4
  2151                           prodl	equ	0x3FF3
  2152                           indf0	equ	0x3FEF
  2153                           postinc0	equ	0x3FEE
  2154                           postdec0	equ	0x3FED
  2155                           preinc0	equ	0x3FEC
  2156                           plusw0	equ	0x3FEB
  2157                           fsr0h	equ	0x3FEA
  2158                           fsr0l	equ	0x3FE9
  2159                           wreg	equ	0x3FE8
  2160                           indf1	equ	0x3FE7
  2161                           postinc1	equ	0x3FE6
  2162                           postdec1	equ	0x3FE5
  2163                           preinc1	equ	0x3FE4
  2164                           plusw1	equ	0x3FE3
  2165                           fsr1h	equ	0x3FE2
  2166                           fsr1l	equ	0x3FE1
  2167                           bsr	equ	0x3FE0
  2168                           indf2	equ	0x3FDF
  2169                           postinc2	equ	0x3FDE
  2170                           postdec2	equ	0x3FDD
  2171                           preinc2	equ	0x3FDC
  2172                           plusw2	equ	0x3FDB
  2173                           fsr2h	equ	0x3FDA
  2174                           fsr2l	equ	0x3FD9
  2175                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      6      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_passwordCheck
    _main->_passwordInput

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              4 COMRAM     2     2      0
                     _initialization
                      _passwordCheck
                      _passwordInput
                          _update7SD
 ---------------------------------------------------------------------------------
 (1) _passwordInput                                        2     2      0       0
                                              2 COMRAM     2     2      0
                          _update7SD
 ---------------------------------------------------------------------------------
 (1) _passwordCheck                                        2     2      0       0
                                              2 COMRAM     2     2      0
                          _update7SD
 ---------------------------------------------------------------------------------
 (1) _update7SD                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INT0_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialization
   _passwordCheck
     _update7SD
   _passwordInput
     _update7SD
   _update7SD

 _INT0_ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRlh       1576      0       0      0.0%
BITBIGSFRlll       385      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      6      13     13.7%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRllh        31      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      13      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 16 11:53:19 2025

                     l67 32E6                       l95 31DE                       l89 31DE  
                     l98 3382                       l99 3344                       u10 30C4  
                     u11 30C0                       u20 30DE                       u21 30DA  
                     u30 30FA                       u31 30F6                       u40 3116  
                     u41 3112                       u50 312E                       u51 312A  
                     u60 314A                       u61 3146                       u70 3166  
                     u71 3162                       u80 3182                       u81 317E  
                     u90 319E                       u91 319A                      l103 3392  
                    l121 31E0                      l106 3324                      l108 333E  
                    l810 30CC                      l812 30DE                      l900 3340  
                    l830 3152                      l822 311A                      l814 30E6  
                    l806 30B2                      l910 337E                      l902 3352  
                    l840 319E                      l832 3166                      l824 312E  
                    l816 30FA                      l808 30C4                      l920 331E  
                    l912 32E8                      l904 3356                      l842 31A6  
                    l834 316E                      l826 3136                      l818 3102  
                    l922 3326                      l914 32EC                      l906 335A  
                    l860 3298                      l852 3288                      l844 31BA  
                    l836 3182                      l828 314A                      l924 333C  
                    l916 3304                      l908 3370                      l940 31E0  
                    l870 32A6                      l862 329A                      l854 3290  
                    l846 31C2                      l838 318A                      l918 3306  
                    l950 3216                      l942 31E4                      l880 32B0  
                    l872 32A8                      l864 32A0                      l856 3294  
                    l848 31D6                      l960 324A                      l952 3234  
                    l944 31EC                      l890 32D2                      l882 32B2  
                    l874 32AA                      l866 32A2                      l858 3296  
                    l962 325A                      l954 3236                      l946 31F0  
                    l892 32D4                      l884 32CC                      l876 32AC  
                    l868 32A4                      l964 3270                      l956 323E  
                    l948 3200                      l894 32D8                      l886 32CE  
                    l878 32AE                      l966 327C                      l958 3246  
                    l896 32DA                      l888 32D0                      l898 32DC  
                    u100 31BA                      u101 31B6                      u110 31D6  
                    u111 31D2                      u120 3352                      u121 334E  
                    u130 337E                      u131 337A                      u140 3392  
                    u141 338E                      u150 3304                      u151 3300  
                    u207 3264                      u217 3364                      u170 3200  
                    u227 3310                      u171 31FC                      u180 325A  
                    u237 3330                      u181 3256                      u197 320A  
                    wreg 3FE8                     _LATA 3FBA                     _LATB 3FBB  
                   _LATC 3FBC                     _LATD 3FBD                     _WPUA 3A41  
                   _WPUB 3A51         ??_initialization 0003                     _main 31E0  
                   prodh 3FF4                     prodl 3FF3                     start 30AE  
           ___param_bank 0000         __end_of_INT0_ISR 33FC                    ?_main 0001  
                  i2l114 33FA                    i2l930 33DC                    i2l932 33DE  
                  i2l934 33F4                    i2l936 33F6                    i2l928 33CC  
                  _PORTA 3FCA                    _PORTB 3FCB                    _PORTC 3FCC  
                  _PORTD 3FCD                    _TRISA 3FC2                    _TRISB 3FC3  
                  _TRISC 3FC4                    _TRISD 3FC5                    _count 0007  
                  tablat 3FF5                    status 3FD8          __initialization 3394  
           __end_of_main 3288    __end_of_passwordCheck 3340    __end_of_passwordInput 3394  
                 ??_main 0005            __activetblptr 0000           _secretPassword 000C  
                 _ANSELA 3A40                   _ANSELB 3A50                   _ANSELC 3A60  
                 _ANSELD 3A70                   isa$std 0001             __pdataCOMRAM 000C  
           __mediumconst 2000                   tblptrh 3FF7                   tblptrl 3FF6  
                 tblptru 3FF8               __accesstop 0060  __end_of__initialization 33C6  
              ?_INT0_ISR 0001            ___rparam_used 0001           __pcstackCOMRAM 0001  
             ??_INT0_ISR 0001                  IVTBASEH 3FD6                  IVTBASEL 3FD5  
                IVTBASEU 3FD7                  i2u16_40 33DC                  i2u16_41 33D8  
                i2u24_47 33E8                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 2000            ivt0x3008_base 3008                  __pcinit 3394  
                __ramtop 2000                  __ptext0 31E0                  __ptext1 3340  
                __ptext2 32E8                  __ptext3 30B2                  __ptext4 3288  
                __ptext5 33CC                  _correct 000B     end_of_initialization 33C6  
      __end_of_update7SD 31E0                _PORTAbits 3FCA                _PORTBbits 3FCB  
          __pidataCOMRAM 33FC      start_initialization 3394            _passwordCheck 32E8  
          _passwordInput 3340              __pbssCOMRAM 0007              __pivt0x3008 3008  
      ivt0x3008_undefint 30AC           ?_passwordCheck 0001           _initialization 3288  
         ?_passwordInput 0001              __smallconst 2000                 _INT0_ISR 33CC  
               _IPR1bits 3981                 _PIE1bits 3991                 _IVTBASEH 3FD6  
               _IVTBASEL 3FD5                 _IVTBASEU 3FD7                 _PIR1bits 39A1  
 __end_of_initialization 32E8                _update7SD 30B2              _INTCON0bits 3FD2  
               __Hrparam 0000          ??_passwordCheck 0003          ?_initialization 0001  
               __Lrparam 0000          ??_passwordInput 0003               ?_update7SD 0001  
               _password 0009                 isa$xinst 0000                 intlevel2 0000  
            ??_update7SD 0003  
