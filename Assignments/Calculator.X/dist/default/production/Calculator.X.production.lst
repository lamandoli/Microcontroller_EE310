

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Apr 06 09:38:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F47K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    16   000000                     
    17                           ; Generated 13/12/2024 GMT
    18                           ; 
    19                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F47K42 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51   003FE0                     bsr             equ	16352
    52   003FE9                     fsr0            equ	16361
    53   003FEA                     fsr0h           equ	16362
    54   003FE9                     fsr0l           equ	16361
    55   003FE1                     fsr1            equ	16353
    56   003FE2                     fsr1h           equ	16354
    57   003FE1                     fsr1l           equ	16353
    58   003FD9                     fsr2            equ	16345
    59   003FDA                     fsr2h           equ	16346
    60   003FD9                     fsr2l           equ	16345
    61   003FEF                     indf0           equ	16367
    62   003FE7                     indf1           equ	16359
    63   003FDF                     indf2           equ	16351
    64   003FD2                     intcon          equ	16338
    65   0039E5                     nvmcon          equ	14821
    66   003FF9                     pcl             equ	16377
    67   003FFA                     pclath          equ	16378
    68   003FFB                     pclatu          equ	16379
    69   003FEB                     plusw0          equ	16363
    70   003FE3                     plusw1          equ	16355
    71   003FDB                     plusw2          equ	16347
    72   003FED                     postdec0        equ	16365
    73   003FE5                     postdec1        equ	16357
    74   003FDD                     postdec2        equ	16349
    75   003FEE                     postinc0        equ	16366
    76   003FE6                     postinc1        equ	16358
    77   003FDE                     postinc2        equ	16350
    78   003FEC                     preinc0         equ	16364
    79   003FE4                     preinc1         equ	16356
    80   003FDC                     preinc2         equ	16348
    81   003FF3                     prod            equ	16371
    82   003FF4                     prodh           equ	16372
    83   003FF3                     prodl           equ	16371
    84   003FD8                     status          equ	16344
    85   003FF5                     tablat          equ	16373
    86   003FF6                     tblptr          equ	16374
    87   003FF7                     tblptrh         equ	16375
    88   003FF6                     tblptrl         equ	16374
    89   003FF8                     tblptru         equ	16376
    90   003FFD                     tosl            equ	16381
    91   003FE8                     wreg            equ	16360
    92   003880                     STATUS_CSHAD    equ	14464	;# 
    93   003881                     WREG_CSHAD      equ	14465	;# 
    94   003882                     BSR_CSHAD       equ	14466	;# 
    95   003883                     SHADCON         equ	14467	;# 
    96   003884                     STATUS_SHAD     equ	14468	;# 
    97   003885                     WREG_SHAD       equ	14469	;# 
    98   003886                     BSR_SHAD        equ	14470	;# 
    99   003887                     PCLATH_SHAD     equ	14471	;# 
   100   003888                     PCLATU_SHAD     equ	14472	;# 
   101   003889                     FSR0SH          equ	14473	;# 
   102   003889                     FSR0L_SHAD      equ	14473	;# 
   103   00388A                     FSR0H_SHAD      equ	14474	;# 
   104   00388B                     FSR1SH          equ	14475	;# 
   105   00388B                     FSR1L_SHAD      equ	14475	;# 
   106   00388C                     FSR1H_SHAD      equ	14476	;# 
   107   00388D                     FSR2SH          equ	14477	;# 
   108   00388D                     FSR2L_SHAD      equ	14477	;# 
   109   00388E                     FSR2H_SHAD      equ	14478	;# 
   110   00388F                     PRODSH          equ	14479	;# 
   111   00388F                     PRODL_SHAD      equ	14479	;# 
   112   003890                     PRODH_SHAD      equ	14480	;# 
   113   00389D                     IVTADL          equ	14493	;# 
   114   00389E                     IVTADH          equ	14494	;# 
   115   00389F                     IVTADU          equ	14495	;# 
   116   00395B                     WDTCON0         equ	14683	;# 
   117   00395C                     WDTCON1         equ	14684	;# 
   118   00395D                     WDTPSL          equ	14685	;# 
   119   00395E                     WDTPSH          equ	14686	;# 
   120   00395F                     WDTTMR          equ	14687	;# 
   121   003960                     CRCDATA         equ	14688	;# 
   122   003960                     CRCDATL         equ	14688	;# 
   123   003961                     CRCDATH         equ	14689	;# 
   124   003962                     CRCACC          equ	14690	;# 
   125   003962                     CRCACCL         equ	14690	;# 
   126   003963                     CRCACCH         equ	14691	;# 
   127   003964                     CRCSHFT         equ	14692	;# 
   128   003964                     CRCSHIFTL       equ	14692	;# 
   129   003965                     CRCSHIFTH       equ	14693	;# 
   130   003966                     CRCXOR          equ	14694	;# 
   131   003966                     CRCXORL         equ	14694	;# 
   132   003967                     CRCXORH         equ	14695	;# 
   133   003968                     CRCCON0         equ	14696	;# 
   134   003969                     CRCCON1         equ	14697	;# 
   135   003976                     SCANLADR        equ	14710	;# 
   136   003976                     SCANLADRL       equ	14710	;# 
   137   003977                     SCANLADRH       equ	14711	;# 
   138   003978                     SCANLADRU       equ	14712	;# 
   139   003979                     SCANHADR        equ	14713	;# 
   140   003979                     SCANHADRL       equ	14713	;# 
   141   00397A                     SCANHADRH       equ	14714	;# 
   142   00397B                     SCANHADRU       equ	14715	;# 
   143   00397C                     SCANCON0        equ	14716	;# 
   144   00397D                     SCANTRIG        equ	14717	;# 
   145   003980                     IPR0            equ	14720	;# 
   146   003981                     IPR1            equ	14721	;# 
   147   003982                     IPR2            equ	14722	;# 
   148   003983                     IPR3            equ	14723	;# 
   149   003984                     IPR4            equ	14724	;# 
   150   003985                     IPR5            equ	14725	;# 
   151   003986                     IPR6            equ	14726	;# 
   152   003987                     IPR7            equ	14727	;# 
   153   003988                     IPR8            equ	14728	;# 
   154   003989                     IPR9            equ	14729	;# 
   155   00398A                     IPR10           equ	14730	;# 
   156   003990                     PIE0            equ	14736	;# 
   157   003991                     PIE1            equ	14737	;# 
   158   003992                     PIE2            equ	14738	;# 
   159   003993                     PIE3            equ	14739	;# 
   160   003994                     PIE4            equ	14740	;# 
   161   003995                     PIE5            equ	14741	;# 
   162   003996                     PIE6            equ	14742	;# 
   163   003997                     PIE7            equ	14743	;# 
   164   003998                     PIE8            equ	14744	;# 
   165   003999                     PIE9            equ	14745	;# 
   166   00399A                     PIE10           equ	14746	;# 
   167   0039A0                     PIR0            equ	14752	;# 
   168   0039A1                     PIR1            equ	14753	;# 
   169   0039A2                     PIR2            equ	14754	;# 
   170   0039A3                     PIR3            equ	14755	;# 
   171   0039A4                     PIR4            equ	14756	;# 
   172   0039A5                     PIR5            equ	14757	;# 
   173   0039A6                     PIR6            equ	14758	;# 
   174   0039A7                     PIR7            equ	14759	;# 
   175   0039A8                     PIR8            equ	14760	;# 
   176   0039A9                     PIR9            equ	14761	;# 
   177   0039AA                     PIR10           equ	14762	;# 
   178   0039C0                     PMD0            equ	14784	;# 
   179   0039C1                     PMD1            equ	14785	;# 
   180   0039C2                     PMD2            equ	14786	;# 
   181   0039C3                     PMD3            equ	14787	;# 
   182   0039C4                     PMD4            equ	14788	;# 
   183   0039C5                     PMD5            equ	14789	;# 
   184   0039C6                     PMD6            equ	14790	;# 
   185   0039C7                     PMD7            equ	14791	;# 
   186   0039D0                     BORCON          equ	14800	;# 
   187   0039D1                     VREGCON         equ	14801	;# 
   188   0039D8                     CPUDOZE         equ	14808	;# 
   189   0039D9                     OSCCON1         equ	14809	;# 
   190   0039DA                     OSCCON2         equ	14810	;# 
   191   0039DB                     OSCCON3         equ	14811	;# 
   192   0039DC                     OSCSTAT         equ	14812	;# 
   193   0039DC                     OSCSTAT1        equ	14812	;# 
   194   0039DD                     OSCEN           equ	14813	;# 
   195   0039DE                     OSCTUNE         equ	14814	;# 
   196   0039DF                     OSCFRQ          equ	14815	;# 
   197   0039E0                     NVMADRL         equ	14816	;# 
   198   0039E1                     NVMADRH         equ	14817	;# 
   199   0039E3                     NVMDAT          equ	14819	;# 
   200   0039E5                     NVMCON1         equ	14821	;# 
   201   0039E6                     NVMCON2         equ	14822	;# 
   202   0039EF                     PRLOCK          equ	14831	;# 
   203   0039F1                     ISRPR           equ	14833	;# 
   204   0039F2                     MAINPR          equ	14834	;# 
   205   0039F3                     DMA1PR          equ	14835	;# 
   206   0039F4                     DMA2PR          equ	14836	;# 
   207   0039F7                     SCANPR          equ	14839	;# 
   208   003A00                     RA0PPS          equ	14848	;# 
   209   003A01                     RA1PPS          equ	14849	;# 
   210   003A02                     RA2PPS          equ	14850	;# 
   211   003A03                     RA3PPS          equ	14851	;# 
   212   003A04                     RA4PPS          equ	14852	;# 
   213   003A05                     RA5PPS          equ	14853	;# 
   214   003A06                     RA6PPS          equ	14854	;# 
   215   003A07                     RA7PPS          equ	14855	;# 
   216   003A08                     RB0PPS          equ	14856	;# 
   217   003A09                     RB1PPS          equ	14857	;# 
   218   003A0A                     RB2PPS          equ	14858	;# 
   219   003A0B                     RB3PPS          equ	14859	;# 
   220   003A0C                     RB4PPS          equ	14860	;# 
   221   003A0D                     RB5PPS          equ	14861	;# 
   222   003A0E                     RB6PPS          equ	14862	;# 
   223   003A0F                     RB7PPS          equ	14863	;# 
   224   003A10                     RC0PPS          equ	14864	;# 
   225   003A11                     RC1PPS          equ	14865	;# 
   226   003A12                     RC2PPS          equ	14866	;# 
   227   003A13                     RC3PPS          equ	14867	;# 
   228   003A14                     RC4PPS          equ	14868	;# 
   229   003A15                     RC5PPS          equ	14869	;# 
   230   003A16                     RC6PPS          equ	14870	;# 
   231   003A17                     RC7PPS          equ	14871	;# 
   232   003A18                     RD0PPS          equ	14872	;# 
   233   003A19                     RD1PPS          equ	14873	;# 
   234   003A1A                     RD2PPS          equ	14874	;# 
   235   003A1B                     RD3PPS          equ	14875	;# 
   236   003A1C                     RD4PPS          equ	14876	;# 
   237   003A1D                     RD5PPS          equ	14877	;# 
   238   003A1E                     RD6PPS          equ	14878	;# 
   239   003A1F                     RD7PPS          equ	14879	;# 
   240   003A20                     RE0PPS          equ	14880	;# 
   241   003A21                     RE1PPS          equ	14881	;# 
   242   003A22                     RE2PPS          equ	14882	;# 
   243   003A40                     ANSELA          equ	14912	;# 
   244   003A41                     WPUA            equ	14913	;# 
   245   003A42                     ODCONA          equ	14914	;# 
   246   003A43                     SLRCONA         equ	14915	;# 
   247   003A44                     INLVLA          equ	14916	;# 
   248   003A45                     IOCAP           equ	14917	;# 
   249   003A46                     IOCAN           equ	14918	;# 
   250   003A47                     IOCAF           equ	14919	;# 
   251   003A50                     ANSELB          equ	14928	;# 
   252   003A51                     WPUB            equ	14929	;# 
   253   003A52                     ODCONB          equ	14930	;# 
   254   003A53                     SLRCONB         equ	14931	;# 
   255   003A54                     INLVLB          equ	14932	;# 
   256   003A55                     IOCBP           equ	14933	;# 
   257   003A56                     IOCBN           equ	14934	;# 
   258   003A57                     IOCBF           equ	14935	;# 
   259   003A5A                     RB1I2C          equ	14938	;# 
   260   003A5B                     RB2I2C          equ	14939	;# 
   261   003A60                     ANSELC          equ	14944	;# 
   262   003A61                     WPUC            equ	14945	;# 
   263   003A62                     ODCONC          equ	14946	;# 
   264   003A63                     SLRCONC         equ	14947	;# 
   265   003A64                     INLVLC          equ	14948	;# 
   266   003A65                     IOCCP           equ	14949	;# 
   267   003A66                     IOCCN           equ	14950	;# 
   268   003A67                     IOCCF           equ	14951	;# 
   269   003A6A                     RC3I2C          equ	14954	;# 
   270   003A6B                     RC4I2C          equ	14955	;# 
   271   003A70                     ANSELD          equ	14960	;# 
   272   003A71                     WPUD            equ	14961	;# 
   273   003A72                     ODCOND          equ	14962	;# 
   274   003A73                     SLRCOND         equ	14963	;# 
   275   003A74                     INLVLD          equ	14964	;# 
   276   003A7A                     RD0I2C          equ	14970	;# 
   277   003A7B                     RD1I2C          equ	14971	;# 
   278   003A80                     ANSELE          equ	14976	;# 
   279   003A81                     WPUE            equ	14977	;# 
   280   003A82                     ODCONE          equ	14978	;# 
   281   003A83                     SLRCONE         equ	14979	;# 
   282   003A84                     INLVLE          equ	14980	;# 
   283   003A85                     IOCEP           equ	14981	;# 
   284   003A86                     IOCEN           equ	14982	;# 
   285   003A87                     IOCEF           equ	14983	;# 
   286   003ABF                     PPSLOCK         equ	15039	;# 
   287   003AC0                     INT0PPS         equ	15040	;# 
   288   003AC1                     INT1PPS         equ	15041	;# 
   289   003AC2                     INT2PPS         equ	15042	;# 
   290   003AC3                     T0CKIPPS        equ	15043	;# 
   291   003AC4                     T1CKIPPS        equ	15044	;# 
   292   003AC5                     T1GPPS          equ	15045	;# 
   293   003AC6                     T3CKIPPS        equ	15046	;# 
   294   003AC7                     T3GPPS          equ	15047	;# 
   295   003AC8                     T5CKIPPS        equ	15048	;# 
   296   003AC9                     T5GPPS          equ	15049	;# 
   297   003ACA                     T2INPPS         equ	15050	;# 
   298   003ACB                     T4INPPS         equ	15051	;# 
   299   003ACC                     T6INPPS         equ	15052	;# 
   300   003ACD                     CCP1PPS         equ	15053	;# 
   301   003ACE                     CCP2PPS         equ	15054	;# 
   302   003ACF                     CCP3PPS         equ	15055	;# 
   303   003AD0                     CCP4PPS         equ	15056	;# 
   304   003AD1                     SMT1WINPPS      equ	15057	;# 
   305   003AD2                     SMT1SIGPPS      equ	15058	;# 
   306   003AD3                     CWG1INPPS       equ	15059	;# 
   307   003AD4                     CWG2INPPS       equ	15060	;# 
   308   003AD5                     CWG3INPPS       equ	15061	;# 
   309   003AD6                     MD1CARLPPS      equ	15062	;# 
   310   003AD7                     MD1CARHPPS      equ	15063	;# 
   311   003AD8                     MD1SRCPPS       equ	15064	;# 
   312   003AD9                     CLCIN0PPS       equ	15065	;# 
   313   003ADA                     CLCIN1PPS       equ	15066	;# 
   314   003ADB                     CLCIN2PPS       equ	15067	;# 
   315   003ADC                     CLCIN3PPS       equ	15068	;# 
   316   003ADD                     ADACTPPS        equ	15069	;# 
   317   003ADE                     SPI1SCKPPS      equ	15070	;# 
   318   003ADF                     SPI1SDIPPS      equ	15071	;# 
   319   003AE0                     SPI1SSPPS       equ	15072	;# 
   320   003AE1                     I2C1SCLPPS      equ	15073	;# 
   321   003AE2                     I2C1SDAPPS      equ	15074	;# 
   322   003AE3                     I2C2SCLPPS      equ	15075	;# 
   323   003AE4                     I2C2SDAPPS      equ	15076	;# 
   324   003AE5                     U1RXPPS         equ	15077	;# 
   325   003AE6                     U1CTSPPS        equ	15078	;# 
   326   003AE8                     U2RXPPS         equ	15080	;# 
   327   003AE9                     U2CTSPPS        equ	15081	;# 
   328   003BC9                     DMA2BUF         equ	15305	;# 
   329   003BCA                     DMA2DCNT        equ	15306	;# 
   330   003BCA                     DMA2DCNTL       equ	15306	;# 
   331   003BCB                     DMA2DCNTH       equ	15307	;# 
   332   003BCC                     DMA2DPTR        equ	15308	;# 
   333   003BCC                     DMA2DPTRL       equ	15308	;# 
   334   003BCD                     DMA2DPTRH       equ	15309	;# 
   335   003BCE                     DMA2DSZ         equ	15310	;# 
   336   003BCE                     DMA2DSZL        equ	15310	;# 
   337   003BCF                     DMA2DSZH        equ	15311	;# 
   338   003BD0                     DMA2DSA         equ	15312	;# 
   339   003BD0                     DMA2DSAL        equ	15312	;# 
   340   003BD1                     DMA2DSAH        equ	15313	;# 
   341   003BD2                     DMA2SCNT        equ	15314	;# 
   342   003BD2                     DMA2SCNTL       equ	15314	;# 
   343   003BD3                     DMA2SCNTH       equ	15315	;# 
   344   003BD4                     DMA2SPTR        equ	15316	;# 
   345   003BD4                     DMA2SPTRL       equ	15316	;# 
   346   003BD5                     DMA2SPTRH       equ	15317	;# 
   347   003BD6                     DMA2SPTRU       equ	15318	;# 
   348   003BD7                     DMA2SSZ         equ	15319	;# 
   349   003BD7                     DMA2SSZL        equ	15319	;# 
   350   003BD8                     DMA2SSZH        equ	15320	;# 
   351   003BD9                     DMA2SSA         equ	15321	;# 
   352   003BD9                     DMA2SSAL        equ	15321	;# 
   353   003BDA                     DMA2SSAH        equ	15322	;# 
   354   003BDB                     DMA2SSAU        equ	15323	;# 
   355   003BDC                     DMA2CON0        equ	15324	;# 
   356   003BDD                     DMA2CON1        equ	15325	;# 
   357   003BDE                     DMA2AIRQ        equ	15326	;# 
   358   003BDF                     DMA2SIRQ        equ	15327	;# 
   359   003BE9                     DMA1BUF         equ	15337	;# 
   360   003BEA                     DMA1DCNT        equ	15338	;# 
   361   003BEA                     DMA1DCNTL       equ	15338	;# 
   362   003BEB                     DMA1DCNTH       equ	15339	;# 
   363   003BEC                     DMA1DPTR        equ	15340	;# 
   364   003BEC                     DMA1DPTRL       equ	15340	;# 
   365   003BED                     DMA1DPTRH       equ	15341	;# 
   366   003BEE                     DMA1DSZ         equ	15342	;# 
   367   003BEE                     DMA1DSZL        equ	15342	;# 
   368   003BEF                     DMA1DSZH        equ	15343	;# 
   369   003BF0                     DMA1DSA         equ	15344	;# 
   370   003BF0                     DMA1DSAL        equ	15344	;# 
   371   003BF1                     DMA1DSAH        equ	15345	;# 
   372   003BF2                     DMA1SCNT        equ	15346	;# 
   373   003BF2                     DMA1SCNTL       equ	15346	;# 
   374   003BF3                     DMA1SCNTH       equ	15347	;# 
   375   003BF4                     DMA1SPTR        equ	15348	;# 
   376   003BF4                     DMA1SPTRL       equ	15348	;# 
   377   003BF5                     DMA1SPTRH       equ	15349	;# 
   378   003BF6                     DMA1SPTRU       equ	15350	;# 
   379   003BF7                     DMA1SSZ         equ	15351	;# 
   380   003BF7                     DMA1SSZL        equ	15351	;# 
   381   003BF8                     DMA1SSZH        equ	15352	;# 
   382   003BF9                     DMA1SSA         equ	15353	;# 
   383   003BF9                     DMA1SSAL        equ	15353	;# 
   384   003BFA                     DMA1SSAH        equ	15354	;# 
   385   003BFB                     DMA1SSAU        equ	15355	;# 
   386   003BFC                     DMA1CON0        equ	15356	;# 
   387   003BFD                     DMA1CON1        equ	15357	;# 
   388   003BFE                     DMA1AIRQ        equ	15358	;# 
   389   003BFF                     DMA1SIRQ        equ	15359	;# 
   390   003C56                     CLC4CON         equ	15446	;# 
   391   003C57                     CLC4POL         equ	15447	;# 
   392   003C58                     CLC4SEL0        equ	15448	;# 
   393   003C59                     CLC4SEL1        equ	15449	;# 
   394   003C5A                     CLC4SEL2        equ	15450	;# 
   395   003C5B                     CLC4SEL3        equ	15451	;# 
   396   003C5C                     CLC4GLS0        equ	15452	;# 
   397   003C5D                     CLC4GLS1        equ	15453	;# 
   398   003C5E                     CLC4GLS2        equ	15454	;# 
   399   003C5F                     CLC4GLS3        equ	15455	;# 
   400   003C60                     CLC3CON         equ	15456	;# 
   401   003C61                     CLC3POL         equ	15457	;# 
   402   003C62                     CLC3SEL0        equ	15458	;# 
   403   003C63                     CLC3SEL1        equ	15459	;# 
   404   003C64                     CLC3SEL2        equ	15460	;# 
   405   003C65                     CLC3SEL3        equ	15461	;# 
   406   003C66                     CLC3GLS0        equ	15462	;# 
   407   003C67                     CLC3GLS1        equ	15463	;# 
   408   003C68                     CLC3GLS2        equ	15464	;# 
   409   003C69                     CLC3GLS3        equ	15465	;# 
   410   003C6A                     CLC2CON         equ	15466	;# 
   411   003C6B                     CLC2POL         equ	15467	;# 
   412   003C6C                     CLC2SEL0        equ	15468	;# 
   413   003C6D                     CLC2SEL1        equ	15469	;# 
   414   003C6E                     CLC2SEL2        equ	15470	;# 
   415   003C6F                     CLC2SEL3        equ	15471	;# 
   416   003C70                     CLC2GLS0        equ	15472	;# 
   417   003C71                     CLC2GLS1        equ	15473	;# 
   418   003C72                     CLC2GLS2        equ	15474	;# 
   419   003C73                     CLC2GLS3        equ	15475	;# 
   420   003C74                     CLC1CON         equ	15476	;# 
   421   003C75                     CLC1POL         equ	15477	;# 
   422   003C76                     CLC1SEL0        equ	15478	;# 
   423   003C77                     CLC1SEL1        equ	15479	;# 
   424   003C78                     CLC1SEL2        equ	15480	;# 
   425   003C79                     CLC1SEL3        equ	15481	;# 
   426   003C7A                     CLC1GLS0        equ	15482	;# 
   427   003C7B                     CLC1GLS1        equ	15483	;# 
   428   003C7C                     CLC1GLS2        equ	15484	;# 
   429   003C7D                     CLC1GLS3        equ	15485	;# 
   430   003C7E                     CLCDATA0        equ	15486	;# 
   431   003CE5                     CLKRCON         equ	15589	;# 
   432   003CE6                     CLKRCLK         equ	15590	;# 
   433   003CFA                     MD1CON0         equ	15610	;# 
   434   003CFB                     MD1CON1         equ	15611	;# 
   435   003CFC                     MD1SRC          equ	15612	;# 
   436   003CFD                     MD1CARL         equ	15613	;# 
   437   003CFE                     MD1CARH         equ	15614	;# 
   438   003D10                     SPI1RXB         equ	15632	;# 
   439   003D11                     SPI1TXB         equ	15633	;# 
   440   003D12                     SPI1TCNT        equ	15634	;# 
   441   003D12                     SPI1TCNTL       equ	15634	;# 
   442   003D13                     SPI1TCNTH       equ	15635	;# 
   443   003D14                     SPI1CON0        equ	15636	;# 
   444   003D15                     SPI1CON1        equ	15637	;# 
   445   003D16                     SPI1CON2        equ	15638	;# 
   446   003D17                     SPI1STATUS      equ	15639	;# 
   447   003D18                     SPI1TWIDTH      equ	15640	;# 
   448   003D19                     SPI1BAUD        equ	15641	;# 
   449   003D1A                     SPI1INTF        equ	15642	;# 
   450   003D1B                     SPI1INTE        equ	15643	;# 
   451   003D1C                     SPI1CLK         equ	15644	;# 
   452   003D54                     I2C2RXB         equ	15700	;# 
   453   003D55                     I2C2TXB         equ	15701	;# 
   454   003D56                     I2C2CNT         equ	15702	;# 
   455   003D57                     I2C2ADB0        equ	15703	;# 
   456   003D58                     I2C2ADB1        equ	15704	;# 
   457   003D59                     I2C2ADR0        equ	15705	;# 
   458   003D5A                     I2C2ADR1        equ	15706	;# 
   459   003D5B                     I2C2ADR2        equ	15707	;# 
   460   003D5C                     I2C2ADR3        equ	15708	;# 
   461   003D5D                     I2C2CON0        equ	15709	;# 
   462   003D5E                     I2C2CON1        equ	15710	;# 
   463   003D5F                     I2C2CON2        equ	15711	;# 
   464   003D60                     I2C2ERR         equ	15712	;# 
   465   003D61                     I2C2STAT0       equ	15713	;# 
   466   003D62                     I2C2STAT1       equ	15714	;# 
   467   003D63                     I2C2PIR         equ	15715	;# 
   468   003D64                     I2C2PIE         equ	15716	;# 
   469   003D65                     I2C2CLK         equ	15717	;# 
   470   003D66                     I2C2BTO         equ	15718	;# 
   471   003D6A                     I2C1RXB         equ	15722	;# 
   472   003D6B                     I2C1TXB         equ	15723	;# 
   473   003D6C                     I2C1CNT         equ	15724	;# 
   474   003D6D                     I2C1ADB0        equ	15725	;# 
   475   003D6E                     I2C1ADB1        equ	15726	;# 
   476   003D6F                     I2C1ADR0        equ	15727	;# 
   477   003D70                     I2C1ADR1        equ	15728	;# 
   478   003D71                     I2C1ADR2        equ	15729	;# 
   479   003D72                     I2C1ADR3        equ	15730	;# 
   480   003D73                     I2C1CON0        equ	15731	;# 
   481   003D74                     I2C1CON1        equ	15732	;# 
   482   003D75                     I2C1CON2        equ	15733	;# 
   483   003D76                     I2C1ERR         equ	15734	;# 
   484   003D77                     I2C1STAT0       equ	15735	;# 
   485   003D78                     I2C1STAT1       equ	15736	;# 
   486   003D79                     I2C1PIR         equ	15737	;# 
   487   003D7A                     I2C1PIE         equ	15738	;# 
   488   003D7B                     I2C1CLK         equ	15739	;# 
   489   003D7C                     I2C1BTO         equ	15740	;# 
   490   003DD0                     U2RXB           equ	15824	;# 
   491   003DD0                     U2RXBL          equ	15824	;# 
   492   003DD2                     U2TXB           equ	15826	;# 
   493   003DD2                     U2TXBL          equ	15826	;# 
   494   003DD4                     U2P1            equ	15828	;# 
   495   003DD4                     U2P1L           equ	15828	;# 
   496   003DD6                     U2P2            equ	15830	;# 
   497   003DD6                     U2P2L           equ	15830	;# 
   498   003DD8                     U2P3            equ	15832	;# 
   499   003DD8                     U2P3L           equ	15832	;# 
   500   003DDA                     U2CON0          equ	15834	;# 
   501   003DDB                     U2CON1          equ	15835	;# 
   502   003DDC                     U2CON2          equ	15836	;# 
   503   003DDD                     U2BRG           equ	15837	;# 
   504   003DDD                     U2BRGL          equ	15837	;# 
   505   003DDE                     U2BRGH          equ	15838	;# 
   506   003DDF                     U2FIFO          equ	15839	;# 
   507   003DE0                     U2UIR           equ	15840	;# 
   508   003DE1                     U2ERRIR         equ	15841	;# 
   509   003DE2                     U2ERRIE         equ	15842	;# 
   510   003DE8                     U1RXB           equ	15848	;# 
   511   003DE8                     U1RXBL          equ	15848	;# 
   512   003DE9                     U1RXCHK         equ	15849	;# 
   513   003DEA                     U1TXB           equ	15850	;# 
   514   003DEA                     U1TXBL          equ	15850	;# 
   515   003DEB                     U1TXCHK         equ	15851	;# 
   516   003DEC                     U1P1            equ	15852	;# 
   517   003DEC                     U1P1L           equ	15852	;# 
   518   003DED                     U1P1H           equ	15853	;# 
   519   003DEE                     U1P2            equ	15854	;# 
   520   003DEE                     U1P2L           equ	15854	;# 
   521   003DEF                     U1P2H           equ	15855	;# 
   522   003DF0                     U1P3            equ	15856	;# 
   523   003DF0                     U1P3L           equ	15856	;# 
   524   003DF1                     U1P3H           equ	15857	;# 
   525   003DF2                     U1CON0          equ	15858	;# 
   526   003DF3                     U1CON1          equ	15859	;# 
   527   003DF4                     U1CON2          equ	15860	;# 
   528   003DF5                     U1BRG           equ	15861	;# 
   529   003DF5                     U1BRGL          equ	15861	;# 
   530   003DF6                     U1BRGH          equ	15862	;# 
   531   003DF7                     U1FIFO          equ	15863	;# 
   532   003DF8                     U1UIR           equ	15864	;# 
   533   003DF9                     U1ERRIR         equ	15865	;# 
   534   003DFA                     U1ERRIE         equ	15866	;# 
   535   003E9C                     DAC1CON1        equ	16028	;# 
   536   003E9E                     DAC1CON0        equ	16030	;# 
   537   003EB8                     CM2CON0         equ	16056	;# 
   538   003EB9                     CM2CON1         equ	16057	;# 
   539   003EBA                     CM2NCH          equ	16058	;# 
   540   003EBB                     CM2PCH          equ	16059	;# 
   541   003EBC                     CM1CON0         equ	16060	;# 
   542   003EBD                     CM1CON1         equ	16061	;# 
   543   003EBE                     CM1NCH          equ	16062	;# 
   544   003EBF                     CM1PCH          equ	16063	;# 
   545   003EC0                     CMOUT           equ	16064	;# 
   546   003EC1                     FVRCON          equ	16065	;# 
   547   003EC3                     ZCDCON          equ	16067	;# 
   548   003EC9                     HLVDCON0        equ	16073	;# 
   549   003ECA                     HLVDCON1        equ	16074	;# 
   550   003ED7                     ADCP            equ	16087	;# 
   551   003EDE                     ADLTH           equ	16094	;# 
   552   003EDE                     ADLTHL          equ	16094	;# 
   553   003EDF                     ADLTHH          equ	16095	;# 
   554   003EE0                     ADUTH           equ	16096	;# 
   555   003EE0                     ADUTHL          equ	16096	;# 
   556   003EE1                     ADUTHH          equ	16097	;# 
   557   003EE2                     ADERR           equ	16098	;# 
   558   003EE2                     ADERRL          equ	16098	;# 
   559   003EE3                     ADERRH          equ	16099	;# 
   560   003EE4                     ADSTPT          equ	16100	;# 
   561   003EE4                     ADSTPTL         equ	16100	;# 
   562   003EE5                     ADSTPTH         equ	16101	;# 
   563   003EE6                     ADFLTR          equ	16102	;# 
   564   003EE6                     ADFLTRL         equ	16102	;# 
   565   003EE7                     ADFLTRH         equ	16103	;# 
   566   003EE8                     ADACC           equ	16104	;# 
   567   003EE8                     ADACCL          equ	16104	;# 
   568   003EE9                     ADACCH          equ	16105	;# 
   569   003EEA                     ADACCU          equ	16106	;# 
   570   003EEB                     ADCNT           equ	16107	;# 
   571   003EEC                     ADRPT           equ	16108	;# 
   572   003EED                     ADPREV          equ	16109	;# 
   573   003EED                     ADPREVL         equ	16109	;# 
   574   003EEE                     ADPREVH         equ	16110	;# 
   575   003EEF                     ADRES           equ	16111	;# 
   576   003EEF                     ADRESL          equ	16111	;# 
   577   003EF0                     ADRESH          equ	16112	;# 
   578   003EF1                     ADPCH           equ	16113	;# 
   579   003EF3                     ADACQ           equ	16115	;# 
   580   003EF3                     ADACQL          equ	16115	;# 
   581   003EF4                     ADACQH          equ	16116	;# 
   582   003EF5                     ADCAP           equ	16117	;# 
   583   003EF6                     ADPRE           equ	16118	;# 
   584   003EF6                     ADPREL          equ	16118	;# 
   585   003EF7                     ADPREH          equ	16119	;# 
   586   003EF8                     ADCON0          equ	16120	;# 
   587   003EF9                     ADCON1          equ	16121	;# 
   588   003EFA                     ADCON2          equ	16122	;# 
   589   003EFB                     ADCON3          equ	16123	;# 
   590   003EFC                     ADSTAT          equ	16124	;# 
   591   003EFD                     ADREF           equ	16125	;# 
   592   003EFE                     ADACT           equ	16126	;# 
   593   003EFF                     ADCLK           equ	16127	;# 
   594   003F12                     SMT1TMR         equ	16146	;# 
   595   003F12                     SMT1TMRL        equ	16146	;# 
   596   003F13                     SMT1TMRH        equ	16147	;# 
   597   003F14                     SMT1TMRU        equ	16148	;# 
   598   003F15                     SMT1CPR         equ	16149	;# 
   599   003F15                     SMT1CPRL        equ	16149	;# 
   600   003F16                     SMT1CPRH        equ	16150	;# 
   601   003F17                     SMT1CPRU        equ	16151	;# 
   602   003F18                     SMT1CPW         equ	16152	;# 
   603   003F18                     SMT1CPWL        equ	16152	;# 
   604   003F19                     SMT1CPWH        equ	16153	;# 
   605   003F1A                     SMT1CPWU        equ	16154	;# 
   606   003F1B                     SMT1PR          equ	16155	;# 
   607   003F1B                     SMT1PRL         equ	16155	;# 
   608   003F1C                     SMT1PRH         equ	16156	;# 
   609   003F1D                     SMT1PRU         equ	16157	;# 
   610   003F1E                     SMT1CON0        equ	16158	;# 
   611   003F1F                     SMT1CON1        equ	16159	;# 
   612   003F20                     SMT1STAT        equ	16160	;# 
   613   003F21                     SMT1CLK         equ	16161	;# 
   614   003F22                     SMT1SIG         equ	16162	;# 
   615   003F23                     SMT1WIN         equ	16163	;# 
   616   003F38                     NCO1ACC         equ	16184	;# 
   617   003F38                     NCO1ACCL        equ	16184	;# 
   618   003F39                     NCO1ACCH        equ	16185	;# 
   619   003F3A                     NCO1ACCU        equ	16186	;# 
   620   003F3B                     NCO1INC         equ	16187	;# 
   621   003F3B                     NCO1INCL        equ	16187	;# 
   622   003F3C                     NCO1INCH        equ	16188	;# 
   623   003F3D                     NCO1INCU        equ	16189	;# 
   624   003F3E                     NCO1CON         equ	16190	;# 
   625   003F3F                     NCO1CLK         equ	16191	;# 
   626   003F40                     CWG3CLK         equ	16192	;# 
   627   003F40                     CWG3CLKCON      equ	16192	;# 
   628   003F41                     CWG3ISM         equ	16193	;# 
   629   003F41                     CWG3DAT         equ	16193	;# 
   630   003F42                     CWG3DBR         equ	16194	;# 
   631   003F43                     CWG3DBF         equ	16195	;# 
   632   003F44                     CWG3CON0        equ	16196	;# 
   633   003F45                     CWG3CON1        equ	16197	;# 
   634   003F46                     CWG3AS0         equ	16198	;# 
   635   003F47                     CWG3AS1         equ	16199	;# 
   636   003F48                     CWG3STR         equ	16200	;# 
   637   003F49                     CWG2CLK         equ	16201	;# 
   638   003F49                     CWG2CLKCON      equ	16201	;# 
   639   003F4A                     CWG2ISM         equ	16202	;# 
   640   003F4A                     CWG2DAT         equ	16202	;# 
   641   003F4B                     CWG2DBR         equ	16203	;# 
   642   003F4C                     CWG2DBF         equ	16204	;# 
   643   003F4D                     CWG2CON0        equ	16205	;# 
   644   003F4E                     CWG2CON1        equ	16206	;# 
   645   003F4F                     CWG2AS0         equ	16207	;# 
   646   003F50                     CWG2AS1         equ	16208	;# 
   647   003F51                     CWG2STR         equ	16209	;# 
   648   003F52                     CWG1CLK         equ	16210	;# 
   649   003F52                     CWG1CLKCON      equ	16210	;# 
   650   003F53                     CWG1ISM         equ	16211	;# 
   651   003F53                     CWG1DAT         equ	16211	;# 
   652   003F54                     CWG1DBR         equ	16212	;# 
   653   003F55                     CWG1DBF         equ	16213	;# 
   654   003F56                     CWG1CON0        equ	16214	;# 
   655   003F57                     CWG1CON1        equ	16215	;# 
   656   003F58                     CWG1AS0         equ	16216	;# 
   657   003F59                     CWG1AS1         equ	16217	;# 
   658   003F5A                     CWG1STR         equ	16218	;# 
   659   003F5E                     CCPTMRS0        equ	16222	;# 
   660   003F5F                     CCPTMRS1        equ	16223	;# 
   661   003F60                     PWM8DC          equ	16224	;# 
   662   003F60                     PWM8DCL         equ	16224	;# 
   663   003F61                     PWM8DCH         equ	16225	;# 
   664   003F62                     PWM8CON         equ	16226	;# 
   665   003F64                     PWM7DC          equ	16228	;# 
   666   003F64                     PWM7DCL         equ	16228	;# 
   667   003F65                     PWM7DCH         equ	16229	;# 
   668   003F66                     PWM7CON         equ	16230	;# 
   669   003F68                     PWM6DC          equ	16232	;# 
   670   003F68                     PWM6DCL         equ	16232	;# 
   671   003F69                     PWM6DCH         equ	16233	;# 
   672   003F6A                     PWM6CON         equ	16234	;# 
   673   003F6C                     PWM5DC          equ	16236	;# 
   674   003F6C                     PWM5DCL         equ	16236	;# 
   675   003F6D                     PWM5DCH         equ	16237	;# 
   676   003F6E                     PWM5CON         equ	16238	;# 
   677   003F70                     CCPR4           equ	16240	;# 
   678   003F70                     CCPR4L          equ	16240	;# 
   679   003F71                     CCPR4H          equ	16241	;# 
   680   003F72                     CCP4CON         equ	16242	;# 
   681   003F73                     CCP4CAP         equ	16243	;# 
   682   003F74                     CCPR3           equ	16244	;# 
   683   003F74                     CCPR3L          equ	16244	;# 
   684   003F75                     CCPR3H          equ	16245	;# 
   685   003F76                     CCP3CON         equ	16246	;# 
   686   003F77                     CCP3CAP         equ	16247	;# 
   687   003F78                     CCPR2           equ	16248	;# 
   688   003F78                     CCPR2L          equ	16248	;# 
   689   003F79                     CCPR2H          equ	16249	;# 
   690   003F7A                     CCP2CON         equ	16250	;# 
   691   003F7B                     CCP2CAP         equ	16251	;# 
   692   003F7C                     CCPR1           equ	16252	;# 
   693   003F7C                     CCPR1L          equ	16252	;# 
   694   003F7D                     CCPR1H          equ	16253	;# 
   695   003F7E                     CCP1CON         equ	16254	;# 
   696   003F7F                     CCP1CAP         equ	16255	;# 
   697   003F92                     T6TMR           equ	16274	;# 
   698   003F92                     TMR6            equ	16274	;# 
   699   003F93                     T6PR            equ	16275	;# 
   700   003F93                     PR6             equ	16275	;# 
   701   003F94                     T6CON           equ	16276	;# 
   702   003F95                     T6HLT           equ	16277	;# 
   703   003F96                     T6CLKCON        equ	16278	;# 
   704   003F96                     T6CLK           equ	16278	;# 
   705   003F97                     T6RST           equ	16279	;# 
   706   003F98                     TMR5            equ	16280	;# 
   707   003F98                     TMR5L           equ	16280	;# 
   708   003F99                     TMR5H           equ	16281	;# 
   709   003F9A                     T5CON           equ	16282	;# 
   710   003F9A                     TMR5CON         equ	16282	;# 
   711   003F9B                     T5GCON          equ	16283	;# 
   712   003F9B                     TMR5GCON        equ	16283	;# 
   713   003F9C                     T5GATE          equ	16284	;# 
   714   003F9C                     TMR5GATE        equ	16284	;# 
   715   003F9D                     T5CLK           equ	16285	;# 
   716   003F9D                     TMR5CLK         equ	16285	;# 
   717   003F9D                     PR5             equ	16285	;# 
   718   003F9E                     T4TMR           equ	16286	;# 
   719   003F9E                     TMR4            equ	16286	;# 
   720   003F9F                     T4PR            equ	16287	;# 
   721   003F9F                     PR4             equ	16287	;# 
   722   003FA0                     T4CON           equ	16288	;# 
   723   003FA1                     T4HLT           equ	16289	;# 
   724   003FA2                     T4CLKCON        equ	16290	;# 
   725   003FA2                     T4CLK           equ	16290	;# 
   726   003FA3                     T4RST           equ	16291	;# 
   727   003FA4                     TMR3            equ	16292	;# 
   728   003FA4                     TMR3L           equ	16292	;# 
   729   003FA5                     TMR3H           equ	16293	;# 
   730   003FA6                     T3CON           equ	16294	;# 
   731   003FA6                     TMR3CON         equ	16294	;# 
   732   003FA7                     T3GCON          equ	16295	;# 
   733   003FA7                     TMR3GCON        equ	16295	;# 
   734   003FA8                     T3GATE          equ	16296	;# 
   735   003FA8                     TMR3GATE        equ	16296	;# 
   736   003FA9                     T3CLK           equ	16297	;# 
   737   003FA9                     TMR3CLK         equ	16297	;# 
   738   003FA9                     PR3             equ	16297	;# 
   739   003FAA                     T2TMR           equ	16298	;# 
   740   003FAA                     TMR2            equ	16298	;# 
   741   003FAB                     T2PR            equ	16299	;# 
   742   003FAB                     PR2             equ	16299	;# 
   743   003FAC                     T2CON           equ	16300	;# 
   744   003FAD                     T2HLT           equ	16301	;# 
   745   003FAE                     T2CLKCON        equ	16302	;# 
   746   003FAE                     T2CLK           equ	16302	;# 
   747   003FAF                     T2RST           equ	16303	;# 
   748   003FB0                     TMR1            equ	16304	;# 
   749   003FB0                     TMR1L           equ	16304	;# 
   750   003FB1                     TMR1H           equ	16305	;# 
   751   003FB2                     T1CON           equ	16306	;# 
   752   003FB2                     TMR1CON         equ	16306	;# 
   753   003FB3                     T1GCON          equ	16307	;# 
   754   003FB3                     TMR1GCON        equ	16307	;# 
   755   003FB4                     T1GATE          equ	16308	;# 
   756   003FB4                     TMR1GATE        equ	16308	;# 
   757   003FB5                     T1CLK           equ	16309	;# 
   758   003FB5                     TMR1CLK         equ	16309	;# 
   759   003FB5                     PR1             equ	16309	;# 
   760   003FB6                     TMR0L           equ	16310	;# 
   761   003FB6                     TMR0            equ	16310	;# 
   762   003FB7                     TMR0H           equ	16311	;# 
   763   003FB7                     PR0             equ	16311	;# 
   764   003FB8                     T0CON0          equ	16312	;# 
   765   003FB9                     T0CON1          equ	16313	;# 
   766   003FBA                     LATA            equ	16314	;# 
   767   003FBB                     LATB            equ	16315	;# 
   768   003FBC                     LATC            equ	16316	;# 
   769   003FBD                     LATD            equ	16317	;# 
   770   003FBE                     LATE            equ	16318	;# 
   771   003FC2                     TRISA           equ	16322	;# 
   772   003FC3                     TRISB           equ	16323	;# 
   773   003FC4                     TRISC           equ	16324	;# 
   774   003FC5                     TRISD           equ	16325	;# 
   775   003FC6                     TRISE           equ	16326	;# 
   776   003FCA                     PORTA           equ	16330	;# 
   777   003FCB                     PORTB           equ	16331	;# 
   778   003FCC                     PORTC           equ	16332	;# 
   779   003FCD                     PORTD           equ	16333	;# 
   780   003FCE                     PORTE           equ	16334	;# 
   781   003FD2                     INTCON0         equ	16338	;# 
   782   003FD3                     INTCON1         equ	16339	;# 
   783   003FD4                     IVTLOCK         equ	16340	;# 
   784   003FD5                     IVTBASE         equ	16341	;# 
   785   003FD5                     IVTBASEL        equ	16341	;# 
   786   003FD6                     IVTBASEH        equ	16342	;# 
   787   003FD7                     IVTBASEU        equ	16343	;# 
   788   003FD8                     STATUS          equ	16344	;# 
   789   003FD9                     FSR2            equ	16345	;# 
   790   003FD9                     FSR2L           equ	16345	;# 
   791   003FDA                     FSR2H           equ	16346	;# 
   792   003FDB                     PLUSW2          equ	16347	;# 
   793   003FDC                     PREINC2         equ	16348	;# 
   794   003FDD                     POSTDEC2        equ	16349	;# 
   795   003FDE                     POSTINC2        equ	16350	;# 
   796   003FDF                     INDF2           equ	16351	;# 
   797   003FE0                     BSR             equ	16352	;# 
   798   003FE1                     FSR1            equ	16353	;# 
   799   003FE1                     FSR1L           equ	16353	;# 
   800   003FE2                     FSR1H           equ	16354	;# 
   801   003FE3                     PLUSW1          equ	16355	;# 
   802   003FE4                     PREINC1         equ	16356	;# 
   803   003FE5                     POSTDEC1        equ	16357	;# 
   804   003FE6                     POSTINC1        equ	16358	;# 
   805   003FE7                     INDF1           equ	16359	;# 
   806   003FE8                     WREG            equ	16360	;# 
   807   003FE9                     FSR0            equ	16361	;# 
   808   003FE9                     FSR0L           equ	16361	;# 
   809   003FEA                     FSR0H           equ	16362	;# 
   810   003FEB                     PLUSW0          equ	16363	;# 
   811   003FEC                     PREINC0         equ	16364	;# 
   812   003FED                     POSTDEC0        equ	16365	;# 
   813   003FEE                     POSTINC0        equ	16366	;# 
   814   003FEF                     INDF0           equ	16367	;# 
   815   003FF0                     PCON0           equ	16368	;# 
   816   003FF1                     PCON1           equ	16369	;# 
   817   003FF3                     PROD            equ	16371	;# 
   818   003FF3                     PRODL           equ	16371	;# 
   819   003FF4                     PRODH           equ	16372	;# 
   820   003FF5                     TABLAT          equ	16373	;# 
   821   003FF6                     TBLPTR          equ	16374	;# 
   822   003FF6                     TBLPTRL         equ	16374	;# 
   823   003FF7                     TBLPTRH         equ	16375	;# 
   824   003FF8                     TBLPTRU         equ	16376	;# 
   825   003FF9                     PCLAT           equ	16377	;# 
   826   003FF9                     PCL             equ	16377	;# 
   827   003FFA                     PCLATH          equ	16378	;# 
   828   003FFB                     PCLATU          equ	16379	;# 
   829   003FFC                     STKPTR          equ	16380	;# 
   830   003FFD                     TOS             equ	16381	;# 
   831   003FFD                     TOSL            equ	16381	;# 
   832   003FFE                     TOSH            equ	16382	;# 
   833   003FFF                     TOSU            equ	16383	;# 
   834                           
   835                           	psect	smallconst
   836   002000                     __psmallconst:
   837                           	callstack 0
   838   002000  00                 	db	0
   839   002001                     _keymap:
   840                           	callstack 0
   841   002001  31                 	db	49
   842   002002  32                 	db	50
   843   002003  33                 	db	51
   844   002004  2B                 	db	43
   845   002005  34                 	db	52
   846   002006  35                 	db	53
   847   002007  36                 	db	54
   848   002008  2D                 	db	45
   849   002009  37                 	db	55
   850   00200A  38                 	db	56
   851   00200B  39                 	db	57
   852   00200C  2A                 	db	42
   853   00200D  43                 	db	67
   854   00200E  30                 	db	48
   855   00200F  3D                 	db	61
   856   002010  2F                 	db	47
   857   002011                     __end_of_keymap:
   858                           	callstack 0
   859   003A50                     _ANSELB         set	14928
   860   003A70                     _ANSELD         set	14960
   861   003FBB                     _LATB           set	16315
   862   003FC3                     _TRISB          set	16323
   863   003FCB                     _PORTBbits      set	16331
   864   003FBB                     _LATBbits       set	16315
   865   003FBD                     _LATD           set	16317
   866   003FC5                     _TRISD          set	16325
   867   002011  00                 	db	0	; dummy byte at the end
   868   002000                     __smallconst    set	__psmallconst
   869   002000                     __mediumconst   set	__psmallconst
   870   000003                     __activetblptr  equ	3
   871                           
   872                           ; #config settings
   873                           
   874                           	psect	cinit
   875   0023FE                     __pcinit:
   876                           	callstack 0
   877   0023FE                     start_initialization:
   878                           	callstack 0
   879   0023FE                     __initialization:
   880                           	callstack 0
   881                           
   882                           ; Clear objects allocated to COMRAM (4 bytes)
   883   0023FE  6A0E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   884   002400  6A0D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   885   002402  6A0C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   886   002404  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   887   002406                     end_of_initialization:
   888                           	callstack 0
   889   002406                     __end_of__initialization:
   890                           	callstack 0
   891   002406  0100               	movlb	0
   892   002408  EF09  F010         	goto	_main	;jump to C main() function
   893                           
   894                           	psect	bssCOMRAM
   895   00000B                     __pbssCOMRAM:
   896                           	callstack 0
   897   00000B                     _state:
   898                           	callstack 0
   899   00000B                     	ds	1
   900   00000C                     _op:
   901                           	callstack 0
   902   00000C                     	ds	1
   903   00000D                     _Y_Input_REG:
   904                           	callstack 0
   905   00000D                     	ds	1
   906   00000E                     _X_Input_REG:
   907                           	callstack 0
   908   00000E                     	ds	1
   909                           
   910                           	psect	cstackCOMRAM
   911   000001                     __pcstackCOMRAM:
   912                           	callstack 0
   913   000001                     ___lbdiv@divisor:
   914                           	callstack 0
   915   000001                     ??_scan_keypad:
   916                           
   917                           ; 1 bytes @ 0x0
   918   000001                     	ds	1
   919   000002                     ___lbdiv@dividend:
   920                           	callstack 0
   921   000002                     
   922                           ; 1 bytes @ 0x1
   923   000002                     	ds	1
   924   000003                     ___lbdiv@counter:
   925                           	callstack 0
   926   000003                     scan_keypad@row:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x2
   930   000003                     	ds	1
   931   000004                     ___lbdiv@quotient:
   932                           	callstack 0
   933                           
   934                           ; 1 bytes @ 0x3
   935   000004                     	ds	1
   936   000005                     ??_main:
   937                           
   938                           ; 1 bytes @ 0x4
   939   000005                     	ds	2
   940   000007                     main@digit:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x6
   944   000007                     	ds	2
   945   000009                     main@Display_Result_REG:
   946                           	callstack 0
   947                           
   948                           ; 1 bytes @ 0x8
   949   000009                     	ds	1
   950   00000A                     main@Operation_REG:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x9
   954   00000A                     	ds	1
   955                           
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 115 in file "Calculator.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  Display_Resu    1    8[COMRAM] char 
   966 ;;  digit           2    6[COMRAM] int 
   967 ;;  Operation_RE    1    9[COMRAM] unsigned char 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   978 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   979 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   980 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   981 ;;Total ram usage:        6 bytes
   982 ;; Hardware stack levels required when called: 1
   983 ;; This function calls:
   984 ;;		___lbdiv
   985 ;;		_keypad_init
   986 ;;		_scan_keypad
   987 ;; This function is called by:
   988 ;;		Startup code after reset
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text0
   993   002012                     __ptext0:
   994                           	callstack 0
   995   002012                     _main:
   996                           	callstack 30
   997   002012                     
   998                           ;Calculator.c: 116:     keypad_init();
   999   002012  EC06  F012         	call	_keypad_init	;wreg free
  1000   002016                     
  1001                           ;Calculator.c: 118:     TRISD = 0x00;
  1002   002016  6AC5               	clrf	197,c	;volatile
  1003   002018                     
  1004                           ;Calculator.c: 119:     ANSELD = 0x00;
  1005   002018  013A               	movlb	58	; () banked
  1006   00201A  6B70               	clrf	112,b	;volatile
  1007   00201C                     l977:
  1008                           
  1009                           ;Calculator.c: 120:     LATD = 0x00;
  1010   00201C  6ABD               	clrf	189,c	;volatile
  1011   00201E                     l979:
  1012                           
  1013                           ;Calculator.c: 123:         char Operation_REG = scan_keypad();
  1014   00201E  ECFD  F010         	call	_scan_keypad	;wreg free
  1015   002022  6E0A               	movwf	main@Operation_REG^0,c
  1016   002024                     
  1017                           ;Calculator.c: 125:         if (Operation_REG != '\0') {
  1018   002024  500A               	movf	main@Operation_REG^0,w,c
  1019   002026  B4D8               	btfsc	status,2,c
  1020   002028  EF18  F010         	goto	u291
  1021   00202C  EF1A  F010         	goto	u290
  1022   002030                     u291:
  1023   002030  EF0F  F010         	goto	l979
  1024   002034                     u290:
  1025   002034                     
  1026                           ;Calculator.c: 126:             _delay((unsigned long)((300)*(4000000/4000.0)));
  1027   002034  0E02               	movlw	2
  1028   002036  6E06               	movwf	(??_main+1)^0,c
  1029   002038  0E86               	movlw	134
  1030   00203A  6E05               	movwf	??_main^0,c
  1031   00203C  0E99               	movlw	153
  1032   00203E                     u427:
  1033   00203E  2EE8               	decfsz	wreg,f,c
  1034   002040  D7FE               	bra	u427
  1035   002042  2E05               	decfsz	??_main^0,f,c
  1036   002044  D7FC               	bra	u427
  1037   002046  2E06               	decfsz	(??_main+1)^0,f,c
  1038   002048  D7FA               	bra	u427
  1039   00204A  0000               	nop	
  1040   00204C                     
  1041                           ;Calculator.c: 128:             if (Operation_REG >= '0' && Operation_REG <= '9') {
  1042   00204C  0E2F               	movlw	47
  1043   00204E  640A               	cpfsgt	main@Operation_REG^0,c
  1044   002050  EF2C  F010         	goto	u301
  1045   002054  EF2E  F010         	goto	u300
  1046   002058                     u301:
  1047   002058  EF61  F010         	goto	l1003
  1048   00205C                     u300:
  1049   00205C  0E3A               	movlw	58
  1050   00205E  600A               	cpfslt	main@Operation_REG^0,c
  1051   002060  EF34  F010         	goto	u311
  1052   002064  EF36  F010         	goto	u310
  1053   002068                     u311:
  1054   002068  EF61  F010         	goto	l1003
  1055   00206C                     u310:
  1056   00206C                     
  1057                           ;Calculator.c: 129:                 int digit = Operation_REG - '0';
  1058   00206C  0ED0               	movlw	208
  1059   00206E  240A               	addwf	main@Operation_REG^0,w,c
  1060   002070  6E07               	movwf	main@digit^0,c
  1061   002072  6A08               	clrf	(main@digit+1)^0,c
  1062   002074  0EFF               	movlw	255
  1063   002076  2208               	addwfc	(main@digit+1)^0,f,c
  1064   002078                     
  1065                           ;Calculator.c: 130:                 if (state == 0) {
  1066   002078  500B               	movf	_state^0,w,c
  1067   00207A  A4D8               	btfss	status,2,c
  1068   00207C  EF42  F010         	goto	u321
  1069   002080  EF44  F010         	goto	u320
  1070   002084                     u321:
  1071   002084  EF4E  F010         	goto	l997
  1072   002088                     u320:
  1073   002088                     
  1074                           ;Calculator.c: 131:                     X_Input_REG = X_Input_REG * 10 + digit;
  1075   002088  500E               	movf	_X_Input_REG^0,w,c
  1076   00208A  0D0A               	mullw	10
  1077   00208C  50F3               	movf	243,w,c
  1078   00208E  2407               	addwf	main@digit^0,w,c
  1079   002090  6E0E               	movwf	_X_Input_REG^0,c
  1080   002092                     
  1081                           ;Calculator.c: 132:                     LATD = X_Input_REG ;
  1082   002092  0060  F03B  FFBD   	movff	_X_Input_REG,16317	;volatile
  1083                           
  1084                           ;Calculator.c: 133:                 } else if (state == 2) {
  1085   002098  EF0F  F010         	goto	l979
  1086   00209C                     l997:
  1087   00209C  0E02               	movlw	2
  1088   00209E  180B               	xorwf	_state^0,w,c
  1089   0020A0  A4D8               	btfss	status,2,c
  1090   0020A2  EF55  F010         	goto	u331
  1091   0020A6  EF57  F010         	goto	u330
  1092   0020AA                     u331:
  1093   0020AA  EFF9  F010         	goto	l38
  1094   0020AE                     u330:
  1095   0020AE                     
  1096                           ;Calculator.c: 134:                     Y_Input_REG = Y_Input_REG * 10 + digit;
  1097   0020AE  500D               	movf	_Y_Input_REG^0,w,c
  1098   0020B0  0D0A               	mullw	10
  1099   0020B2  50F3               	movf	243,w,c
  1100   0020B4  2407               	addwf	main@digit^0,w,c
  1101   0020B6  6E0D               	movwf	_Y_Input_REG^0,c
  1102   0020B8                     
  1103                           ;Calculator.c: 135:                     LATD = Y_Input_REG;
  1104   0020B8  0060  F037  FFBD   	movff	_Y_Input_REG,16317	;volatile
  1105   0020BE  EF0F  F010         	goto	l979
  1106   0020C2                     l1003:
  1107   0020C2  0E2B               	movlw	43
  1108   0020C4  180A               	xorwf	main@Operation_REG^0,w,c
  1109   0020C6  B4D8               	btfsc	status,2,c
  1110   0020C8  EF68  F010         	goto	u341
  1111   0020CC  EF6A  F010         	goto	u340
  1112   0020D0                     u341:
  1113   0020D0  EF85  F010         	goto	l1011
  1114   0020D4                     u340:
  1115   0020D4  0E2D               	movlw	45
  1116   0020D6  180A               	xorwf	main@Operation_REG^0,w,c
  1117   0020D8  B4D8               	btfsc	status,2,c
  1118   0020DA  EF71  F010         	goto	u351
  1119   0020DE  EF73  F010         	goto	u350
  1120   0020E2                     u351:
  1121   0020E2  EF85  F010         	goto	l1011
  1122   0020E6                     u350:
  1123   0020E6  0E2A               	movlw	42
  1124   0020E8  180A               	xorwf	main@Operation_REG^0,w,c
  1125   0020EA  B4D8               	btfsc	status,2,c
  1126   0020EC  EF7A  F010         	goto	u361
  1127   0020F0  EF7C  F010         	goto	u360
  1128   0020F4                     u361:
  1129   0020F4  EF85  F010         	goto	l1011
  1130   0020F8                     u360:
  1131   0020F8  0E2F               	movlw	47
  1132   0020FA  180A               	xorwf	main@Operation_REG^0,w,c
  1133   0020FC  A4D8               	btfss	status,2,c
  1134   0020FE  EF83  F010         	goto	u371
  1135   002102  EF85  F010         	goto	u370
  1136   002106                     u371:
  1137   002106  EF93  F010         	goto	l1019
  1138   00210A                     u370:
  1139   00210A                     l1011:
  1140                           
  1141                           ;Calculator.c: 140:                 if (state == 0) {
  1142   00210A  500B               	movf	_state^0,w,c
  1143   00210C  A4D8               	btfss	status,2,c
  1144   00210E  EF8B  F010         	goto	u381
  1145   002112  EF8D  F010         	goto	u380
  1146   002116                     u381:
  1147   002116  EF0F  F010         	goto	l979
  1148   00211A                     u380:
  1149   00211A                     
  1150                           ;Calculator.c: 141:                     op = Operation_REG ;
  1151   00211A  C00A  F00C         	movff	main@Operation_REG,_op
  1152   00211E                     
  1153                           ;Calculator.c: 142:                     state = 2;
  1154   00211E  0E02               	movlw	2
  1155   002120  6E0B               	movwf	_state^0,c
  1156   002122  EF0E  F010         	goto	l977
  1157   002126                     l1019:
  1158   002126  0E3D               	movlw	61
  1159   002128  180A               	xorwf	main@Operation_REG^0,w,c
  1160   00212A  A4D8               	btfss	status,2,c
  1161   00212C  EF9A  F010         	goto	u391
  1162   002130  EF9C  F010         	goto	u390
  1163   002134                     u391:
  1164   002134  EFE9  F010         	goto	l1041
  1165   002138                     u390:
  1166   002138                     
  1167                           ;Calculator.c: 150:                 switch (op) {
  1168   002138  EFC2  F010         	goto	l1035
  1169   00213C                     l1023:
  1170   00213C  500E               	movf	_X_Input_REG^0,w,c
  1171   00213E  240D               	addwf	_Y_Input_REG^0,w,c
  1172   002140  6E09               	movwf	main@Display_Result_REG^0,c
  1173   002142  EFD5  F010         	goto	l52
  1174   002146                     l1025:
  1175   002146  500D               	movf	_Y_Input_REG^0,w,c
  1176   002148  5C0E               	subwf	_X_Input_REG^0,w,c
  1177   00214A  6E09               	movwf	main@Display_Result_REG^0,c
  1178   00214C  EFD5  F010         	goto	l52
  1179   002150                     l1027:
  1180   002150  500E               	movf	_X_Input_REG^0,w,c
  1181   002152  020D               	mulwf	_Y_Input_REG^0,c
  1182   002154  006F FFCC  F009    	movff	prodl,main@Display_Result_REG
  1183   00215A  EFD5  F010         	goto	l52
  1184   00215E                     l1029:
  1185   00215E  500D               	movf	_Y_Input_REG^0,w,c
  1186   002160  B4D8               	btfsc	status,2,c
  1187   002162  EFB5  F010         	goto	u401
  1188   002166  EFB7  F010         	goto	u400
  1189   00216A                     u401:
  1190   00216A  EFBF  F010         	goto	l56
  1191   00216E                     u400:
  1192   00216E                     
  1193                           ;Calculator.c: 155:                                     Display_Result_REG = X_Input_REG
      +                           / Y_Input_REG;
  1194   00216E  C00D  F001         	movff	_Y_Input_REG,___lbdiv@divisor
  1195   002172  500E               	movf	_X_Input_REG^0,w,c
  1196   002174  ECD2  F011         	call	___lbdiv
  1197   002178  6E09               	movwf	main@Display_Result_REG^0,c
  1198                           
  1199                           ;Calculator.c: 156:                               } else {
  1200   00217A  EFD5  F010         	goto	l52
  1201   00217E                     l56:
  1202                           
  1203                           ;Calculator.c: 157:                                   Display_Result_REG = 0;
  1204   00217E  6A09               	clrf	main@Display_Result_REG^0,c
  1205   002180  EFD5  F010         	goto	l52
  1206   002184                     l1035:
  1207   002184  500C               	movf	_op^0,w,c
  1208                           
  1209                           ; Switch size 1, requested type "simple"
  1210                           ; Number of cases is 4, Range of values is 42 to 47
  1211                           ; switch strategies available:
  1212                           ; Name         Instructions Cycles
  1213                           ; simple_byte           13     7 (average)
  1214                           ;	Chosen strategy is simple_byte
  1215   002186  0A2A               	xorlw	42	; case 42
  1216   002188  B4D8               	btfsc	status,2,c
  1217   00218A  EFA8  F010         	goto	l1027
  1218   00218E  0A01               	xorlw	1	; case 43
  1219   002190  B4D8               	btfsc	status,2,c
  1220   002192  EF9E  F010         	goto	l1023
  1221   002196  0A06               	xorlw	6	; case 45
  1222   002198  B4D8               	btfsc	status,2,c
  1223   00219A  EFA3  F010         	goto	l1025
  1224   00219E  0A02               	xorlw	2	; case 47
  1225   0021A0  B4D8               	btfsc	status,2,c
  1226   0021A2  EFAF  F010         	goto	l1029
  1227   0021A6  EFBF  F010         	goto	l56
  1228   0021AA                     l52:
  1229                           
  1230                           ;Calculator.c: 162:                 LATD = Display_Result_REG;
  1231   0021AA  0060  F027  FFBD   	movff	main@Display_Result_REG,16317	;volatile
  1232                           
  1233                           ;Calculator.c: 165:                 X_Input_REG = 0; Y_Input_REG = 0; op = '\0'; state =
      +                           0;
  1234   0021B0  6A0E               	clrf	_X_Input_REG^0,c
  1235   0021B2  6A0D               	clrf	_Y_Input_REG^0,c
  1236   0021B4  6A0C               	clrf	_op^0,c
  1237   0021B6  6A0B               	clrf	_state^0,c
  1238   0021B8                     
  1239                           ;Calculator.c: 166:                 _delay((unsigned long)((2000)*(4000000/4000.0)));
  1240   0021B8  0E0B               	movlw	11
  1241   0021BA  6E06               	movwf	(??_main+1)^0,c
  1242   0021BC  0E26               	movlw	38
  1243   0021BE  6E05               	movwf	??_main^0,c
  1244   0021C0  0E5E               	movlw	94
  1245   0021C2                     u437:
  1246   0021C2  2EE8               	decfsz	wreg,f,c
  1247   0021C4  D7FE               	bra	u437
  1248   0021C6  2E05               	decfsz	??_main^0,f,c
  1249   0021C8  D7FC               	bra	u437
  1250   0021CA  2E06               	decfsz	(??_main+1)^0,f,c
  1251   0021CC  D7FA               	bra	u437
  1252   0021CE  EF0E  F010         	goto	l977
  1253   0021D2                     l1041:
  1254   0021D2  0E43               	movlw	67
  1255   0021D4  180A               	xorwf	main@Operation_REG^0,w,c
  1256   0021D6  A4D8               	btfss	status,2,c
  1257   0021D8  EFF0  F010         	goto	u411
  1258   0021DC  EFF2  F010         	goto	u410
  1259   0021E0                     u411:
  1260   0021E0  EFF9  F010         	goto	l38
  1261   0021E4                     u410:
  1262   0021E4                     
  1263                           ;Calculator.c: 173:                 X_Input_REG = 0; Y_Input_REG = 0; op = '\0'; state =
      +                           0;
  1264   0021E4  6A0E               	clrf	_X_Input_REG^0,c
  1265   0021E6  6A0D               	clrf	_Y_Input_REG^0,c
  1266   0021E8  6A0C               	clrf	_op^0,c
  1267   0021EA  6A0B               	clrf	_state^0,c
  1268                           
  1269                           ;Calculator.c: 174:                 LATD = 0x00;
  1270   0021EC  6ABD               	clrf	189,c	;volatile
  1271   0021EE  EF0F  F010         	goto	l979
  1272   0021F2                     l38:
  1273   0021F2  EF0F  F010         	goto	l979
  1274   0021F6  EFFE  F0FF         	goto	start
  1275   0021FA                     __end_of_main:
  1276                           	callstack 0
  1277                           
  1278 ;; *************** function _scan_keypad *****************
  1279 ;; Defined at:
  1280 ;;		line 181 in file "Calculator.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  row             2    2[COMRAM] int 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      unsigned char 
  1287 ;; Registers used:
  1288 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1296 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1297 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1298 ;;Total ram usage:        4 bytes
  1299 ;; Hardware stack levels used: 1
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text1
  1308   0021FA                     __ptext1:
  1309                           	callstack 0
  1310   0021FA                     _scan_keypad:
  1311                           	callstack 30
  1312   0021FA                     
  1313                           ;Calculator.c: 182:     for (int row = 0; row < 4; row++) {
  1314   0021FA  0E00               	movlw	0
  1315   0021FC  6E04               	movwf	(scan_keypad@row+1)^0,c
  1316   0021FE  0E00               	movlw	0
  1317   002200  6E03               	movwf	scan_keypad@row^0,c
  1318   002202                     l66:
  1319                           
  1320                           ;Calculator.c: 184:         LATBbits.LATB0 = LATBbits.LATB1 = LATBbits.LATB2 = LATBbits.
      +                          LATB3 = 0;
  1321   002202  96BB               	bcf	187,3,c	;volatile
  1322   002204  94BB               	bcf	187,2,c	;volatile
  1323   002206  92BB               	bcf	187,1,c	;volatile
  1324   002208  90BB               	bcf	187,0,c	;volatile
  1325                           
  1326                           ;Calculator.c: 187:         switch (row) {
  1327   00220A  EF13  F011         	goto	l783
  1328   00220E                     l69:
  1329   00220E  80BB               	bsf	187,0,c	;volatile
  1330   002210  EF31  F011         	goto	l785
  1331   002214                     l71:
  1332   002214  82BB               	bsf	187,1,c	;volatile
  1333   002216  EF31  F011         	goto	l785
  1334   00221A                     l72:
  1335   00221A  84BB               	bsf	187,2,c	;volatile
  1336   00221C  EF31  F011         	goto	l785
  1337   002220                     l73:
  1338   002220  86BB               	bsf	187,3,c	;volatile
  1339   002222  EF31  F011         	goto	l785
  1340   002226                     l783:
  1341   002226  C003  F001         	movff	scan_keypad@row,??_scan_keypad
  1342   00222A  C004  F002         	movff	scan_keypad@row+1,??_scan_keypad+1
  1343                           
  1344                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1345                           ; Switch size 1, requested type "simple"
  1346                           ; Number of cases is 1, Range of values is 0 to 0
  1347                           ; switch strategies available:
  1348                           ; Name         Instructions Cycles
  1349                           ; simple_byte            4     3 (average)
  1350                           ;	Chosen strategy is simple_byte
  1351   00222E  5002               	movf	(??_scan_keypad+1)^0,w,c
  1352   002230  0A00               	xorlw	0	; case 0
  1353   002232  B4D8               	btfsc	status,2,c
  1354   002234  EF1E  F011         	goto	l1065
  1355   002238  EF31  F011         	goto	l785
  1356   00223C                     l1065:
  1357                           
  1358                           ; Switch size 1, requested type "simple"
  1359                           ; Number of cases is 4, Range of values is 0 to 3
  1360                           ; switch strategies available:
  1361                           ; Name         Instructions Cycles
  1362                           ; simple_byte           13     7 (average)
  1363                           ;	Chosen strategy is simple_byte
  1364   00223C  5001               	movf	??_scan_keypad^0,w,c
  1365   00223E  0A00               	xorlw	0	; case 0
  1366   002240  B4D8               	btfsc	status,2,c
  1367   002242  EF07  F011         	goto	l69
  1368   002246  0A01               	xorlw	1	; case 1
  1369   002248  B4D8               	btfsc	status,2,c
  1370   00224A  EF0A  F011         	goto	l71
  1371   00224E  0A03               	xorlw	3	; case 2
  1372   002250  B4D8               	btfsc	status,2,c
  1373   002252  EF0D  F011         	goto	l72
  1374   002256  0A01               	xorlw	1	; case 3
  1375   002258  B4D8               	btfsc	status,2,c
  1376   00225A  EF10  F011         	goto	l73
  1377   00225E  EF31  F011         	goto	l785
  1378   002262                     l785:
  1379                           
  1380                           ;Calculator.c: 194:         _delay((unsigned long)((5)*(4000000/4000.0)));
  1381   002262  0E07               	movlw	7
  1382   002264  6E01               	movwf	??_scan_keypad^0,c
  1383   002266  0E7D               	movlw	125
  1384   002268                     u447:
  1385   002268  2EE8               	decfsz	wreg,f,c
  1386   00226A  D7FE               	bra	u447
  1387   00226C  2E01               	decfsz	??_scan_keypad^0,f,c
  1388   00226E  D7FC               	bra	u447
  1389   002270  0000               	nop	
  1390   002272                     
  1391                           ;Calculator.c: 196:         if (PORTBbits.RB4 == 1) { while (PORTBbits.RB4 == 1); return
      +                           keymap[row][0]; }
  1392   002272  A8CB               	btfss	203,4,c	;volatile
  1393   002274  EF3E  F011         	goto	u11
  1394   002278  EF40  F011         	goto	u10
  1395   00227C                     u11:
  1396   00227C  EF57  F011         	goto	l74
  1397   002280                     u10:
  1398   002280                     l75:
  1399   002280  B8CB               	btfsc	203,4,c	;volatile
  1400   002282  EF45  F011         	goto	u21
  1401   002286  EF47  F011         	goto	u20
  1402   00228A                     u21:
  1403   00228A  EF40  F011         	goto	l75
  1404   00228E                     u20:
  1405   00228E  5003               	movf	scan_keypad@row^0,w,c
  1406   002290  0D04               	mullw	4
  1407   002292  50F3               	movf	243,w,c
  1408   002294  0F01               	addlw	low _keymap
  1409   002296  6E01               	movwf	??_scan_keypad^0,c
  1410   002298  0060  F007  FFF6   	movff	??_scan_keypad,tblptrl
  1411   00229E                     	if	1	;There is more than 1 active tblptr byte
  1412   00229E  0E20               	movlw	high __smallconst
  1413   0022A0  6EF7               	movwf	tblptrh,c
  1414   0022A2                     	endif
  1415   0022A2                     	if	0	;tblptru may be non-zero
  1416   0022A2                     	endif
  1417   0022A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1418   0022A2  0E00               	movlw	low (__smallconst shr (0+16))
  1419   0022A4  6EF8               	movwf	tblptru,c
  1420   0022A6                     	endif
  1421   0022A6  0008               	tblrd		*
  1422   0022A8  50F5               	movf	tablat,w,c
  1423   0022AA  EFD1  F011         	goto	l78
  1424   0022AE                     l74:
  1425                           
  1426                           ;Calculator.c: 197:         if (PORTBbits.RB5 == 1) { while (PORTBbits.RB5 == 1); return
      +                           keymap[row][1]; }
  1427   0022AE  AACB               	btfss	203,5,c	;volatile
  1428   0022B0  EF5C  F011         	goto	u31
  1429   0022B4  EF5E  F011         	goto	u30
  1430   0022B8                     u31:
  1431   0022B8  EF7A  F011         	goto	l79
  1432   0022BC                     u30:
  1433   0022BC                     l80:
  1434   0022BC  BACB               	btfsc	203,5,c	;volatile
  1435   0022BE  EF63  F011         	goto	u41
  1436   0022C2  EF65  F011         	goto	u40
  1437   0022C6                     u41:
  1438   0022C6  EF5E  F011         	goto	l80
  1439   0022CA                     u40:
  1440   0022CA  5003               	movf	scan_keypad@row^0,w,c
  1441   0022CC  0D04               	mullw	4
  1442   0022CE  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1443   0022D4  0E01               	movlw	1
  1444   0022D6  2601               	addwf	??_scan_keypad^0,f,c
  1445   0022D8  5001               	movf	??_scan_keypad^0,w,c
  1446   0022DA  0F01               	addlw	low _keymap
  1447   0022DC  6E02               	movwf	(??_scan_keypad+1)^0,c
  1448   0022DE  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1449   0022E4                     	if	1	;There is more than 1 active tblptr byte
  1450   0022E4  0E20               	movlw	high __smallconst
  1451   0022E6  6EF7               	movwf	tblptrh,c
  1452   0022E8                     	endif
  1453   0022E8                     	if	0	;tblptru may be non-zero
  1454   0022E8                     	endif
  1455   0022E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1456   0022E8  0E00               	movlw	low (__smallconst shr (0+16))
  1457   0022EA  6EF8               	movwf	tblptru,c
  1458   0022EC                     	endif
  1459   0022EC  0008               	tblrd		*
  1460   0022EE  50F5               	movf	tablat,w,c
  1461   0022F0  EFD1  F011         	goto	l78
  1462   0022F4                     l79:
  1463                           
  1464                           ;Calculator.c: 198:         if (PORTBbits.RB6 == 1) { while (PORTBbits.RB6 == 1); return
      +                           keymap[row][2]; }
  1465   0022F4  ACCB               	btfss	203,6,c	;volatile
  1466   0022F6  EF7F  F011         	goto	u51
  1467   0022FA  EF81  F011         	goto	u50
  1468   0022FE                     u51:
  1469   0022FE  EF9D  F011         	goto	l83
  1470   002302                     u50:
  1471   002302                     l84:
  1472   002302  BCCB               	btfsc	203,6,c	;volatile
  1473   002304  EF86  F011         	goto	u61
  1474   002308  EF88  F011         	goto	u60
  1475   00230C                     u61:
  1476   00230C  EF81  F011         	goto	l84
  1477   002310                     u60:
  1478   002310  5003               	movf	scan_keypad@row^0,w,c
  1479   002312  0D04               	mullw	4
  1480   002314  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1481   00231A  0E02               	movlw	2
  1482   00231C  2601               	addwf	??_scan_keypad^0,f,c
  1483   00231E  5001               	movf	??_scan_keypad^0,w,c
  1484   002320  0F01               	addlw	low _keymap
  1485   002322  6E02               	movwf	(??_scan_keypad+1)^0,c
  1486   002324  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1487   00232A                     	if	1	;There is more than 1 active tblptr byte
  1488   00232A  0E20               	movlw	high __smallconst
  1489   00232C  6EF7               	movwf	tblptrh,c
  1490   00232E                     	endif
  1491   00232E                     	if	0	;tblptru may be non-zero
  1492   00232E                     	endif
  1493   00232E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1494   00232E  0E00               	movlw	low (__smallconst shr (0+16))
  1495   002330  6EF8               	movwf	tblptru,c
  1496   002332                     	endif
  1497   002332  0008               	tblrd		*
  1498   002334  50F5               	movf	tablat,w,c
  1499   002336  EFD1  F011         	goto	l78
  1500   00233A                     l83:
  1501                           
  1502                           ;Calculator.c: 199:         if (PORTBbits.RB7 == 1) { while (PORTBbits.RB7 == 1); return
      +                           keymap[row][3]; }
  1503   00233A  AECB               	btfss	203,7,c	;volatile
  1504   00233C  EFA2  F011         	goto	u71
  1505   002340  EFA4  F011         	goto	u70
  1506   002344                     u71:
  1507   002344  EFC0  F011         	goto	l813
  1508   002348                     u70:
  1509   002348                     l88:
  1510   002348  BECB               	btfsc	203,7,c	;volatile
  1511   00234A  EFA9  F011         	goto	u81
  1512   00234E  EFAB  F011         	goto	u80
  1513   002352                     u81:
  1514   002352  EFA4  F011         	goto	l88
  1515   002356                     u80:
  1516   002356  5003               	movf	scan_keypad@row^0,w,c
  1517   002358  0D04               	mullw	4
  1518   00235A  006F FFCC  F001    	movff	prodl,??_scan_keypad
  1519   002360  0E03               	movlw	3
  1520   002362  2601               	addwf	??_scan_keypad^0,f,c
  1521   002364  5001               	movf	??_scan_keypad^0,w,c
  1522   002366  0F01               	addlw	low _keymap
  1523   002368  6E02               	movwf	(??_scan_keypad+1)^0,c
  1524   00236A  0060  F00B  FFF6   	movff	??_scan_keypad+1,tblptrl
  1525   002370                     	if	1	;There is more than 1 active tblptr byte
  1526   002370  0E20               	movlw	high __smallconst
  1527   002372  6EF7               	movwf	tblptrh,c
  1528   002374                     	endif
  1529   002374                     	if	0	;tblptru may be non-zero
  1530   002374                     	endif
  1531   002374                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1532   002374  0E00               	movlw	low (__smallconst shr (0+16))
  1533   002376  6EF8               	movwf	tblptru,c
  1534   002378                     	endif
  1535   002378  0008               	tblrd		*
  1536   00237A  50F5               	movf	tablat,w,c
  1537   00237C  EFD1  F011         	goto	l78
  1538   002380                     l813:
  1539                           
  1540                           ;Calculator.c: 200:     }
  1541   002380  4A03               	infsnz	scan_keypad@row^0,f,c
  1542   002382  2A04               	incf	(scan_keypad@row+1)^0,f,c
  1543   002384  BE04               	btfsc	(scan_keypad@row+1)^0,7,c
  1544   002386  EFCE  F011         	goto	u91
  1545   00238A  5004               	movf	(scan_keypad@row+1)^0,w,c
  1546   00238C  E109               	bnz	u90
  1547   00238E  0E04               	movlw	4
  1548   002390  5C03               	subwf	scan_keypad@row^0,w,c
  1549   002392  A0D8               	btfss	status,0,c
  1550   002394  EFCE  F011         	goto	u91
  1551   002398  EFD0  F011         	goto	u90
  1552   00239C                     u91:
  1553   00239C  EF01  F011         	goto	l66
  1554   0023A0                     u90:
  1555   0023A0                     
  1556                           ;Calculator.c: 202:     return '\0';
  1557   0023A0  0E00               	movlw	0
  1558   0023A2                     l78:
  1559   0023A2  0012               	return		;funcret
  1560   0023A4                     __end_of_scan_keypad:
  1561                           	callstack 0
  1562                           
  1563 ;; *************** function _keypad_init *****************
  1564 ;; Defined at:
  1565 ;;		line 206 in file "Calculator.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1583 ;;Total ram usage:        0 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; This function calls:
  1586 ;;		Nothing
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text2
  1593   00240C                     __ptext2:
  1594                           	callstack 0
  1595   00240C                     _keypad_init:
  1596                           	callstack 30
  1597   00240C                     
  1598                           ;Calculator.c: 207:     TRISB = 0b11110000;
  1599   00240C  0EF0               	movlw	240
  1600   00240E  6EC3               	movwf	195,c	;volatile
  1601   002410                     
  1602                           ;Calculator.c: 208:     LATB = 0x00;
  1603   002410  6ABB               	clrf	187,c	;volatile
  1604   002412                     
  1605                           ;Calculator.c: 209:     ANSELB = 0x00;
  1606   002412  013A               	movlb	58	; () banked
  1607   002414  6B50               	clrf	80,b	;volatile
  1608   002416                     
  1609                           ; BSR set to: 58
  1610   002416  0012               	return		;funcret
  1611   002418                     __end_of_keypad_init:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function ___lbdiv *****************
  1615 ;; Defined at:
  1616 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lbdiv.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  dividend        1    wreg     unsigned char 
  1619 ;;  divisor         1    0[COMRAM] unsigned char 
  1620 ;; Auto vars:     Size  Location     Type
  1621 ;;  dividend        1    1[COMRAM] unsigned char 
  1622 ;;  quotient        1    3[COMRAM] unsigned char 
  1623 ;;  counter         1    2[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1633 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1634 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1637 ;;Total ram usage:        4 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text3
  1647   0023A4                     __ptext3:
  1648                           	callstack 0
  1649   0023A4                     ___lbdiv:
  1650                           	callstack 30
  1651                           
  1652                           ; BSR set to: 58
  1653                           ;incstack = 0
  1654                           ;___lbdiv@dividend stored from wreg
  1655   0023A4  6E02               	movwf	___lbdiv@dividend^0,c
  1656   0023A6  6A04               	clrf	___lbdiv@quotient^0,c
  1657   0023A8  5001               	movf	___lbdiv@divisor^0,w,c
  1658   0023AA  B4D8               	btfsc	status,2,c
  1659   0023AC  EFDA  F011         	goto	u261
  1660   0023B0  EFDC  F011         	goto	u260
  1661   0023B4                     u261:
  1662   0023B4  EFFD  F011         	goto	l967
  1663   0023B8                     u260:
  1664   0023B8  0E01               	movlw	1
  1665   0023BA  6E03               	movwf	___lbdiv@counter^0,c
  1666   0023BC  EFE3  F011         	goto	l955
  1667   0023C0                     l951:
  1668   0023C0  90D8               	bcf	status,0,c
  1669   0023C2  3601               	rlcf	___lbdiv@divisor^0,f,c
  1670   0023C4  2A03               	incf	___lbdiv@counter^0,f,c
  1671   0023C6                     l955:
  1672   0023C6  AE01               	btfss	___lbdiv@divisor^0,7,c
  1673   0023C8  EFE8  F011         	goto	u271
  1674   0023CC  EFEA  F011         	goto	u270
  1675   0023D0                     u271:
  1676   0023D0  EFE0  F011         	goto	l951
  1677   0023D4                     u270:
  1678   0023D4                     l957:
  1679   0023D4  90D8               	bcf	status,0,c
  1680   0023D6  3604               	rlcf	___lbdiv@quotient^0,f,c
  1681   0023D8  5001               	movf	___lbdiv@divisor^0,w,c
  1682   0023DA  5C02               	subwf	___lbdiv@dividend^0,w,c
  1683   0023DC  A0D8               	btfss	status,0,c
  1684   0023DE  EFF3  F011         	goto	u281
  1685   0023E2  EFF5  F011         	goto	u280
  1686   0023E6                     u281:
  1687   0023E6  EFF8  F011         	goto	l963
  1688   0023EA                     u280:
  1689   0023EA  5001               	movf	___lbdiv@divisor^0,w,c
  1690   0023EC  5E02               	subwf	___lbdiv@dividend^0,f,c
  1691   0023EE  8004               	bsf	___lbdiv@quotient^0,0,c
  1692   0023F0                     l963:
  1693   0023F0  90D8               	bcf	status,0,c
  1694   0023F2  3201               	rrcf	___lbdiv@divisor^0,f,c
  1695   0023F4  2E03               	decfsz	___lbdiv@counter^0,f,c
  1696   0023F6  EFEA  F011         	goto	l957
  1697   0023FA                     l967:
  1698   0023FA  5004               	movf	___lbdiv@quotient^0,w,c
  1699   0023FC  0012               	return		;funcret
  1700   0023FE                     __end_of___lbdiv:
  1701                           	callstack 0
  1702                           
  1703                           	psect	rparam
  1704   000001                     ___rparam_used  equ	1
  1705   000000                     ___param_bank   equ	0
  1706   000000                     __Lparam        equ	__Lrparam
  1707   000000                     __Hparam        equ	__Hrparam
  1708                           
  1709                           	psect	config
  1710                           
  1711                           ;Config register CONFIG1L @ 0x300000
  1712                           ;	External Oscillator Selection
  1713                           ;	FEXTOSC = LP, LP (crystal oscillator) optimized for 32.768 kHz; PFM set to low power
  1714                           ;	Reset Oscillator Selection
  1715                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1716   300000                     	org	3145728
  1717   300000  F8                 	db	248
  1718                           
  1719                           ;Config register CONFIG1H @ 0x300001
  1720                           ;	Clock out Enable bit
  1721                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1722                           ;	PRLOCKED One-Way Set Enable bit
  1723                           ;	PR1WAY = ON, PRLOCK bit can be cleared and set only once
  1724                           ;	Clock Switch Enable bit
  1725                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1726                           ;	Fail-Safe Clock Monitor Enable bit
  1727                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1728   300001                     	org	3145729
  1729   300001  FF                 	db	255
  1730                           
  1731                           ;Config register CONFIG2L @ 0x300002
  1732                           ;	MCLR Enable bit
  1733                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1734                           ;	Power-up timer selection bits
  1735                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1736                           ;	Multi-vector enable bit
  1737                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1738                           ;	IVTLOCK bit One-way set enable bit
  1739                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  1740                           ;	Low Power BOR Enable bit
  1741                           ;	LPBOREN = OFF, ULPBOR disabled
  1742                           ;	Brown-out Reset Enable bits
  1743                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1744   300002                     	org	3145730
  1745   300002  FF                 	db	255
  1746                           
  1747                           ;Config register CONFIG2H @ 0x300003
  1748                           ;	Brown-out Reset Voltage Selection bits
  1749                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  1750                           ;	ZCD Disable bit
  1751                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  1752                           ;	PPSLOCK bit One-Way Set Enable bit
  1753                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  1754                           ;	Stack Full/Underflow Reset Enable bit
  1755                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1756                           ;	Debugger Enable bit
  1757                           ;	DEBUG = OFF, Background debugger disabled
  1758                           ;	Extended Instruction Set Enable bit
  1759                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1760   300003                     	org	3145731
  1761   300003  FF                 	db	255
  1762                           
  1763                           ;Config register CONFIG3L @ 0x300004
  1764                           ;	WDT Period selection bits
  1765                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1766                           ;	WDT operating mode
  1767                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1768   300004                     	org	3145732
  1769   300004  9F                 	db	159
  1770                           
  1771                           ;Config register CONFIG3H @ 0x300005
  1772                           ;	WDT Window Select bits
  1773                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1774                           ;	WDT input clock selector
  1775                           ;	WDTCCS = SC, Software Control
  1776   300005                     	org	3145733
  1777   300005  FF                 	db	255
  1778                           
  1779                           ;Config register CONFIG4L @ 0x300006
  1780                           ;	Boot Block Size selection bits
  1781                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1782                           ;	Boot Block enable bit
  1783                           ;	BBEN = OFF, Boot block disabled
  1784                           ;	Storage Area Flash enable bit
  1785                           ;	SAFEN = OFF, SAF disabled
  1786                           ;	Application Block write protection bit
  1787                           ;	WRTAPP = OFF, Application Block not write protected
  1788   300006                     	org	3145734
  1789   300006  FF                 	db	255
  1790                           
  1791                           ;Config register CONFIG4H @ 0x300007
  1792                           ;	Boot Block Write Protection bit
  1793                           ;	WRTB = OFF, Boot Block not write-protected
  1794                           ;	Configuration Register Write Protection bit
  1795                           ;	WRTC = OFF, Configuration registers not write-protected
  1796                           ;	Data EEPROM Write Protection bit
  1797                           ;	WRTD = OFF, Data EEPROM not write-protected
  1798                           ;	SAF Write protection bit
  1799                           ;	WRTSAF = OFF, SAF not Write Protected
  1800                           ;	Low Voltage Programming Enable bit
  1801                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1802   300007                     	org	3145735
  1803   300007  FF                 	db	255
  1804                           
  1805                           ;Config register CONFIG5L @ 0x300008
  1806                           ;	PFM and Data EEPROM Code Protection bit
  1807                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1808   300008                     	org	3145736
  1809   300008  FF                 	db	255
  1810                           
  1811                           ;Config register CONFIG5H @ 0x300009
  1812                           ;	unspecified, using default values
  1813   300009                     	org	3145737
  1814   300009  FF                 	db	255
  1815                           tosu	equ	0x3FFF
  1816                           tosh	equ	0x3FFE
  1817                           tosl	equ	0x3FFD
  1818                           stkptr	equ	0x3FFC
  1819                           pclatu	equ	0x3FFB
  1820                           pclath	equ	0x3FFA
  1821                           pcl	equ	0x3FF9
  1822                           tblptru	equ	0x3FF8
  1823                           tblptrh	equ	0x3FF7
  1824                           tblptrl	equ	0x3FF6
  1825                           tablat	equ	0x3FF5
  1826                           prodh	equ	0x3FF4
  1827                           prodl	equ	0x3FF3
  1828                           indf0	equ	0x3FEF
  1829                           postinc0	equ	0x3FEE
  1830                           postdec0	equ	0x3FED
  1831                           preinc0	equ	0x3FEC
  1832                           plusw0	equ	0x3FEB
  1833                           fsr0h	equ	0x3FEA
  1834                           fsr0l	equ	0x3FE9
  1835                           wreg	equ	0x3FE8
  1836                           indf1	equ	0x3FE7
  1837                           postinc1	equ	0x3FE6
  1838                           postdec1	equ	0x3FE5
  1839                           preinc1	equ	0x3FE4
  1840                           plusw1	equ	0x3FE3
  1841                           fsr1h	equ	0x3FE2
  1842                           fsr1l	equ	0x3FE1
  1843                           bsr	equ	0x3FE0
  1844                           indf2	equ	0x3FDF
  1845                           postinc2	equ	0x3FDE
  1846                           postdec2	equ	0x3FDD
  1847                           preinc2	equ	0x3FDC
  1848                           plusw2	equ	0x3FDB
  1849                           fsr2h	equ	0x3FDA
  1850                           fsr2l	equ	0x3FD9
  1851                           status	equ	0x3FD8

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      14
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___lbdiv
    _main->_scan_keypad

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     593
                                              4 COMRAM     6     6      0
                            ___lbdiv
                        _keypad_init
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (1) _scan_keypad                                          4     4      0     105
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lbdiv                                              4     3      1     171
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lbdiv
   _keypad_init
   _scan_keypad

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            8191      0       0      0.0%
BITBIGSFRllh      1386      0       0      0.0%
BITBIGSFRlll       592      0       0      0.0%
BITBANK31          256      0       0      0.0%
BANK31             256      0       0      0.0%
BITBANK30          256      0       0      0.0%
BANK30             256      0       0      0.0%
BITBANK29          256      0       0      0.0%
BANK29             256      0       0      0.0%
BITBANK28          256      0       0      0.0%
BANK28             256      0       0      0.0%
BITBANK27          256      0       0      0.0%
BANK27             256      0       0      0.0%
BITBANK26          256      0       0      0.0%
BANK26             256      0       0      0.0%
BITBANK25          256      0       0      0.0%
BANK25             256      0       0      0.0%
BITBANK24          256      0       0      0.0%
BANK24             256      0       0      0.0%
BITBANK23          256      0       0      0.0%
BANK23             256      0       0      0.0%
BITBANK22          256      0       0      0.0%
BANK22             256      0       0      0.0%
BITBANK21          256      0       0      0.0%
BANK21             256      0       0      0.0%
BITBANK20          256      0       0      0.0%
BANK20             256      0       0      0.0%
BITBANK19          256      0       0      0.0%
BANK19             256      0       0      0.0%
BITBANK18          256      0       0      0.0%
BANK18             256      0       0      0.0%
BITBANK17          256      0       0      0.0%
BANK17             256      0       0      0.0%
BITBANK16          256      0       0      0.0%
BANK16             256      0       0      0.0%
BITBANK15          256      0       0      0.0%
BANK15             256      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     10      14     14.7%
BITBIGSFRh          52      0       0      0.0%
BITBIGSFRlh         15      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      14      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Apr 06 09:38:40 2025

                     l52 21AA                       l38 21F2                       l71 2214  
                     l80 22BC                       l72 221A                       l56 217E  
                     l73 2220                       l74 22AE                       l66 2202  
                     l83 233A                       l75 2280                       l84 2302  
                     l93 2416                       l69 220E                       l78 23A2  
                     l79 22F4                       l88 2348                       u10 2280  
                     u11 227C                       u20 228E                       u21 228A  
                     u30 22BC                       u31 22B8                       u40 22CA  
                     u41 22C6                       u50 2302                       u51 22FE  
                     u60 2310                       u61 230C                       u70 2348  
                     u71 2344                       u80 2356                       u81 2352  
                     u90 23A0                       u91 239C                       _op 000C  
                    l502 23FC                      l803 2310                      l813 2380  
                    l815 2384                      l817 23A0                      l809 2356  
                    l771 2410                      l773 2412                      l951 23C0  
                    l791 228E                      l783 2226                      l775 21FA  
                    l961 23EE                      l953 23C4                      l945 23A6  
                    l769 240C                      l785 2262                      l963 23F0  
                    l955 23C6                      l947 23A8                      l787 2272  
                    l971 2012                      l965 23F4                      l957 23D4  
                    l949 23B8                      l797 22CA                      l981 2024  
                    l973 2016                      l959 23EA                      l967 23FA  
                    l991 2078                      l983 2034                      l975 2018  
                    l993 2088                      l985 204C                      l977 201C  
                    l995 2092                      l987 205C                      l979 201E  
                    l997 209C                      l989 206C                      l999 20AE  
                    u300 205C                      u301 2058                      u310 206C  
                    u311 2068                      u400 216E                      u320 2088  
                    u401 216A                      u321 2084                      u410 21E4  
                    u330 20AE                      u411 21E0                      u331 20AA  
                    u260 23B8                      u340 20D4                      u261 23B4  
                    u341 20D0                      u270 23D4                      u350 20E6  
                    u271 23D0                      u351 20E2                      u280 23EA  
                    u360 20F8                      u281 23E6                      u361 20F4  
                    u370 210A                      u290 2034                      u371 2106  
                    u427 203E                      u291 2030                      u380 211A  
                    u437 21C2                      u381 2116                      u390 2138  
                    u447 2268                      u391 2134                      wreg 3FE8  
                   l1001 20B8                     l1011 210A                     l1003 20C2  
                   l1021 2138                     l1013 211A                     l1005 20D4  
                   l1031 216E                     l1023 213C                     l1015 211E  
                   l1007 20E6                     l1025 2146                     l1041 21D2  
                   l1009 20F8                     l1043 21E4                     l1027 2150  
                   l1035 2184                     l1019 2126                     l1037 21B8  
                   l1029 215E                     l1065 223C                     _LATB 3FBB  
                   _LATD 3FBD                     _main 2012                     prodl 3FF3  
                   start FFFC             ___param_bank 0000                    ?_main 0001  
        __end_of___lbdiv 23FE                    _TRISB 3FC3                    _TRISD 3FC5  
           ?_keypad_init 0001                    _state 000B                    tablat 3FF5  
                  status 3FD8          ___lbdiv@divisor 0001             ?_scan_keypad 0001  
        ___lbdiv@counter 0003          __initialization 23FE             __end_of_main 21FA  
                 ??_main 0005            __activetblptr 0003                   _ANSELB 3A50  
                 _ANSELD 3A70                ??___lbdiv 0002                   _keymap 2001  
                 isa$std 0001             __mediumconst 2000                   tblptrh 3FF7  
                 tblptrl 3FF6                   tblptru 3FF8         ___lbdiv@dividend 0002  
             __accesstop 0060  __end_of__initialization 2406            ___rparam_used 0001  
         scan_keypad@row 0003           __pcstackCOMRAM 0001         ___lbdiv@quotient 0004  
            _X_Input_REG 000E        main@Operation_REG 000A   main@Display_Result_REG 0009  
            _Y_Input_REG 000D                  __Hparam 0000                  __Lparam 0000  
                ___lbdiv 23A4             __psmallconst 2000                  __pcinit 23FE  
                __ramtop 2000                  __ptext0 2012                  __ptext1 21FA  
                __ptext2 240C                  __ptext3 23A4     end_of_initialization 2406  
              _PORTBbits 3FCB           __end_of_keymap 2011      start_initialization 23FE  
            __pbssCOMRAM 000B            ??_keypad_init 0001            ??_scan_keypad 0001  
               ?___lbdiv 0001              __smallconst 2000                 _LATBbits 3FBB  
    __end_of_keypad_init 2418      __end_of_scan_keypad 23A4                main@digit 0007  
               __Hrparam 0000                 __Lrparam 0000              _keypad_init 240C  
            _scan_keypad 21FA                 isa$xinst 0000  
